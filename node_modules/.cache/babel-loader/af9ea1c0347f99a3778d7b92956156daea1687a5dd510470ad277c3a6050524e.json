{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = ({\n  weekDates\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n\n  // Fetch employee and timesheet data from Firestore\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), snapshot => {\n        const employeeData = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe;\n    };\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, snapshot => {\n        const updatedTimesheetData = {};\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe;\n    };\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n\n  // Function to get all dates for the current month\n  const getMonthDates = (year, month) => {\n    const dates = [];\n    const date = new Date(year, month - 1, 1); // Start at the 1st day of the month\n\n    while (date.getMonth() === month - 1) {\n      dates.push(date.toISOString().split('T')[0]); // Push the date in YYYY-MM-DD format\n      date.setDate(date.getDate() + 1); // Increment the day\n    }\n    return dates;\n  };\n\n  // Handle the time settings for a specific employee and date\n  const handleSetTime = (employeeId, date) => {\n    var _timesheetData$employ, _timesheetData$employ2, _timesheetData$employ3, _timesheetData$employ4, _timesheetData$employ5, _timesheetData$employ6;\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setStartTime(((_timesheetData$employ = timesheetData[employeeId]) === null || _timesheetData$employ === void 0 ? void 0 : (_timesheetData$employ2 = _timesheetData$employ[date]) === null || _timesheetData$employ2 === void 0 ? void 0 : _timesheetData$employ2.startTime) || \"\");\n    setEndTime(((_timesheetData$employ3 = timesheetData[employeeId]) === null || _timesheetData$employ3 === void 0 ? void 0 : (_timesheetData$employ4 = _timesheetData$employ3[date]) === null || _timesheetData$employ4 === void 0 ? void 0 : _timesheetData$employ4.endTime) || \"\");\n    setIsHoliday(((_timesheetData$employ5 = timesheetData[employeeId]) === null || _timesheetData$employ5 === void 0 ? void 0 : (_timesheetData$employ6 = _timesheetData$employ5[date]) === null || _timesheetData$employ6 === void 0 ? void 0 : _timesheetData$employ6.isHoliday) || false);\n    setModalOpen(true);\n  };\n\n  // Calculate monthly totals for an employee\n  const calculateMonthlyTotal = (employeeId, allMonthDates) => {\n    let monthlyTotal = {\n      normalTime: 0,\n      nightShift: 0,\n      holidayTime: 0,\n      totalTime: 0\n    };\n    allMonthDates.forEach(date => {\n      var _timesheetData$employ7;\n      const data = ((_timesheetData$employ7 = timesheetData[employeeId]) === null || _timesheetData$employ7 === void 0 ? void 0 : _timesheetData$employ7[date]) || {}; // Default to empty object if no data\n      monthlyTotal.normalTime += data.normalTime || 0; // Default to 0 if data is missing\n      monthlyTotal.nightShift += data.nightShift || 0;\n      monthlyTotal.holidayTime += data.holidayTime || 0;\n      monthlyTotal.totalTime += data.totalTime || 0;\n    });\n    return monthlyTotal;\n  };\n\n  // Save timesheet data to Firestore\n  const saveTimesheetDataToFirebase = async () => {\n    try {\n      var _await$getDoc$data;\n      const timesheetDocRef = doc(db, \"timesheets\", selectedEmployee);\n      const timesheetData = ((_await$getDoc$data = (await getDoc(timesheetDocRef)).data()) === null || _await$getDoc$data === void 0 ? void 0 : _await$getDoc$data.hours) || {};\n      timesheetData[selectedDate] = {\n        startTime,\n        endTime,\n        totalTime: parseFloat(totalTime),\n        nightShift: parseFloat(nightShiftHours),\n        holidayTime: parseFloat(holidayTime),\n        normalTime: parseFloat(normalTime),\n        isHoliday\n      };\n      await setDoc(timesheetDocRef, {\n        hours: timesheetData\n      });\n      setModalOpen(false);\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Shift Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), weekDates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Monthly Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => {\n          const monthDates = getMonthDates(new Date().getFullYear(), new Date().getMonth() + 1); // Get all dates for the current month\n          const monthlyTotal = calculateMonthlyTotal(employee.id, monthDates);\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                rowSpan: 4,\n                children: employee.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Normal Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), weekDates.map(date => {\n                var _timesheetData$employ8, _timesheetData$employ9, _timesheetData$employ10, _timesheetData$employ11;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ8 = timesheetData[employee.id]) === null || _timesheetData$employ8 === void 0 ? void 0 : (_timesheetData$employ9 = _timesheetData$employ8[date]) === null || _timesheetData$employ9 === void 0 ? void 0 : _timesheetData$employ9.normalTime) === 0 ? \"0 hrs\" : (_timesheetData$employ10 = timesheetData[employee.id]) !== null && _timesheetData$employ10 !== void 0 && (_timesheetData$employ11 = _timesheetData$employ10[date]) !== null && _timesheetData$employ11 !== void 0 && _timesheetData$employ11.normalTime ? `${timesheetData[employee.id][date].normalTime} hrs` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [monthlyTotal.normalTime.toFixed(2), \" hrs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Night Shift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this), weekDates.map(date => {\n                var _timesheetData$employ12, _timesheetData$employ13, _timesheetData$employ14, _timesheetData$employ15;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ12 = timesheetData[employee.id]) === null || _timesheetData$employ12 === void 0 ? void 0 : (_timesheetData$employ13 = _timesheetData$employ12[date]) === null || _timesheetData$employ13 === void 0 ? void 0 : _timesheetData$employ13.nightShift) === 0 ? \"0 hrs\" : (_timesheetData$employ14 = timesheetData[employee.id]) !== null && _timesheetData$employ14 !== void 0 && (_timesheetData$employ15 = _timesheetData$employ14[date]) !== null && _timesheetData$employ15 !== void 0 && _timesheetData$employ15.nightShift ? `${timesheetData[employee.id][date].nightShift} hrs` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [monthlyTotal.nightShift.toFixed(2), \" hrs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Holiday Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this), weekDates.map(date => {\n                var _timesheetData$employ16, _timesheetData$employ17, _timesheetData$employ18, _timesheetData$employ19;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ16 = timesheetData[employee.id]) === null || _timesheetData$employ16 === void 0 ? void 0 : (_timesheetData$employ17 = _timesheetData$employ16[date]) === null || _timesheetData$employ17 === void 0 ? void 0 : _timesheetData$employ17.holidayTime) === 0 ? \"0 hrs\" : (_timesheetData$employ18 = timesheetData[employee.id]) !== null && _timesheetData$employ18 !== void 0 && (_timesheetData$employ19 = _timesheetData$employ18[date]) !== null && _timesheetData$employ19 !== void 0 && _timesheetData$employ19.holidayTime ? `${timesheetData[employee.id][date].holidayTime} hrs` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [monthlyTotal.holidayTime.toFixed(2), \" hrs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Total Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this), weekDates.map(date => {\n                var _timesheetData$employ20, _timesheetData$employ21, _timesheetData$employ22, _timesheetData$employ23;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ20 = timesheetData[employee.id]) === null || _timesheetData$employ20 === void 0 ? void 0 : (_timesheetData$employ21 = _timesheetData$employ20[date]) === null || _timesheetData$employ21 === void 0 ? void 0 : _timesheetData$employ21.totalTime) === 0 ? \"0 hrs\" : (_timesheetData$employ22 = timesheetData[employee.id]) !== null && _timesheetData$employ22 !== void 0 && (_timesheetData$employ23 = _timesheetData$employ22[date]) !== null && _timesheetData$employ23 !== void 0 && _timesheetData$employ23.totalTime ? `${timesheetData[employee.id][date].totalTime} hrs` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [monthlyTotal.totalTime.toFixed(2), \" hrs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: e => setStartTime(e.target.value),\n          placeholder: \"Start Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: endTime,\n          onChange: e => setEndTime(e.target.value),\n          placeholder: \"End Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: nextDay,\n            onChange: () => setNextDay(!nextDay)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), \"Next Day\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isHoliday,\n            onChange: () => setIsHoliday(!isHoliday)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), \"Holiday\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveTimesheetDataToFirebase,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"LuJF93aoCyJzjR3hVD8EVfLaOJo=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["React","useState","useEffect","collection","onSnapshot","doc","setDoc","getDoc","db","jsxDEV","_jsxDEV","TimesheetList","weekDates","_s","employees","setEmployees","timesheetData","setTimesheetData","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","nextDay","setNextDay","isHoliday","setIsHoliday","totalTime","setTotalTime","nightShiftHours","setNightShiftHours","holidayTime","setHolidayTime","normalTime","setNormalTime","fetchEmployees","unsubscribe","snapshot","employeeData","docs","map","id","data","fetchTimesheetData","timesheetDataRef","updatedTimesheetData","forEach","employeeId","hours","date","record","Object","entries","parseFloat","nightShift","Boolean","getMonthDates","year","month","dates","Date","getMonth","push","toISOString","split","setDate","getDate","handleSetTime","_timesheetData$employ","_timesheetData$employ2","_timesheetData$employ3","_timesheetData$employ4","_timesheetData$employ5","_timesheetData$employ6","calculateMonthlyTotal","allMonthDates","monthlyTotal","_timesheetData$employ7","saveTimesheetDataToFirebase","_await$getDoc$data","timesheetDocRef","error","console","children","border","fileName","_jsxFileName","lineNumber","columnNumber","employee","monthDates","getFullYear","Fragment","rowSpan","name","_timesheetData$employ8","_timesheetData$employ9","_timesheetData$employ10","_timesheetData$employ11","onClick","toFixed","_timesheetData$employ12","_timesheetData$employ13","_timesheetData$employ14","_timesheetData$employ15","_timesheetData$employ16","_timesheetData$employ17","_timesheetData$employ18","_timesheetData$employ19","_timesheetData$employ20","_timesheetData$employ21","_timesheetData$employ22","_timesheetData$employ23","type","value","onChange","e","target","placeholder","checked","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\n\nconst TimesheetList = ({ weekDates }) => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n\n  // Fetch employee and timesheet data from Firestore\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), (snapshot) => {\n        const employeeData = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe;\n    };\n\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, (snapshot) => {\n        const updatedTimesheetData = {};\n        snapshot.forEach((doc) => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0,\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe;\n    };\n\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n\n  // Function to get all dates for the current month\n  const getMonthDates = (year, month) => {\n    const dates = [];\n    const date = new Date(year, month - 1, 1); // Start at the 1st day of the month\n\n    while (date.getMonth() === month - 1) {\n      dates.push(date.toISOString().split('T')[0]); // Push the date in YYYY-MM-DD format\n      date.setDate(date.getDate() + 1); // Increment the day\n    }\n\n    return dates;\n  };\n\n  // Handle the time settings for a specific employee and date\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setStartTime(timesheetData[employeeId]?.[date]?.startTime || \"\");\n    setEndTime(timesheetData[employeeId]?.[date]?.endTime || \"\");\n    setIsHoliday(timesheetData[employeeId]?.[date]?.isHoliday || false);\n    setModalOpen(true);\n  };\n\n  // Calculate monthly totals for an employee\n  const calculateMonthlyTotal = (employeeId, allMonthDates) => {\n    let monthlyTotal = {\n      normalTime: 0,\n      nightShift: 0,\n      holidayTime: 0,\n      totalTime: 0,\n    };\n\n    allMonthDates.forEach((date) => {\n      const data = timesheetData[employeeId]?.[date] || {}; // Default to empty object if no data\n      monthlyTotal.normalTime += data.normalTime || 0; // Default to 0 if data is missing\n      monthlyTotal.nightShift += data.nightShift || 0;\n      monthlyTotal.holidayTime += data.holidayTime || 0;\n      monthlyTotal.totalTime += data.totalTime || 0;\n    });\n\n    return monthlyTotal;\n  };\n\n  // Save timesheet data to Firestore\n  const saveTimesheetDataToFirebase = async () => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", selectedEmployee);\n      const timesheetData = (await getDoc(timesheetDocRef)).data()?.hours || {};\n      timesheetData[selectedDate] = {\n        startTime,\n        endTime,\n        totalTime: parseFloat(totalTime),\n        nightShift: parseFloat(nightShiftHours),\n        holidayTime: parseFloat(holidayTime),\n        normalTime: parseFloat(normalTime),\n        isHoliday,\n      };\n      await setDoc(timesheetDocRef, { hours: timesheetData });\n      setModalOpen(false);\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Shift Type</th>\n            {weekDates.map((date) => (\n              <th key={date}>{date}</th>\n            ))}\n            <th>Monthly Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => {\n            const monthDates = getMonthDates(new Date().getFullYear(), new Date().getMonth() + 1); // Get all dates for the current month\n            const monthlyTotal = calculateMonthlyTotal(employee.id, monthDates);\n            return (\n              <React.Fragment key={employee.id}>\n                <tr>\n                  <td rowSpan={4}>{employee.name}</td>\n                  <td>Normal Time</td>\n                  {weekDates.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.normalTime === 0\n                        ? \"0 hrs\"\n                        : timesheetData[employee.id]?.[date]?.normalTime\n                        ? `${timesheetData[employee.id][date].normalTime} hrs`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{monthlyTotal.normalTime.toFixed(2)} hrs</td>\n                </tr>\n                <tr>\n                  <td>Night Shift</td>\n                  {weekDates.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.nightShift === 0\n                        ? \"0 hrs\"\n                        : timesheetData[employee.id]?.[date]?.nightShift\n                        ? `${timesheetData[employee.id][date].nightShift} hrs`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{monthlyTotal.nightShift.toFixed(2)} hrs</td>\n                </tr>\n                <tr>\n                  <td>Holiday Time</td>\n                  {weekDates.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.holidayTime === 0\n                        ? \"0 hrs\"\n                        : timesheetData[employee.id]?.[date]?.holidayTime\n                        ? `${timesheetData[employee.id][date].holidayTime} hrs`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{monthlyTotal.holidayTime.toFixed(2)} hrs</td>\n                </tr>\n                <tr>\n                  <td>Total Time</td>\n                  {weekDates.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.totalTime === 0\n                        ? \"0 hrs\"\n                        : timesheetData[employee.id]?.[date]?.totalTime\n                        ? `${timesheetData[employee.id][date].totalTime} hrs`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{monthlyTotal.totalTime.toFixed(2)} hrs</td>\n                </tr>\n              </React.Fragment>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {modalOpen && (\n        <div>\n          <div>\n            <input\n              type=\"time\"\n              value={startTime}\n              onChange={(e) => setStartTime(e.target.value)}\n              placeholder=\"Start Time\"\n            />\n            <input\n              type=\"time\"\n              value={endTime}\n              onChange={(e) => setEndTime(e.target.value)}\n              placeholder=\"End Time\"\n            />\n          </div>\n          <div>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={nextDay}\n                onChange={() => setNextDay(!nextDay)}\n              />\n              Next Day\n            </label>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={isHoliday}\n                onChange={() => setIsHoliday(!isHoliday)}\n              />\n              Holiday\n            </label>\n          </div>\n          <button onClick={saveTimesheetDataToFirebase}>Save</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}