{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { collection, getDocs, updateDoc, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport TimesheetModal from \"./TimesheetModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = ({\n  weekDates\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [totalTime, setTotalTime] = useState(0);\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n    fetchEmployees();\n  }, []);\n  const calculateTotalTime = (start, end) => {\n    const startParts = start.split(\":\").map(Number);\n    const endParts = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startParts[0], startParts[1], 0);\n    const endDate = new Date();\n    endDate.setHours(endParts[0], endParts[1], 0);\n    if (endDate < startDate) {\n      endDate.setDate(endDate.getDate() + 1);\n    }\n    const diff = (endDate - startDate) / (1000 * 60 * 60);\n    setTotalTime(diff.toFixed(2));\n  };\n  const handleInputChange = async (employeeId, date, start, end, totalTime) => {\n    setTimesheetData(prevData => {\n      const newData = {\n        ...prevData\n      };\n      newData[employeeId][date] = {\n        startTime: start,\n        endTime: end,\n        totalTime\n      };\n      return newData;\n    });\n    await saveTimesheetDataToFirebase(employeeId, date, start, end, totalTime);\n  };\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime) => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId);\n      const timesheetData = await getDoc(timesheetDocRef);\n      let updatedData = timesheetData.exists() ? timesheetData.data().hours : {};\n      updatedData[date] = {\n        startTime: start,\n        endTime: end,\n        totalTime\n      };\n      await setDoc(timesheetDocRef, {\n        hours: updatedData\n      });\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n  const fetchTimesheetData = async () => {\n    try {\n      const querySnapshot = await getDocs(collection(db, \"timesheets\"));\n      const updatedTimesheetData = {};\n      querySnapshot.forEach(doc => {\n        updatedTimesheetData[doc.id] = doc.data().hours;\n      });\n      setTimesheetData(updatedTimesheetData);\n    } catch (error) {\n      console.error(\"Error fetching timesheet data:\", error);\n    }\n  };\n  useEffect(() => {\n    if (employees.length > 0 && weekDates.length > 0) {\n      fetchTimesheetData();\n    }\n  }, [employees, weekDates]);\n  const calculateWeeklyTotal = useMemo(() => employeeId => {\n    return weekDates.reduce((total, date) => {\n      var _timesheetData$employ, _timesheetData$employ2;\n      return total + (((_timesheetData$employ = timesheetData[employeeId]) === null || _timesheetData$employ === void 0 ? void 0 : (_timesheetData$employ2 = _timesheetData$employ[date]) === null || _timesheetData$employ2 === void 0 ? void 0 : _timesheetData$employ2.totalTime) || 0);\n    }, 0).toFixed(2);\n  }, [timesheetData, weekDates]);\n  const calculateMonthlyTotal = useMemo(() => employeeId => {\n    const firstOfMonth = new Date(weekDates[0]);\n    firstOfMonth.setDate(1);\n    const allDates = [];\n    for (let date = new Date(firstOfMonth); date <= new Date(weekDates[weekDates.length - 1]); date.setDate(date.getDate() + 1)) {\n      allDates.push(date.toISOString().split('T')[0]);\n    }\n    return allDates.reduce((total, date) => {\n      var _timesheetData$employ3, _timesheetData$employ4;\n      return total + (((_timesheetData$employ3 = timesheetData[employeeId]) === null || _timesheetData$employ3 === void 0 ? void 0 : (_timesheetData$employ4 = _timesheetData$employ3[date]) === null || _timesheetData$employ4 === void 0 ? void 0 : _timesheetData$employ4.totalTime) || 0);\n    }, 0).toFixed(2);\n  }, [timesheetData, weekDates]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), weekDates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Weekly Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Monthly Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), weekDates.map(date => {\n            var _timesheetData$employ5;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSetTime(employee.id, date),\n                children: \"Set Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: ((_timesheetData$employ5 = timesheetData[employee.id]) === null || _timesheetData$employ5 === void 0 ? void 0 : _timesheetData$employ5[date]) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: `From ${timesheetData[employee.id][date].startTime} - ${timesheetData[employee.id][date].endTime}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: `${timesheetData[employee.id][date].totalTime} hours`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [calculateWeeklyTotal(employee.id), \" hours\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [calculateMonthlyTotal(employee.id), \" hours\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(TimesheetModal, {\n      startTime: startTime,\n      endTime: endTime,\n      totalTime: totalTime,\n      setStartTime: setStartTime,\n      setEndTime: setEndTime,\n      calculateTotalTime: calculateTotalTime,\n      handleInputChange: handleInputChange,\n      handleCloseModal: handleCloseModal,\n      selectedEmployee: selectedEmployee,\n      selectedDate: selectedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"gXTeXIsREHfAwQrGukUPpwyQCWc=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","collection","getDocs","updateDoc","doc","setDoc","getDoc","db","TimesheetModal","jsxDEV","_jsxDEV","TimesheetList","weekDates","_s","employees","setEmployees","timesheetData","setTimesheetData","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","totalTime","setTotalTime","fetchEmployees","querySnapshot","employeeData","docs","map","id","data","error","console","calculateTotalTime","start","end","startParts","split","Number","endParts","startDate","Date","setHours","endDate","setDate","getDate","diff","toFixed","handleInputChange","employeeId","date","prevData","newData","saveTimesheetDataToFirebase","timesheetDocRef","updatedData","exists","hours","fetchTimesheetData","updatedTimesheetData","forEach","length","calculateWeeklyTotal","reduce","total","_timesheetData$employ","_timesheetData$employ2","calculateMonthlyTotal","firstOfMonth","allDates","push","toISOString","_timesheetData$employ3","_timesheetData$employ4","children","border","fileName","_jsxFileName","lineNumber","columnNumber","employee","name","_timesheetData$employ5","onClick","handleSetTime","handleCloseModal","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport { collection, getDocs, updateDoc, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport TimesheetModal from \"./TimesheetModal\";\n\nconst TimesheetList = ({ weekDates }) => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [totalTime, setTotalTime] = useState(0);\n\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n    fetchEmployees();\n  }, []);\n\n  const calculateTotalTime = (start, end) => {\n    const startParts = start.split(\":\").map(Number);\n    const endParts = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startParts[0], startParts[1], 0);\n    const endDate = new Date();\n    endDate.setHours(endParts[0], endParts[1], 0);\n\n    if (endDate < startDate) {\n      endDate.setDate(endDate.getDate() + 1);\n    }\n\n    const diff = (endDate - startDate) / (1000 * 60 * 60);\n    setTotalTime(diff.toFixed(2));\n  };\n\n  const handleInputChange = async (employeeId, date, start, end, totalTime) => {\n    setTimesheetData((prevData) => {\n      const newData = { ...prevData };\n      newData[employeeId][date] = { startTime: start, endTime: end, totalTime };\n      return newData;\n    });\n\n    await saveTimesheetDataToFirebase(employeeId, date, start, end, totalTime);\n  };\n\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime) => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId);\n      const timesheetData = await getDoc(timesheetDocRef);\n      let updatedData = timesheetData.exists() ? timesheetData.data().hours : {};\n      updatedData[date] = { startTime: start, endTime: end, totalTime };\n      await setDoc(timesheetDocRef, { hours: updatedData });\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  const fetchTimesheetData = async () => {\n    try {\n      const querySnapshot = await getDocs(collection(db, \"timesheets\"));\n      const updatedTimesheetData = {};\n      querySnapshot.forEach((doc) => {\n        updatedTimesheetData[doc.id] = doc.data().hours;\n      });\n      setTimesheetData(updatedTimesheetData);\n    } catch (error) {\n      console.error(\"Error fetching timesheet data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (employees.length > 0 && weekDates.length > 0) {\n      fetchTimesheetData();\n    }\n  }, [employees, weekDates]);\n\n  const calculateWeeklyTotal = useMemo(\n    () => (employeeId) => {\n      return weekDates.reduce((total, date) => {\n        return total + (timesheetData[employeeId]?.[date]?.totalTime || 0);\n      }, 0).toFixed(2);\n    },\n    [timesheetData, weekDates]\n  );\n\n  const calculateMonthlyTotal = useMemo(\n    () => (employeeId) => {\n      const firstOfMonth = new Date(weekDates[0]);\n      firstOfMonth.setDate(1);\n      \n      const allDates = [];\n      for (let date = new Date(firstOfMonth); date <= new Date(weekDates[weekDates.length - 1]); date.setDate(date.getDate() + 1)) {\n        allDates.push(date.toISOString().split('T')[0]);\n      }\n      \n      return allDates.reduce((total, date) => {\n        return total + (timesheetData[employeeId]?.[date]?.totalTime || 0);\n      }, 0).toFixed(2);\n    },\n    [timesheetData, weekDates]\n  );\n\n  return (\n    <div>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Employee</th>\n            {weekDates.map((date) => (\n              <th key={date}>{date}</th>\n            ))}\n            <th>Weekly Total</th>\n            <th>Monthly Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => (\n            <tr key={employee.id}>\n              <td>{employee.name}</td>\n              {weekDates.map((date) => (\n                <td key={date}>\n                  <button onClick={() => handleSetTime(employee.id, date)}>Set Time</button>\n                  <div>\n                    {timesheetData[employee.id]?.[date] && (\n                      <div>\n                        <span>{`From ${timesheetData[employee.id][date].startTime} - ${timesheetData[employee.id][date].endTime}`}</span>\n                        <br />\n                        <strong>{`${timesheetData[employee.id][date].totalTime} hours`}</strong>\n                      </div>\n                    )}\n                  </div>\n                </td>\n              ))}\n              <td>{calculateWeeklyTotal(employee.id)} hours</td>\n              <td>{calculateMonthlyTotal(employee.id)} hours</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      \n      {modalOpen && (\n        <TimesheetModal\n          startTime={startTime}\n          endTime={endTime}\n          totalTime={totalTime}\n          setStartTime={setStartTime}\n          setEndTime={setEndTime}\n          calculateTotalTime={calculateTotalTime}\n          handleInputChange={handleInputChange}\n          handleCloseModal={handleCloseModal}\n          selectedEmployee={selectedEmployee}\n          selectedDate={selectedDate}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,SAASC,UAAU,EAAEC,OAAO,EAAEC,SAAS,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;AACxF,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACsB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC8B,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAM+B,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,aAAa,GAAG,MAAM7B,OAAO,CAACD,UAAU,CAACM,EAAE,EAAE,WAAW,CAAC,CAAC;QAChE,MAAMyB,YAAY,GAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAAC9B,GAAG,KAAK;UAClD+B,EAAE,EAAE/B,GAAG,CAAC+B,EAAE;UACV,GAAG/B,GAAG,CAACgC,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QACHrB,YAAY,CAACiB,YAAY,CAAC;MAC5B,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACDP,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAK;IACzC,MAAMC,UAAU,GAAGF,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC,CAACT,GAAG,CAACU,MAAM,CAAC;IAC/C,MAAMC,QAAQ,GAAGJ,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC,CAACT,GAAG,CAACU,MAAM,CAAC;IAC3C,MAAME,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC5BD,SAAS,CAACE,QAAQ,CAACN,UAAU,CAAC,CAAC,CAAC,EAAEA,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,MAAMO,OAAO,GAAG,IAAIF,IAAI,CAAC,CAAC;IAC1BE,OAAO,CAACD,QAAQ,CAACH,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAE7C,IAAII,OAAO,GAAGH,SAAS,EAAE;MACvBG,OAAO,CAACC,OAAO,CAACD,OAAO,CAACE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IACxC;IAEA,MAAMC,IAAI,GAAG,CAACH,OAAO,GAAGH,SAAS,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;IACrDjB,YAAY,CAACuB,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAOC,UAAU,EAAEC,IAAI,EAAEhB,KAAK,EAAEC,GAAG,EAAEb,SAAS,KAAK;IAC3EX,gBAAgB,CAAEwC,QAAQ,IAAK;MAC7B,MAAMC,OAAO,GAAG;QAAE,GAAGD;MAAS,CAAC;MAC/BC,OAAO,CAACH,UAAU,CAAC,CAACC,IAAI,CAAC,GAAG;QAAEhC,SAAS,EAAEgB,KAAK;QAAEd,OAAO,EAAEe,GAAG;QAAEb;MAAU,CAAC;MACzE,OAAO8B,OAAO;IAChB,CAAC,CAAC;IAEF,MAAMC,2BAA2B,CAACJ,UAAU,EAAEC,IAAI,EAAEhB,KAAK,EAAEC,GAAG,EAAEb,SAAS,CAAC;EAC5E,CAAC;EAED,MAAM+B,2BAA2B,GAAG,MAAAA,CAAOJ,UAAU,EAAEC,IAAI,EAAEhB,KAAK,EAAEC,GAAG,EAAEb,SAAS,KAAK;IACrF,IAAI;MACF,MAAMgC,eAAe,GAAGxD,GAAG,CAACG,EAAE,EAAE,YAAY,EAAEgD,UAAU,CAAC;MACzD,MAAMvC,aAAa,GAAG,MAAMV,MAAM,CAACsD,eAAe,CAAC;MACnD,IAAIC,WAAW,GAAG7C,aAAa,CAAC8C,MAAM,CAAC,CAAC,GAAG9C,aAAa,CAACoB,IAAI,CAAC,CAAC,CAAC2B,KAAK,GAAG,CAAC,CAAC;MAC1EF,WAAW,CAACL,IAAI,CAAC,GAAG;QAAEhC,SAAS,EAAEgB,KAAK;QAAEd,OAAO,EAAEe,GAAG;QAAEb;MAAU,CAAC;MACjE,MAAMvB,MAAM,CAACuD,eAAe,EAAE;QAAEG,KAAK,EAAEF;MAAY,CAAC,CAAC;IACvD,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAM2B,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMjC,aAAa,GAAG,MAAM7B,OAAO,CAACD,UAAU,CAACM,EAAE,EAAE,YAAY,CAAC,CAAC;MACjE,MAAM0D,oBAAoB,GAAG,CAAC,CAAC;MAC/BlC,aAAa,CAACmC,OAAO,CAAE9D,GAAG,IAAK;QAC7B6D,oBAAoB,CAAC7D,GAAG,CAAC+B,EAAE,CAAC,GAAG/B,GAAG,CAACgC,IAAI,CAAC,CAAC,CAAC2B,KAAK;MACjD,CAAC,CAAC;MACF9C,gBAAgB,CAACgD,oBAAoB,CAAC;IACxC,CAAC,CAAC,OAAO5B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAEDtC,SAAS,CAAC,MAAM;IACd,IAAIe,SAAS,CAACqD,MAAM,GAAG,CAAC,IAAIvD,SAAS,CAACuD,MAAM,GAAG,CAAC,EAAE;MAChDH,kBAAkB,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,CAAClD,SAAS,EAAEF,SAAS,CAAC,CAAC;EAE1B,MAAMwD,oBAAoB,GAAGpE,OAAO,CAClC,MAAOuD,UAAU,IAAK;IACpB,OAAO3C,SAAS,CAACyD,MAAM,CAAC,CAACC,KAAK,EAAEd,IAAI,KAAK;MAAA,IAAAe,qBAAA,EAAAC,sBAAA;MACvC,OAAOF,KAAK,IAAI,EAAAC,qBAAA,GAAAvD,aAAa,CAACuC,UAAU,CAAC,cAAAgB,qBAAA,wBAAAC,sBAAA,GAAzBD,qBAAA,CAA4Bf,IAAI,CAAC,cAAAgB,sBAAA,uBAAjCA,sBAAA,CAAmC5C,SAAS,KAAI,CAAC,CAAC;IACpE,CAAC,EAAE,CAAC,CAAC,CAACyB,OAAO,CAAC,CAAC,CAAC;EAClB,CAAC,EACD,CAACrC,aAAa,EAAEJ,SAAS,CAC3B,CAAC;EAED,MAAM6D,qBAAqB,GAAGzE,OAAO,CACnC,MAAOuD,UAAU,IAAK;IACpB,MAAMmB,YAAY,GAAG,IAAI3B,IAAI,CAACnC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC3C8D,YAAY,CAACxB,OAAO,CAAC,CAAC,CAAC;IAEvB,MAAMyB,QAAQ,GAAG,EAAE;IACnB,KAAK,IAAInB,IAAI,GAAG,IAAIT,IAAI,CAAC2B,YAAY,CAAC,EAAElB,IAAI,IAAI,IAAIT,IAAI,CAACnC,SAAS,CAACA,SAAS,CAACuD,MAAM,GAAG,CAAC,CAAC,CAAC,EAAEX,IAAI,CAACN,OAAO,CAACM,IAAI,CAACL,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;MAC3HwB,QAAQ,CAACC,IAAI,CAACpB,IAAI,CAACqB,WAAW,CAAC,CAAC,CAAClC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjD;IAEA,OAAOgC,QAAQ,CAACN,MAAM,CAAC,CAACC,KAAK,EAAEd,IAAI,KAAK;MAAA,IAAAsB,sBAAA,EAAAC,sBAAA;MACtC,OAAOT,KAAK,IAAI,EAAAQ,sBAAA,GAAA9D,aAAa,CAACuC,UAAU,CAAC,cAAAuB,sBAAA,wBAAAC,sBAAA,GAAzBD,sBAAA,CAA4BtB,IAAI,CAAC,cAAAuB,sBAAA,uBAAjCA,sBAAA,CAAmCnD,SAAS,KAAI,CAAC,CAAC;IACpE,CAAC,EAAE,CAAC,CAAC,CAACyB,OAAO,CAAC,CAAC,CAAC;EAClB,CAAC,EACD,CAACrC,aAAa,EAAEJ,SAAS,CAC3B,CAAC;EAED,oBACEF,OAAA;IAAAsE,QAAA,gBACEtE,OAAA;MAAOuE,MAAM,EAAC,GAAG;MAAAD,QAAA,gBACftE,OAAA;QAAAsE,QAAA,eACEtE,OAAA;UAAAsE,QAAA,gBACEtE,OAAA;YAAAsE,QAAA,EAAI;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAChBzE,SAAS,CAACsB,GAAG,CAAEsB,IAAI,iBAClB9C,OAAA;YAAAsE,QAAA,EAAgBxB;UAAI,GAAXA,IAAI;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAC1B,CAAC,eACF3E,OAAA;YAAAsE,QAAA,EAAI;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrB3E,OAAA;YAAAsE,QAAA,EAAI;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR3E,OAAA;QAAAsE,QAAA,EACGlE,SAAS,CAACoB,GAAG,CAAEoD,QAAQ,iBACtB5E,OAAA;UAAAsE,QAAA,gBACEtE,OAAA;YAAAsE,QAAA,EAAKM,QAAQ,CAACC;UAAI;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACvBzE,SAAS,CAACsB,GAAG,CAAEsB,IAAI;YAAA,IAAAgC,sBAAA;YAAA,oBAClB9E,OAAA;cAAAsE,QAAA,gBACEtE,OAAA;gBAAQ+E,OAAO,EAAEA,CAAA,KAAMC,aAAa,CAACJ,QAAQ,CAACnD,EAAE,EAAEqB,IAAI,CAAE;gBAAAwB,QAAA,EAAC;cAAQ;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC1E3E,OAAA;gBAAAsE,QAAA,EACG,EAAAQ,sBAAA,GAAAxE,aAAa,CAACsE,QAAQ,CAACnD,EAAE,CAAC,cAAAqD,sBAAA,uBAA1BA,sBAAA,CAA6BhC,IAAI,CAAC,kBACjC9C,OAAA;kBAAAsE,QAAA,gBACEtE,OAAA;oBAAAsE,QAAA,EAAO,QAAQhE,aAAa,CAACsE,QAAQ,CAACnD,EAAE,CAAC,CAACqB,IAAI,CAAC,CAAChC,SAAS,MAAMR,aAAa,CAACsE,QAAQ,CAACnD,EAAE,CAAC,CAACqB,IAAI,CAAC,CAAC9B,OAAO;kBAAE;oBAAAwD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eACjH3E,OAAA;oBAAAwE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACN3E,OAAA;oBAAAsE,QAAA,EAAS,GAAGhE,aAAa,CAACsE,QAAQ,CAACnD,EAAE,CAAC,CAACqB,IAAI,CAAC,CAAC5B,SAAS;kBAAQ;oBAAAsD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAS,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrE;cACN;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA,GAVC7B,IAAI;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWT,CAAC;UAAA,CACN,CAAC,eACF3E,OAAA;YAAAsE,QAAA,GAAKZ,oBAAoB,CAACkB,QAAQ,CAACnD,EAAE,CAAC,EAAC,QAAM;UAAA;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClD3E,OAAA;YAAAsE,QAAA,GAAKP,qBAAqB,CAACa,QAAQ,CAACnD,EAAE,CAAC,EAAC,QAAM;UAAA;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAjB5CC,QAAQ,CAACnD,EAAE;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBhB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEPnE,SAAS,iBACRR,OAAA,CAACF,cAAc;MACbgB,SAAS,EAAEA,SAAU;MACrBE,OAAO,EAAEA,OAAQ;MACjBE,SAAS,EAAEA,SAAU;MACrBH,YAAY,EAAEA,YAAa;MAC3BE,UAAU,EAAEA,UAAW;MACvBY,kBAAkB,EAAEA,kBAAmB;MACvCe,iBAAiB,EAAEA,iBAAkB;MACrCqC,gBAAgB,EAAEA,gBAAiB;MACnCvE,gBAAgB,EAAEA,gBAAiB;MACnCE,YAAY,EAAEA;IAAa;MAAA4D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxE,EAAA,CAnKIF,aAAa;AAAAiF,EAAA,GAAbjF,aAAa;AAqKnB,eAAeA,aAAa;AAAC,IAAAiF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}