{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n\n  // Generate all days of the current month\n  const generateMonthDays = (year, month) => {\n    const daysInMonth = new Date(year, month, 0).getDate();\n    const days = [];\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push(`${month}-${day < 10 ? '0' + day : day}`);\n    }\n    return days;\n  };\n  const currentDate = new Date();\n  const month = currentDate.getMonth() + 1; // Get current month (1-based index)\n  const year = currentDate.getFullYear();\n\n  // Get all days of the current month\n  const monthDays = generateMonthDays(year, month);\n\n  // Fetch employee and timesheet data from Firestore\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), snapshot => {\n        const employeeData = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe;\n    };\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, snapshot => {\n        const updatedTimesheetData = {};\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe;\n    };\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n\n  // Handle the time settings for a specific employee and date\n  const handleSetTime = (employeeId, date) => {\n    var _timesheetData$employ, _timesheetData$employ2, _timesheetData$employ3, _timesheetData$employ4, _timesheetData$employ5, _timesheetData$employ6;\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setStartTime(((_timesheetData$employ = timesheetData[employeeId]) === null || _timesheetData$employ === void 0 ? void 0 : (_timesheetData$employ2 = _timesheetData$employ[date]) === null || _timesheetData$employ2 === void 0 ? void 0 : _timesheetData$employ2.startTime) || \"\");\n    setEndTime(((_timesheetData$employ3 = timesheetData[employeeId]) === null || _timesheetData$employ3 === void 0 ? void 0 : (_timesheetData$employ4 = _timesheetData$employ3[date]) === null || _timesheetData$employ4 === void 0 ? void 0 : _timesheetData$employ4.endTime) || \"\");\n    setIsHoliday(((_timesheetData$employ5 = timesheetData[employeeId]) === null || _timesheetData$employ5 === void 0 ? void 0 : (_timesheetData$employ6 = _timesheetData$employ5[date]) === null || _timesheetData$employ6 === void 0 ? void 0 : _timesheetData$employ6.isHoliday) || false);\n    setModalOpen(true);\n  };\n\n  // Handle changes in start time\n  const handleStartTimeChange = event => {\n    const newStartTime = event.target.value;\n    setStartTime(newStartTime);\n    calculateTimes(newStartTime, endTime, nextDay, isHoliday);\n  };\n\n  // Handle changes in end time\n  const handleEndTimeChange = event => {\n    const newEndTime = event.target.value;\n    setEndTime(newEndTime);\n    calculateTimes(startTime, newEndTime, nextDay, isHoliday);\n  };\n\n  // Toggle next day status\n  const handleNextDayToggle = () => {\n    const newNextDay = !nextDay;\n    setNextDay(newNextDay);\n    calculateTimes(startTime, endTime, newNextDay, isHoliday);\n  };\n\n  // Toggle holiday status\n  const handleHolidayToggle = () => {\n    const newIsHoliday = !isHoliday;\n    setIsHoliday(newIsHoliday);\n    calculateTimes(startTime, endTime, nextDay, newIsHoliday);\n  };\n\n  // Calculate total time, night shift hours, and normal/holiday time\n  const calculateTimes = (start, end, isNextDay, isHoliday) => {\n    if (!start || !end) return;\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0);\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1);\n    nightShiftEnd.setHours(6, 0, 0);\n    let nightShiftHours = 0;\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n    const normalTime = isHoliday ? 0 : totalTimeInHours - nightShiftHours;\n    setNormalTime(normalTime.toFixed(2));\n    const holidayTime = isHoliday ? totalTimeInHours : 0;\n    setHolidayTime(holidayTime.toFixed(2));\n  };\n\n  // Save timesheet data to Firestore\n  const saveTimesheetDataToFirebase = async () => {\n    try {\n      var _await$getDoc$data;\n      const timesheetDocRef = doc(db, \"timesheets\", selectedEmployee);\n      const timesheetData = ((_await$getDoc$data = (await getDoc(timesheetDocRef)).data()) === null || _await$getDoc$data === void 0 ? void 0 : _await$getDoc$data.hours) || {};\n      timesheetData[selectedDate] = {\n        startTime,\n        endTime,\n        totalTime: parseFloat(totalTime),\n        nightShift: parseFloat(nightShiftHours),\n        holidayTime: parseFloat(holidayTime),\n        normalTime: parseFloat(normalTime),\n        isHoliday\n      };\n      await setDoc(timesheetDocRef, {\n        hours: timesheetData\n      });\n      setModalOpen(false);\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  // Calculate monthly totals for an employee\n  const calculateMonthlyTotal = employeeId => {\n    let monthlyTotal = {\n      normalTime: 0,\n      nightShift: 0,\n      holidayTime: 0,\n      totalTime: 0\n    };\n    monthDays.forEach(date => {\n      var _timesheetData$employ7;\n      const data = (_timesheetData$employ7 = timesheetData[employeeId]) === null || _timesheetData$employ7 === void 0 ? void 0 : _timesheetData$employ7[date];\n      if (data) {\n        monthlyTotal.normalTime += data.normalTime || 0;\n        monthlyTotal.nightShift += data.nightShift || 0;\n        monthlyTotal.holidayTime += data.holidayTime || 0;\n        monthlyTotal.totalTime += data.totalTime || 0;\n      }\n    });\n    return monthlyTotal;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Shift Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), monthDays.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Monthly Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => {\n          const monthlyTotal = calculateMonthlyTotal(employee.id);\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                rowSpan: 4,\n                children: employee.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Normal Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this), monthDays.map(date => {\n                var _timesheetData$employ8, _timesheetData$employ9, _timesheetData$employ10, _timesheetData$employ11;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ8 = timesheetData[employee.id]) === null || _timesheetData$employ8 === void 0 ? void 0 : (_timesheetData$employ9 = _timesheetData$employ8[date]) === null || _timesheetData$employ9 === void 0 ? void 0 : _timesheetData$employ9.normalTime) === 0 ? \"0 hrs\" : (_timesheetData$employ10 = timesheetData[employee.id]) !== null && _timesheetData$employ10 !== void 0 && (_timesheetData$employ11 = _timesheetData$employ10[date]) !== null && _timesheetData$employ11 !== void 0 && _timesheetData$employ11.normalTime ? `${timesheetData[employee.id][date].normalTime} hrs` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthlyTotal.normalTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Night Shift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this), monthDays.map(date => {\n                var _timesheetData$employ12, _timesheetData$employ13, _timesheetData$employ14, _timesheetData$employ15;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ12 = timesheetData[employee.id]) === null || _timesheetData$employ12 === void 0 ? void 0 : (_timesheetData$employ13 = _timesheetData$employ12[date]) === null || _timesheetData$employ13 === void 0 ? void 0 : _timesheetData$employ13.nightShift) === 0 ? \"0 hrs\" : (_timesheetData$employ14 = timesheetData[employee.id]) !== null && _timesheetData$employ14 !== void 0 && (_timesheetData$employ15 = _timesheetData$employ14[date]) !== null && _timesheetData$employ15 !== void 0 && _timesheetData$employ15.nightShift ? `${timesheetData[employee.id][date].nightShift} hrs` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthlyTotal.nightShift\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Holiday Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this), monthDays.map(date => {\n                var _timesheetData$employ16, _timesheetData$employ17, _timesheetData$employ18, _timesheetData$employ19;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ16 = timesheetData[employee.id]) === null || _timesheetData$employ16 === void 0 ? void 0 : (_timesheetData$employ17 = _timesheetData$employ16[date]) === null || _timesheetData$employ17 === void 0 ? void 0 : _timesheetData$employ17.holidayTime) === 0 ? \"0 hrs\" : (_timesheetData$employ18 = timesheetData[employee.id]) !== null && _timesheetData$employ18 !== void 0 && (_timesheetData$employ19 = _timesheetData$employ18[date]) !== null && _timesheetData$employ19 !== void 0 && _timesheetData$employ19.holidayTime ? `${timesheetData[employee.id][date].holidayTime} hrs` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthlyTotal.holidayTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Total Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this), monthDays.map(date => {\n                var _timesheetData$employ20, _timesheetData$employ21, _timesheetData$employ22, _timesheetData$employ23;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ20 = timesheetData[employee.id]) === null || _timesheetData$employ20 === void 0 ? void 0 : (_timesheetData$employ21 = _timesheetData$employ20[date]) === null || _timesheetData$employ21 === void 0 ? void 0 : _timesheetData$employ21.totalTime) === 0 ? \"0 hrs\" : (_timesheetData$employ22 = timesheetData[employee.id]) !== null && _timesheetData$employ22 !== void 0 && (_timesheetData$employ23 = _timesheetData$employ22[date]) !== null && _timesheetData$employ23 !== void 0 && _timesheetData$employ23.totalTime ? `${timesheetData[employee.id][date].totalTime} hrs` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthlyTotal.totalTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Set Time for \", selectedEmployee]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: startTime,\n        onChange: handleStartTimeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: endTime,\n        onChange: handleEndTimeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Next Day:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: nextDay,\n        onChange: handleNextDayToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Holiday:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isHoliday,\n        onChange: handleHolidayToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveTimesheetDataToFirebase,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"LuJF93aoCyJzjR3hVD8EVfLaOJo=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["React","useState","useEffect","collection","onSnapshot","doc","setDoc","getDoc","db","jsxDEV","_jsxDEV","TimesheetList","_s","employees","setEmployees","timesheetData","setTimesheetData","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","nextDay","setNextDay","isHoliday","setIsHoliday","totalTime","setTotalTime","nightShiftHours","setNightShiftHours","holidayTime","setHolidayTime","normalTime","setNormalTime","generateMonthDays","year","month","daysInMonth","Date","getDate","days","day","push","currentDate","getMonth","getFullYear","monthDays","fetchEmployees","unsubscribe","snapshot","employeeData","docs","map","id","data","fetchTimesheetData","timesheetDataRef","updatedTimesheetData","forEach","employeeId","hours","date","record","Object","entries","parseFloat","nightShift","Boolean","handleSetTime","_timesheetData$employ","_timesheetData$employ2","_timesheetData$employ3","_timesheetData$employ4","_timesheetData$employ5","_timesheetData$employ6","handleStartTimeChange","event","newStartTime","target","value","calculateTimes","handleEndTimeChange","newEndTime","handleNextDayToggle","newNextDay","handleHolidayToggle","newIsHoliday","start","end","isNextDay","startHours","startMinutes","split","Number","endHours","endMinutes","startDate","setHours","endDate","setDate","totalTimeInHours","nightShiftStart","nightShiftEnd","nightShiftStartTime","nightShiftEndTime","toFixed","saveTimesheetDataToFirebase","_await$getDoc$data","timesheetDocRef","error","console","calculateMonthlyTotal","monthlyTotal","_timesheetData$employ7","children","border","fileName","_jsxFileName","lineNumber","columnNumber","employee","Fragment","rowSpan","name","_timesheetData$employ8","_timesheetData$employ9","_timesheetData$employ10","_timesheetData$employ11","onClick","_timesheetData$employ12","_timesheetData$employ13","_timesheetData$employ14","_timesheetData$employ15","_timesheetData$employ16","_timesheetData$employ17","_timesheetData$employ18","_timesheetData$employ19","_timesheetData$employ20","_timesheetData$employ21","_timesheetData$employ22","_timesheetData$employ23","type","onChange","checked","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\n\nconst TimesheetList = () => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n\n  // Generate all days of the current month\n  const generateMonthDays = (year, month) => {\n    const daysInMonth = new Date(year, month, 0).getDate();\n    const days = [];\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push(`${month}-${day < 10 ? '0' + day : day}`);\n    }\n    return days;\n  };\n\n  const currentDate = new Date();\n  const month = currentDate.getMonth() + 1; // Get current month (1-based index)\n  const year = currentDate.getFullYear();\n\n  // Get all days of the current month\n  const monthDays = generateMonthDays(year, month);\n\n  // Fetch employee and timesheet data from Firestore\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), (snapshot) => {\n        const employeeData = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe;\n    };\n\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, (snapshot) => {\n        const updatedTimesheetData = {};\n        snapshot.forEach((doc) => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0,\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe;\n    };\n\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n\n  // Handle the time settings for a specific employee and date\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setStartTime(timesheetData[employeeId]?.[date]?.startTime || \"\");\n    setEndTime(timesheetData[employeeId]?.[date]?.endTime || \"\");\n    setIsHoliday(timesheetData[employeeId]?.[date]?.isHoliday || false);\n    setModalOpen(true);\n  };\n\n  // Handle changes in start time\n  const handleStartTimeChange = (event) => {\n    const newStartTime = event.target.value;\n    setStartTime(newStartTime);\n    calculateTimes(newStartTime, endTime, nextDay, isHoliday);\n  };\n\n  // Handle changes in end time\n  const handleEndTimeChange = (event) => {\n    const newEndTime = event.target.value;\n    setEndTime(newEndTime);\n    calculateTimes(startTime, newEndTime, nextDay, isHoliday);\n  };\n\n  // Toggle next day status\n  const handleNextDayToggle = () => {\n    const newNextDay = !nextDay;\n    setNextDay(newNextDay);\n    calculateTimes(startTime, endTime, newNextDay, isHoliday);\n  };\n\n  // Toggle holiday status\n  const handleHolidayToggle = () => {\n    const newIsHoliday = !isHoliday;\n    setIsHoliday(newIsHoliday);\n    calculateTimes(startTime, endTime, nextDay, newIsHoliday);\n  };\n\n  // Calculate total time, night shift hours, and normal/holiday time\n  const calculateTimes = (start, end, isNextDay, isHoliday) => {\n    if (!start || !end) return;\n\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);\n\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0);\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1);\n    nightShiftEnd.setHours(6, 0, 0);\n\n    let nightShiftHours = 0;\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n\n    const normalTime = isHoliday ? 0 : totalTimeInHours - nightShiftHours;\n    setNormalTime(normalTime.toFixed(2));\n\n    const holidayTime = isHoliday ? totalTimeInHours : 0;\n    setHolidayTime(holidayTime.toFixed(2));\n  };\n\n  // Save timesheet data to Firestore\n  const saveTimesheetDataToFirebase = async () => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", selectedEmployee);\n      const timesheetData = (await getDoc(timesheetDocRef)).data()?.hours || {};\n      timesheetData[selectedDate] = {\n        startTime,\n        endTime,\n        totalTime: parseFloat(totalTime),\n        nightShift: parseFloat(nightShiftHours),\n        holidayTime: parseFloat(holidayTime),\n        normalTime: parseFloat(normalTime),\n        isHoliday,\n      };\n      await setDoc(timesheetDocRef, { hours: timesheetData });\n      setModalOpen(false);\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  // Calculate monthly totals for an employee\n  const calculateMonthlyTotal = (employeeId) => {\n    let monthlyTotal = {\n      normalTime: 0,\n      nightShift: 0,\n      holidayTime: 0,\n      totalTime: 0,\n    };\n\n    monthDays.forEach((date) => {\n      const data = timesheetData[employeeId]?.[date];\n      if (data) {\n        monthlyTotal.normalTime += data.normalTime || 0;\n        monthlyTotal.nightShift += data.nightShift || 0;\n        monthlyTotal.holidayTime += data.holidayTime || 0;\n        monthlyTotal.totalTime += data.totalTime || 0;\n      }\n    });\n\n    return monthlyTotal;\n  };\n\n  return (\n    <div>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Shift Type</th>\n            {monthDays.map((date) => (\n              <th key={date}>{date}</th>\n            ))}\n            <th>Monthly Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => {\n            const monthlyTotal = calculateMonthlyTotal(employee.id);\n            return (\n              <React.Fragment key={employee.id}>\n                <tr>\n                  <td rowSpan={4}>{employee.name}</td>\n                  <td>Normal Time</td>\n                  {monthDays.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.normalTime === 0\n                        ? \"0 hrs\"\n                        : timesheetData[employee.id]?.[date]?.normalTime\n                        ? `${timesheetData[employee.id][date].normalTime} hrs`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{monthlyTotal.normalTime}</td>\n                </tr>\n                <tr>\n                  <td>Night Shift</td>\n                  {monthDays.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.nightShift === 0\n                        ? \"0 hrs\"\n                        : timesheetData[employee.id]?.[date]?.nightShift\n                        ? `${timesheetData[employee.id][date].nightShift} hrs`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{monthlyTotal.nightShift}</td>\n                </tr>\n                <tr>\n                  <td>Holiday Time</td>\n                  {monthDays.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.holidayTime === 0\n                        ? \"0 hrs\"\n                        : timesheetData[employee.id]?.[date]?.holidayTime\n                        ? `${timesheetData[employee.id][date].holidayTime} hrs`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{monthlyTotal.holidayTime}</td>\n                </tr>\n                <tr>\n                  <td>Total Time</td>\n                  {monthDays.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.totalTime === 0\n                        ? \"0 hrs\"\n                        : timesheetData[employee.id]?.[date]?.totalTime\n                        ? `${timesheetData[employee.id][date].totalTime} hrs`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{monthlyTotal.totalTime}</td>\n                </tr>\n              </React.Fragment>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {modalOpen && (\n        <div>\n          <h2>Set Time for {selectedEmployee}</h2>\n          <label>Start Time:</label>\n          <input\n            type=\"time\"\n            value={startTime}\n            onChange={handleStartTimeChange}\n          />\n          <br />\n          <label>End Time:</label>\n          <input\n            type=\"time\"\n            value={endTime}\n            onChange={handleEndTimeChange}\n          />\n          <br />\n          <label>Next Day:</label>\n          <input\n            type=\"checkbox\"\n            checked={nextDay}\n            onChange={handleNextDayToggle}\n          />\n          <br />\n          <label>Holiday:</label>\n          <input\n            type=\"checkbox\"\n            checked={isHoliday}\n            onChange={handleHolidayToggle}\n          />\n          <br />\n          <button onClick={saveTimesheetDataToFirebase}>Save</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;AAChF,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACkB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC8B,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACgC,eAAe,EAAEC,kBAAkB,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACkC,WAAW,EAAEC,cAAc,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACoC,UAAU,EAAEC,aAAa,CAAC,GAAGrC,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMsC,iBAAiB,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;IACzC,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAACH,IAAI,EAAEC,KAAK,EAAE,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC;IACtD,MAAMC,IAAI,GAAG,EAAE;IACf,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAIJ,WAAW,EAAEI,GAAG,EAAE,EAAE;MAC3CD,IAAI,CAACE,IAAI,CAAC,GAAGN,KAAK,IAAIK,GAAG,GAAG,EAAE,GAAG,GAAG,GAAGA,GAAG,GAAGA,GAAG,EAAE,CAAC;IACrD;IACA,OAAOD,IAAI;EACb,CAAC;EAED,MAAMG,WAAW,GAAG,IAAIL,IAAI,CAAC,CAAC;EAC9B,MAAMF,KAAK,GAAGO,WAAW,CAACC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC1C,MAAMT,IAAI,GAAGQ,WAAW,CAACE,WAAW,CAAC,CAAC;;EAEtC;EACA,MAAMC,SAAS,GAAGZ,iBAAiB,CAACC,IAAI,EAAEC,KAAK,CAAC;;EAEhD;EACAvC,SAAS,CAAC,MAAM;IACd,MAAMkD,cAAc,GAAGA,CAAA,KAAM;MAC3B,MAAMC,WAAW,GAAGjD,UAAU,CAACD,UAAU,CAACK,EAAE,EAAE,WAAW,CAAC,EAAG8C,QAAQ,IAAK;QACxE,MAAMC,YAAY,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAEpD,GAAG,KAAM;UAC/CqD,EAAE,EAAErD,GAAG,CAACqD,EAAE;UACV,GAAGrD,GAAG,CAACsD,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QACH7C,YAAY,CAACyC,YAAY,CAAC;MAC5B,CAAC,CAAC;MACF,OAAOF,WAAW;IACpB,CAAC;IAED,MAAMO,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,MAAMC,gBAAgB,GAAG1D,UAAU,CAACK,EAAE,EAAE,YAAY,CAAC;MACrD,MAAM6C,WAAW,GAAGjD,UAAU,CAACyD,gBAAgB,EAAGP,QAAQ,IAAK;QAC7D,MAAMQ,oBAAoB,GAAG,CAAC,CAAC;QAC/BR,QAAQ,CAACS,OAAO,CAAE1D,GAAG,IAAK;UACxB,MAAMsD,IAAI,GAAGtD,GAAG,CAACsD,IAAI,CAAC,CAAC;UACvB,MAAMK,UAAU,GAAG3D,GAAG,CAACqD,EAAE;UACzB,IAAIC,IAAI,CAACM,KAAK,EAAE;YACdH,oBAAoB,CAACE,UAAU,CAAC,GAAG,CAAC,CAAC;YACrC,KAAK,MAAM,CAACE,IAAI,EAAEC,MAAM,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACV,IAAI,CAACM,KAAK,CAAC,EAAE;cACvDH,oBAAoB,CAACE,UAAU,CAAC,CAACE,IAAI,CAAC,GAAG;gBACvC3C,SAAS,EAAE4C,MAAM,CAAC5C,SAAS;gBAC3BE,OAAO,EAAE0C,MAAM,CAAC1C,OAAO;gBACvBM,SAAS,EAAEuC,UAAU,CAACH,MAAM,CAACpC,SAAS,CAAC;gBACvCwC,UAAU,EAAED,UAAU,CAACH,MAAM,CAACI,UAAU,CAAC;gBACzCpC,WAAW,EAAEmC,UAAU,CAACH,MAAM,CAAChC,WAAW,CAAC;gBAC3CN,SAAS,EAAE2C,OAAO,CAACL,MAAM,CAACtC,SAAS,CAAC;gBACpCQ,UAAU,EAAEiC,UAAU,CAACH,MAAM,CAAC9B,UAAU,CAAC,IAAI;cAC/C,CAAC;YACH;UACF;QACF,CAAC,CAAC;QACFrB,gBAAgB,CAAC8C,oBAAoB,CAAC;MACxC,CAAC,CAAC;MACF,OAAOT,WAAW;IACpB,CAAC;IAEDD,cAAc,CAAC,CAAC;IAChBQ,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMa,aAAa,GAAGA,CAACT,UAAU,EAAEE,IAAI,KAAK;IAAA,IAAAQ,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IAC1C3D,mBAAmB,CAAC4C,UAAU,CAAC;IAC/B1C,eAAe,CAAC4C,IAAI,CAAC;IACrB1C,YAAY,CAAC,EAAAkD,qBAAA,GAAA3D,aAAa,CAACiD,UAAU,CAAC,cAAAU,qBAAA,wBAAAC,sBAAA,GAAzBD,qBAAA,CAA4BR,IAAI,CAAC,cAAAS,sBAAA,uBAAjCA,sBAAA,CAAmCpD,SAAS,KAAI,EAAE,CAAC;IAChEG,UAAU,CAAC,EAAAkD,sBAAA,GAAA7D,aAAa,CAACiD,UAAU,CAAC,cAAAY,sBAAA,wBAAAC,sBAAA,GAAzBD,sBAAA,CAA4BV,IAAI,CAAC,cAAAW,sBAAA,uBAAjCA,sBAAA,CAAmCpD,OAAO,KAAI,EAAE,CAAC;IAC5DK,YAAY,CAAC,EAAAgD,sBAAA,GAAA/D,aAAa,CAACiD,UAAU,CAAC,cAAAc,sBAAA,wBAAAC,sBAAA,GAAzBD,sBAAA,CAA4BZ,IAAI,CAAC,cAAAa,sBAAA,uBAAjCA,sBAAA,CAAmClD,SAAS,KAAI,KAAK,CAAC;IACnEX,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;;EAED;EACA,MAAM8D,qBAAqB,GAAIC,KAAK,IAAK;IACvC,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACvC5D,YAAY,CAAC0D,YAAY,CAAC;IAC1BG,cAAc,CAACH,YAAY,EAAEzD,OAAO,EAAEE,OAAO,EAAEE,SAAS,CAAC;EAC3D,CAAC;;EAED;EACA,MAAMyD,mBAAmB,GAAIL,KAAK,IAAK;IACrC,MAAMM,UAAU,GAAGN,KAAK,CAACE,MAAM,CAACC,KAAK;IACrC1D,UAAU,CAAC6D,UAAU,CAAC;IACtBF,cAAc,CAAC9D,SAAS,EAAEgE,UAAU,EAAE5D,OAAO,EAAEE,SAAS,CAAC;EAC3D,CAAC;;EAED;EACA,MAAM2D,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,UAAU,GAAG,CAAC9D,OAAO;IAC3BC,UAAU,CAAC6D,UAAU,CAAC;IACtBJ,cAAc,CAAC9D,SAAS,EAAEE,OAAO,EAAEgE,UAAU,EAAE5D,SAAS,CAAC;EAC3D,CAAC;;EAED;EACA,MAAM6D,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,YAAY,GAAG,CAAC9D,SAAS;IAC/BC,YAAY,CAAC6D,YAAY,CAAC;IAC1BN,cAAc,CAAC9D,SAAS,EAAEE,OAAO,EAAEE,OAAO,EAAEgE,YAAY,CAAC;EAC3D,CAAC;;EAED;EACA,MAAMN,cAAc,GAAGA,CAACO,KAAK,EAAEC,GAAG,EAAEC,SAAS,EAAEjE,SAAS,KAAK;IAC3D,IAAI,CAAC+D,KAAK,IAAI,CAACC,GAAG,EAAE;IAEpB,MAAM,CAACE,UAAU,EAAEC,YAAY,CAAC,GAAGJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAACxC,GAAG,CAACyC,MAAM,CAAC;IAC/D,MAAM,CAACC,QAAQ,EAAEC,UAAU,CAAC,GAAGP,GAAG,CAACI,KAAK,CAAC,GAAG,CAAC,CAACxC,GAAG,CAACyC,MAAM,CAAC;IACzD,MAAMG,SAAS,GAAG,IAAI1D,IAAI,CAAC,CAAC;IAC5B0D,SAAS,CAACC,QAAQ,CAACP,UAAU,EAAEC,YAAY,EAAE,CAAC,CAAC;IAC/C,MAAMO,OAAO,GAAG,IAAI5D,IAAI,CAAC,CAAC;IAC1B4D,OAAO,CAACD,QAAQ,CAACH,QAAQ,EAAEC,UAAU,EAAE,CAAC,CAAC;IACzC,IAAIN,SAAS,EAAES,OAAO,CAACC,OAAO,CAACD,OAAO,CAAC3D,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAErD,MAAM6D,gBAAgB,GAAG,CAACF,OAAO,GAAGF,SAAS,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;IACjE,MAAMK,eAAe,GAAG,IAAI/D,IAAI,CAAC0D,SAAS,CAAC;IAC3CK,eAAe,CAACJ,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IAClC,MAAMK,aAAa,GAAG,IAAIhE,IAAI,CAAC0D,SAAS,CAAC;IACzCM,aAAa,CAACH,OAAO,CAACG,aAAa,CAAC/D,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAClD+D,aAAa,CAACL,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAE/B,IAAIrE,eAAe,GAAG,CAAC;IACvB,IAAIoE,SAAS,GAAGM,aAAa,IAAIJ,OAAO,IAAIG,eAAe,EAAE;MAC3D,MAAME,mBAAmB,GAAGP,SAAS,GAAGK,eAAe,GAAGA,eAAe,GAAGL,SAAS;MACrF,MAAMQ,iBAAiB,GAAGN,OAAO,GAAGI,aAAa,GAAGA,aAAa,GAAGJ,OAAO;MAC3EtE,eAAe,GAAG,CAAC4E,iBAAiB,GAAGD,mBAAmB,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;IAChF;IAEA5E,YAAY,CAACyE,gBAAgB,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC;IACzC5E,kBAAkB,CAACD,eAAe,CAAC6E,OAAO,CAAC,CAAC,CAAC,CAAC;IAE9C,MAAMzE,UAAU,GAAGR,SAAS,GAAG,CAAC,GAAG4E,gBAAgB,GAAGxE,eAAe;IACrEK,aAAa,CAACD,UAAU,CAACyE,OAAO,CAAC,CAAC,CAAC,CAAC;IAEpC,MAAM3E,WAAW,GAAGN,SAAS,GAAG4E,gBAAgB,GAAG,CAAC;IACpDrE,cAAc,CAACD,WAAW,CAAC2E,OAAO,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;;EAED;EACA,MAAMC,2BAA2B,GAAG,MAAAA,CAAA,KAAY;IAC9C,IAAI;MAAA,IAAAC,kBAAA;MACF,MAAMC,eAAe,GAAG5G,GAAG,CAACG,EAAE,EAAE,YAAY,EAAEW,gBAAgB,CAAC;MAC/D,MAAMJ,aAAa,GAAG,EAAAiG,kBAAA,IAAC,MAAMzG,MAAM,CAAC0G,eAAe,CAAC,EAAEtD,IAAI,CAAC,CAAC,cAAAqD,kBAAA,uBAAtCA,kBAAA,CAAwC/C,KAAK,KAAI,CAAC,CAAC;MACzElD,aAAa,CAACM,YAAY,CAAC,GAAG;QAC5BE,SAAS;QACTE,OAAO;QACPM,SAAS,EAAEuC,UAAU,CAACvC,SAAS,CAAC;QAChCwC,UAAU,EAAED,UAAU,CAACrC,eAAe,CAAC;QACvCE,WAAW,EAAEmC,UAAU,CAACnC,WAAW,CAAC;QACpCE,UAAU,EAAEiC,UAAU,CAACjC,UAAU,CAAC;QAClCR;MACF,CAAC;MACD,MAAMvB,MAAM,CAAC2G,eAAe,EAAE;QAAEhD,KAAK,EAAElD;MAAc,CAAC,CAAC;MACvDG,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOgG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;;EAED;EACA,MAAME,qBAAqB,GAAIpD,UAAU,IAAK;IAC5C,IAAIqD,YAAY,GAAG;MACjBhF,UAAU,EAAE,CAAC;MACbkC,UAAU,EAAE,CAAC;MACbpC,WAAW,EAAE,CAAC;MACdJ,SAAS,EAAE;IACb,CAAC;IAEDoB,SAAS,CAACY,OAAO,CAAEG,IAAI,IAAK;MAAA,IAAAoD,sBAAA;MAC1B,MAAM3D,IAAI,IAAA2D,sBAAA,GAAGvG,aAAa,CAACiD,UAAU,CAAC,cAAAsD,sBAAA,uBAAzBA,sBAAA,CAA4BpD,IAAI,CAAC;MAC9C,IAAIP,IAAI,EAAE;QACR0D,YAAY,CAAChF,UAAU,IAAIsB,IAAI,CAACtB,UAAU,IAAI,CAAC;QAC/CgF,YAAY,CAAC9C,UAAU,IAAIZ,IAAI,CAACY,UAAU,IAAI,CAAC;QAC/C8C,YAAY,CAAClF,WAAW,IAAIwB,IAAI,CAACxB,WAAW,IAAI,CAAC;QACjDkF,YAAY,CAACtF,SAAS,IAAI4B,IAAI,CAAC5B,SAAS,IAAI,CAAC;MAC/C;IACF,CAAC,CAAC;IAEF,OAAOsF,YAAY;EACrB,CAAC;EAED,oBACE3G,OAAA;IAAA6G,QAAA,gBACE7G,OAAA;MAAO8G,MAAM,EAAC,GAAG;MAAAD,QAAA,gBACf7G,OAAA;QAAA6G,QAAA,eACE7G,OAAA;UAAA6G,QAAA,gBACE7G,OAAA;YAAA6G,QAAA,EAAI;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACblH,OAAA;YAAA6G,QAAA,EAAI;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAClBzE,SAAS,CAACM,GAAG,CAAES,IAAI,iBAClBxD,OAAA;YAAA6G,QAAA,EAAgBrD;UAAI,GAAXA,IAAI;YAAAuD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAC1B,CAAC,eACFlH,OAAA;YAAA6G,QAAA,EAAI;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRlH,OAAA;QAAA6G,QAAA,EACG1G,SAAS,CAAC4C,GAAG,CAAEoE,QAAQ,IAAK;UAC3B,MAAMR,YAAY,GAAGD,qBAAqB,CAACS,QAAQ,CAACnE,EAAE,CAAC;UACvD,oBACEhD,OAAA,CAACV,KAAK,CAAC8H,QAAQ;YAAAP,QAAA,gBACb7G,OAAA;cAAA6G,QAAA,gBACE7G,OAAA;gBAAIqH,OAAO,EAAE,CAAE;gBAAAR,QAAA,EAAEM,QAAQ,CAACG;cAAI;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpClH,OAAA;gBAAA6G,QAAA,EAAI;cAAW;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACnBzE,SAAS,CAACM,GAAG,CAAES,IAAI;gBAAA,IAAA+D,sBAAA,EAAAC,sBAAA,EAAAC,uBAAA,EAAAC,uBAAA;gBAAA,oBAClB1H,OAAA;kBAAe2H,OAAO,EAAEA,CAAA,KAAM5D,aAAa,CAACoD,QAAQ,CAACnE,EAAE,EAAEQ,IAAI,CAAE;kBAAAqD,QAAA,EAC5D,EAAAU,sBAAA,GAAAlH,aAAa,CAAC8G,QAAQ,CAACnE,EAAE,CAAC,cAAAuE,sBAAA,wBAAAC,sBAAA,GAA1BD,sBAAA,CAA6B/D,IAAI,CAAC,cAAAgE,sBAAA,uBAAlCA,sBAAA,CAAoC7F,UAAU,MAAK,CAAC,GACjD,OAAO,GACP,CAAA8F,uBAAA,GAAApH,aAAa,CAAC8G,QAAQ,CAACnE,EAAE,CAAC,cAAAyE,uBAAA,gBAAAC,uBAAA,GAA1BD,uBAAA,CAA6BjE,IAAI,CAAC,cAAAkE,uBAAA,eAAlCA,uBAAA,CAAoC/F,UAAU,GAC9C,GAAGtB,aAAa,CAAC8G,QAAQ,CAACnE,EAAE,CAAC,CAACQ,IAAI,CAAC,CAAC7B,UAAU,MAAM,GACpD;gBAAE,GALC6B,IAAI;kBAAAuD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAMT,CAAC;cAAA,CACN,CAAC,eACFlH,OAAA;gBAAA6G,QAAA,EAAKF,YAAY,CAAChF;cAAU;gBAAAoF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC,CAAC,eACLlH,OAAA;cAAA6G,QAAA,gBACE7G,OAAA;gBAAA6G,QAAA,EAAI;cAAW;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACnBzE,SAAS,CAACM,GAAG,CAAES,IAAI;gBAAA,IAAAoE,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA;gBAAA,oBAClB/H,OAAA;kBAAe2H,OAAO,EAAEA,CAAA,KAAM5D,aAAa,CAACoD,QAAQ,CAACnE,EAAE,EAAEQ,IAAI,CAAE;kBAAAqD,QAAA,EAC5D,EAAAe,uBAAA,GAAAvH,aAAa,CAAC8G,QAAQ,CAACnE,EAAE,CAAC,cAAA4E,uBAAA,wBAAAC,uBAAA,GAA1BD,uBAAA,CAA6BpE,IAAI,CAAC,cAAAqE,uBAAA,uBAAlCA,uBAAA,CAAoChE,UAAU,MAAK,CAAC,GACjD,OAAO,GACP,CAAAiE,uBAAA,GAAAzH,aAAa,CAAC8G,QAAQ,CAACnE,EAAE,CAAC,cAAA8E,uBAAA,gBAAAC,uBAAA,GAA1BD,uBAAA,CAA6BtE,IAAI,CAAC,cAAAuE,uBAAA,eAAlCA,uBAAA,CAAoClE,UAAU,GAC9C,GAAGxD,aAAa,CAAC8G,QAAQ,CAACnE,EAAE,CAAC,CAACQ,IAAI,CAAC,CAACK,UAAU,MAAM,GACpD;gBAAE,GALCL,IAAI;kBAAAuD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAMT,CAAC;cAAA,CACN,CAAC,eACFlH,OAAA;gBAAA6G,QAAA,EAAKF,YAAY,CAAC9C;cAAU;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC,CAAC,eACLlH,OAAA;cAAA6G,QAAA,gBACE7G,OAAA;gBAAA6G,QAAA,EAAI;cAAY;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACpBzE,SAAS,CAACM,GAAG,CAAES,IAAI;gBAAA,IAAAwE,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA;gBAAA,oBAClBnI,OAAA;kBAAe2H,OAAO,EAAEA,CAAA,KAAM5D,aAAa,CAACoD,QAAQ,CAACnE,EAAE,EAAEQ,IAAI,CAAE;kBAAAqD,QAAA,EAC5D,EAAAmB,uBAAA,GAAA3H,aAAa,CAAC8G,QAAQ,CAACnE,EAAE,CAAC,cAAAgF,uBAAA,wBAAAC,uBAAA,GAA1BD,uBAAA,CAA6BxE,IAAI,CAAC,cAAAyE,uBAAA,uBAAlCA,uBAAA,CAAoCxG,WAAW,MAAK,CAAC,GAClD,OAAO,GACP,CAAAyG,uBAAA,GAAA7H,aAAa,CAAC8G,QAAQ,CAACnE,EAAE,CAAC,cAAAkF,uBAAA,gBAAAC,uBAAA,GAA1BD,uBAAA,CAA6B1E,IAAI,CAAC,cAAA2E,uBAAA,eAAlCA,uBAAA,CAAoC1G,WAAW,GAC/C,GAAGpB,aAAa,CAAC8G,QAAQ,CAACnE,EAAE,CAAC,CAACQ,IAAI,CAAC,CAAC/B,WAAW,MAAM,GACrD;gBAAE,GALC+B,IAAI;kBAAAuD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAMT,CAAC;cAAA,CACN,CAAC,eACFlH,OAAA;gBAAA6G,QAAA,EAAKF,YAAY,CAAClF;cAAW;gBAAAsF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC,eACLlH,OAAA;cAAA6G,QAAA,gBACE7G,OAAA;gBAAA6G,QAAA,EAAI;cAAU;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EAClBzE,SAAS,CAACM,GAAG,CAAES,IAAI;gBAAA,IAAA4E,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA;gBAAA,oBAClBvI,OAAA;kBAAe2H,OAAO,EAAEA,CAAA,KAAM5D,aAAa,CAACoD,QAAQ,CAACnE,EAAE,EAAEQ,IAAI,CAAE;kBAAAqD,QAAA,EAC5D,EAAAuB,uBAAA,GAAA/H,aAAa,CAAC8G,QAAQ,CAACnE,EAAE,CAAC,cAAAoF,uBAAA,wBAAAC,uBAAA,GAA1BD,uBAAA,CAA6B5E,IAAI,CAAC,cAAA6E,uBAAA,uBAAlCA,uBAAA,CAAoChH,SAAS,MAAK,CAAC,GAChD,OAAO,GACP,CAAAiH,uBAAA,GAAAjI,aAAa,CAAC8G,QAAQ,CAACnE,EAAE,CAAC,cAAAsF,uBAAA,gBAAAC,uBAAA,GAA1BD,uBAAA,CAA6B9E,IAAI,CAAC,cAAA+E,uBAAA,eAAlCA,uBAAA,CAAoClH,SAAS,GAC7C,GAAGhB,aAAa,CAAC8G,QAAQ,CAACnE,EAAE,CAAC,CAACQ,IAAI,CAAC,CAACnC,SAAS,MAAM,GACnD;gBAAE,GALCmC,IAAI;kBAAAuD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAMT,CAAC;cAAA,CACN,CAAC,eACFlH,OAAA;gBAAA6G,QAAA,EAAKF,YAAY,CAACtF;cAAS;gBAAA0F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B,CAAC;UAAA,GArDcC,QAAQ,CAACnE,EAAE;YAAA+D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsDhB,CAAC;QAErB,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEP3G,SAAS,iBACRP,OAAA;MAAA6G,QAAA,gBACE7G,OAAA;QAAA6G,QAAA,GAAI,eAAa,EAACpG,gBAAgB;MAAA;QAAAsG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxClH,OAAA;QAAA6G,QAAA,EAAO;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1BlH,OAAA;QACEwI,IAAI,EAAC,MAAM;QACX9D,KAAK,EAAE7D,SAAU;QACjB4H,QAAQ,EAAEnE;MAAsB;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACFlH,OAAA;QAAA+G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlH,OAAA;QAAA6G,QAAA,EAAO;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBlH,OAAA;QACEwI,IAAI,EAAC,MAAM;QACX9D,KAAK,EAAE3D,OAAQ;QACf0H,QAAQ,EAAE7D;MAAoB;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACFlH,OAAA;QAAA+G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlH,OAAA;QAAA6G,QAAA,EAAO;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBlH,OAAA;QACEwI,IAAI,EAAC,UAAU;QACfE,OAAO,EAAEzH,OAAQ;QACjBwH,QAAQ,EAAE3D;MAAoB;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACFlH,OAAA;QAAA+G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlH,OAAA;QAAA6G,QAAA,EAAO;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvBlH,OAAA;QACEwI,IAAI,EAAC,UAAU;QACfE,OAAO,EAAEvH,SAAU;QACnBsH,QAAQ,EAAEzD;MAAoB;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACFlH,OAAA;QAAA+G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlH,OAAA;QAAQ2H,OAAO,EAAEtB,2BAA4B;QAAAQ,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChH,EAAA,CAlTID,aAAa;AAAA0I,EAAA,GAAb1I,aAAa;AAoTnB,eAAeA,aAAa;AAAC,IAAA0I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}