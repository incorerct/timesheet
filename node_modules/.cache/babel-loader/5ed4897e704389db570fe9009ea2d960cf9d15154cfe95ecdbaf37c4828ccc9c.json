{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n\n  // For displaying the entire month\n  const [year, setYear] = useState(2024); // Set default year\n  const [month, setMonth] = useState(10); // Set default month (November)\n\n  // Fetch employee and timesheet data from Firestore\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), snapshot => {\n        const employeeData = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe;\n    };\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, snapshot => {\n        const updatedTimesheetData = {};\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe;\n    };\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n\n  // Generate all dates in the selected month\n  const getMonthDates = (year, month) => {\n    const dates = [];\n    const date = new Date(year, month, 1);\n    while (date.getMonth() === month) {\n      dates.push(new Date(date));\n      date.setDate(date.getDate() + 1);\n    }\n    return dates;\n  };\n  const weekDates = getMonthDates(year, month);\n\n  // Handle the time settings for a specific employee and date\n  const handleSetTime = (employeeId, date) => {\n    var _timesheetData$employ, _timesheetData$employ2, _timesheetData$employ3, _timesheetData$employ4, _timesheetData$employ5, _timesheetData$employ6;\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setStartTime(((_timesheetData$employ = timesheetData[employeeId]) === null || _timesheetData$employ === void 0 ? void 0 : (_timesheetData$employ2 = _timesheetData$employ[date]) === null || _timesheetData$employ2 === void 0 ? void 0 : _timesheetData$employ2.startTime) || \"\");\n    setEndTime(((_timesheetData$employ3 = timesheetData[employeeId]) === null || _timesheetData$employ3 === void 0 ? void 0 : (_timesheetData$employ4 = _timesheetData$employ3[date]) === null || _timesheetData$employ4 === void 0 ? void 0 : _timesheetData$employ4.endTime) || \"\");\n    setIsHoliday(((_timesheetData$employ5 = timesheetData[employeeId]) === null || _timesheetData$employ5 === void 0 ? void 0 : (_timesheetData$employ6 = _timesheetData$employ5[date]) === null || _timesheetData$employ6 === void 0 ? void 0 : _timesheetData$employ6.isHoliday) || false);\n    setModalOpen(true);\n  };\n\n  // Calculate monthly totals for an employee\n  const calculateMonthlyTotal = employeeId => {\n    let monthlyTotal = {\n      normalTime: 0,\n      nightShift: 0,\n      holidayTime: 0,\n      totalTime: 0\n    };\n    weekDates.forEach(date => {\n      var _timesheetData$employ7;\n      const dateString = date.toISOString().split(\"T\")[0]; // format date as YYYY-MM-DD\n      const data = (_timesheetData$employ7 = timesheetData[employeeId]) === null || _timesheetData$employ7 === void 0 ? void 0 : _timesheetData$employ7[dateString];\n      if (data) {\n        monthlyTotal.normalTime += data.normalTime || 0;\n        monthlyTotal.nightShift += data.nightShift || 0;\n        monthlyTotal.holidayTime += data.holidayTime || 0;\n        monthlyTotal.totalTime += data.totalTime || 0;\n      }\n    });\n    return monthlyTotal;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Shift Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), weekDates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date.toISOString().split(\"T\")[0]\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Monthly Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => {\n          const monthlyTotal = calculateMonthlyTotal(employee.id);\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                rowSpan: 4,\n                children: employee.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Normal Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this), weekDates.map(date => {\n                var _timesheetData$employ8, _timesheetData$employ9, _timesheetData$employ10, _timesheetData$employ11;\n                const dateString = date.toISOString().split(\"T\")[0];\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, dateString),\n                  children: ((_timesheetData$employ8 = timesheetData[employee.id]) === null || _timesheetData$employ8 === void 0 ? void 0 : (_timesheetData$employ9 = _timesheetData$employ8[dateString]) === null || _timesheetData$employ9 === void 0 ? void 0 : _timesheetData$employ9.normalTime) === 0 ? \"0 hrs\" : (_timesheetData$employ10 = timesheetData[employee.id]) !== null && _timesheetData$employ10 !== void 0 && (_timesheetData$employ11 = _timesheetData$employ10[dateString]) !== null && _timesheetData$employ11 !== void 0 && _timesheetData$employ11.normalTime ? `${timesheetData[employee.id][dateString].normalTime} hrs` : \"\"\n                }, dateString, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 23\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [monthlyTotal.normalTime.toFixed(2), \" hrs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Night Shift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), weekDates.map(date => {\n                var _timesheetData$employ12, _timesheetData$employ13, _timesheetData$employ14, _timesheetData$employ15;\n                const dateString = date.toISOString().split(\"T\")[0];\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, dateString),\n                  children: ((_timesheetData$employ12 = timesheetData[employee.id]) === null || _timesheetData$employ12 === void 0 ? void 0 : (_timesheetData$employ13 = _timesheetData$employ12[dateString]) === null || _timesheetData$employ13 === void 0 ? void 0 : _timesheetData$employ13.nightShift) === 0 ? \"0 hrs\" : (_timesheetData$employ14 = timesheetData[employee.id]) !== null && _timesheetData$employ14 !== void 0 && (_timesheetData$employ15 = _timesheetData$employ14[dateString]) !== null && _timesheetData$employ15 !== void 0 && _timesheetData$employ15.nightShift ? `${timesheetData[employee.id][dateString].nightShift} hrs` : \"\"\n                }, dateString, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 23\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [monthlyTotal.nightShift.toFixed(2), \" hrs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Holiday Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), weekDates.map(date => {\n                var _timesheetData$employ16, _timesheetData$employ17, _timesheetData$employ18, _timesheetData$employ19;\n                const dateString = date.toISOString().split(\"T\")[0];\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, dateString),\n                  children: ((_timesheetData$employ16 = timesheetData[employee.id]) === null || _timesheetData$employ16 === void 0 ? void 0 : (_timesheetData$employ17 = _timesheetData$employ16[dateString]) === null || _timesheetData$employ17 === void 0 ? void 0 : _timesheetData$employ17.holidayTime) === 0 ? \"0 hrs\" : (_timesheetData$employ18 = timesheetData[employee.id]) !== null && _timesheetData$employ18 !== void 0 && (_timesheetData$employ19 = _timesheetData$employ18[dateString]) !== null && _timesheetData$employ19 !== void 0 && _timesheetData$employ19.holidayTime ? `${timesheetData[employee.id][dateString].holidayTime} hrs` : \"\"\n                }, dateString, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 23\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [monthlyTotal.holidayTime.toFixed(2), \" hrs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Total Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this), weekDates.map(date => {\n                var _timesheetData$employ20, _timesheetData$employ21, _timesheetData$employ22, _timesheetData$employ23;\n                const dateString = date.toISOString().split(\"T\")[0];\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, dateString),\n                  children: ((_timesheetData$employ20 = timesheetData[employee.id]) === null || _timesheetData$employ20 === void 0 ? void 0 : (_timesheetData$employ21 = _timesheetData$employ20[dateString]) === null || _timesheetData$employ21 === void 0 ? void 0 : _timesheetData$employ21.totalTime) === 0 ? \"0 hrs\" : (_timesheetData$employ22 = timesheetData[employee.id]) !== null && _timesheetData$employ22 !== void 0 && (_timesheetData$employ23 = _timesheetData$employ22[dateString]) !== null && _timesheetData$employ23 !== void 0 && _timesheetData$employ23.totalTime ? `${timesheetData[employee.id][dateString].totalTime} hrs` : \"\"\n                }, dateString, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 23\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [monthlyTotal.totalTime.toFixed(2), \" hrs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: handleStartTimeChange,\n          placeholder: \"Start Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: endTime,\n          onChange: handleEndTimeChange,\n          placeholder: \"End Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: nextDay,\n            onChange: handleNextDayToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), \"Next Day\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isHoliday,\n            onChange: handleHolidayToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), \"Holiday\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Time: \", totalTime, \" hrs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Night Shift Hours: \", nightShiftHours, \" hrs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Holiday Time: \", holidayTime, \" hrs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Normal Time: \", normalTime, \" hrs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveTimesheetDataToFirebase,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"/OHrSzx4tfJXF3Peq6cBU60rLx8=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["React","useState","useEffect","collection","onSnapshot","doc","setDoc","getDoc","db","jsxDEV","_jsxDEV","TimesheetList","_s","employees","setEmployees","timesheetData","setTimesheetData","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","nextDay","setNextDay","isHoliday","setIsHoliday","totalTime","setTotalTime","nightShiftHours","setNightShiftHours","holidayTime","setHolidayTime","normalTime","setNormalTime","year","setYear","month","setMonth","fetchEmployees","unsubscribe","snapshot","employeeData","docs","map","id","data","fetchTimesheetData","timesheetDataRef","updatedTimesheetData","forEach","employeeId","hours","date","record","Object","entries","parseFloat","nightShift","Boolean","getMonthDates","dates","Date","getMonth","push","setDate","getDate","weekDates","handleSetTime","_timesheetData$employ","_timesheetData$employ2","_timesheetData$employ3","_timesheetData$employ4","_timesheetData$employ5","_timesheetData$employ6","calculateMonthlyTotal","monthlyTotal","_timesheetData$employ7","dateString","toISOString","split","children","border","fileName","_jsxFileName","lineNumber","columnNumber","employee","Fragment","rowSpan","name","_timesheetData$employ8","_timesheetData$employ9","_timesheetData$employ10","_timesheetData$employ11","onClick","toFixed","_timesheetData$employ12","_timesheetData$employ13","_timesheetData$employ14","_timesheetData$employ15","_timesheetData$employ16","_timesheetData$employ17","_timesheetData$employ18","_timesheetData$employ19","_timesheetData$employ20","_timesheetData$employ21","_timesheetData$employ22","_timesheetData$employ23","type","value","onChange","handleStartTimeChange","placeholder","handleEndTimeChange","checked","handleNextDayToggle","handleHolidayToggle","saveTimesheetDataToFirebase","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\n\nconst TimesheetList = () => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n\n  // For displaying the entire month\n  const [year, setYear] = useState(2024);  // Set default year\n  const [month, setMonth] = useState(10);  // Set default month (November)\n\n  // Fetch employee and timesheet data from Firestore\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), (snapshot) => {\n        const employeeData = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe;\n    };\n\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, (snapshot) => {\n        const updatedTimesheetData = {};\n        snapshot.forEach((doc) => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0,\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe;\n    };\n\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n\n  // Generate all dates in the selected month\n  const getMonthDates = (year, month) => {\n    const dates = [];\n    const date = new Date(year, month, 1);\n    while (date.getMonth() === month) {\n      dates.push(new Date(date));\n      date.setDate(date.getDate() + 1);\n    }\n    return dates;\n  };\n\n  const weekDates = getMonthDates(year, month);\n\n  // Handle the time settings for a specific employee and date\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setStartTime(timesheetData[employeeId]?.[date]?.startTime || \"\");\n    setEndTime(timesheetData[employeeId]?.[date]?.endTime || \"\");\n    setIsHoliday(timesheetData[employeeId]?.[date]?.isHoliday || false);\n    setModalOpen(true);\n  };\n\n  // Calculate monthly totals for an employee\n  const calculateMonthlyTotal = (employeeId) => {\n    let monthlyTotal = {\n      normalTime: 0,\n      nightShift: 0,\n      holidayTime: 0,\n      totalTime: 0,\n    };\n\n    weekDates.forEach((date) => {\n      const dateString = date.toISOString().split(\"T\")[0];  // format date as YYYY-MM-DD\n      const data = timesheetData[employeeId]?.[dateString];\n      if (data) {\n        monthlyTotal.normalTime += data.normalTime || 0;\n        monthlyTotal.nightShift += data.nightShift || 0;\n        monthlyTotal.holidayTime += data.holidayTime || 0;\n        monthlyTotal.totalTime += data.totalTime || 0;\n      }\n    });\n\n    return monthlyTotal;\n  };\n\n  return (\n    <div>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Shift Type</th>\n            {weekDates.map((date) => (\n              <th key={date}>{date.toISOString().split(\"T\")[0]}</th>\n            ))}\n            <th>Monthly Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => {\n            const monthlyTotal = calculateMonthlyTotal(employee.id);\n            return (\n              <React.Fragment key={employee.id}>\n                <tr>\n                  <td rowSpan={4}>{employee.name}</td>\n                  <td>Normal Time</td>\n                  {weekDates.map((date) => {\n                    const dateString = date.toISOString().split(\"T\")[0];\n                    return (\n                      <td key={dateString} onClick={() => handleSetTime(employee.id, dateString)}>\n                        {timesheetData[employee.id]?.[dateString]?.normalTime === 0\n                          ? \"0 hrs\"\n                          : timesheetData[employee.id]?.[dateString]?.normalTime\n                          ? `${timesheetData[employee.id][dateString].normalTime} hrs`\n                          : \"\"}\n                      </td>\n                    );\n                  })}\n                  <td>{monthlyTotal.normalTime.toFixed(2)} hrs</td>\n                </tr>\n                <tr>\n                  <td>Night Shift</td>\n                  {weekDates.map((date) => {\n                    const dateString = date.toISOString().split(\"T\")[0];\n                    return (\n                      <td key={dateString} onClick={() => handleSetTime(employee.id, dateString)}>\n                        {timesheetData[employee.id]?.[dateString]?.nightShift === 0\n                          ? \"0 hrs\"\n                          : timesheetData[employee.id]?.[dateString]?.nightShift\n                          ? `${timesheetData[employee.id][dateString].nightShift} hrs`\n                          : \"\"}\n                      </td>\n                    );\n                  })}\n                  <td>{monthlyTotal.nightShift.toFixed(2)} hrs</td>\n                </tr>\n                <tr>\n                  <td>Holiday Time</td>\n                  {weekDates.map((date) => {\n                    const dateString = date.toISOString().split(\"T\")[0];\n                    return (\n                      <td key={dateString} onClick={() => handleSetTime(employee.id, dateString)}>\n                        {timesheetData[employee.id]?.[dateString]?.holidayTime === 0\n                          ? \"0 hrs\"\n                          : timesheetData[employee.id]?.[dateString]?.holidayTime\n                          ? `${timesheetData[employee.id][dateString].holidayTime} hrs`\n                          : \"\"}\n                      </td>\n                    );\n                  })}\n                  <td>{monthlyTotal.holidayTime.toFixed(2)} hrs</td>\n                </tr>\n                <tr>\n                  <td>Total Time</td>\n                  {weekDates.map((date) => {\n                    const dateString = date.toISOString().split(\"T\")[0];\n                    return (\n                      <td key={dateString} onClick={() => handleSetTime(employee.id, dateString)}>\n                        {timesheetData[employee.id]?.[dateString]?.totalTime === 0\n                          ? \"0 hrs\"\n                          : timesheetData[employee.id]?.[dateString]?.totalTime\n                          ? `${timesheetData[employee.id][dateString].totalTime} hrs`\n                          : \"\"}\n                      </td>\n                    );\n                  })}\n                  <td>{monthlyTotal.totalTime.toFixed(2)} hrs</td>\n                </tr>\n              </React.Fragment>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {modalOpen && (\n        <div>\n          <div>\n            <input\n              type=\"time\"\n              value={startTime}\n              onChange={handleStartTimeChange}\n              placeholder=\"Start Time\"\n            />\n            <input\n              type=\"time\"\n              value={endTime}\n              onChange={handleEndTimeChange}\n              placeholder=\"End Time\"\n            />\n          </div>\n          <div>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={nextDay}\n                onChange={handleNextDayToggle}\n              />\n              Next Day\n            </label>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={isHoliday}\n                onChange={handleHolidayToggle}\n              />\n              Holiday\n            </label>\n          </div>\n          <div>\n            <p>Total Time: {totalTime} hrs</p>\n            <p>Night Shift Hours: {nightShiftHours} hrs</p>\n            <p>Holiday Time: {holidayTime} hrs</p>\n            <p>Normal Time: {normalTime} hrs</p>\n            <button onClick={saveTimesheetDataToFirebase}>Save</button>\n            <button onClick={() => setModalOpen(false)}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}