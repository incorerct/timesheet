{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = ({\n  weekDates\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), snapshot => {\n        const employeeData = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe; // Cleanup on unmount\n    };\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, snapshot => {\n        const updatedTimesheetData = {};\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe; // Cleanup on unmount\n    };\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n  const handleSetTime = (employeeId, date) => {\n    var _timesheetData$employ, _timesheetData$employ2, _timesheetData$employ3, _timesheetData$employ4, _timesheetData$employ5, _timesheetData$employ6;\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setStartTime(((_timesheetData$employ = timesheetData[employeeId]) === null || _timesheetData$employ === void 0 ? void 0 : (_timesheetData$employ2 = _timesheetData$employ[date]) === null || _timesheetData$employ2 === void 0 ? void 0 : _timesheetData$employ2.startTime) || \"\");\n    setEndTime(((_timesheetData$employ3 = timesheetData[employeeId]) === null || _timesheetData$employ3 === void 0 ? void 0 : (_timesheetData$employ4 = _timesheetData$employ3[date]) === null || _timesheetData$employ4 === void 0 ? void 0 : _timesheetData$employ4.endTime) || \"\");\n    setIsHoliday(((_timesheetData$employ5 = timesheetData[employeeId]) === null || _timesheetData$employ5 === void 0 ? void 0 : (_timesheetData$employ6 = _timesheetData$employ5[date]) === null || _timesheetData$employ6 === void 0 ? void 0 : _timesheetData$employ6.isHoliday) || false);\n    setModalOpen(true);\n  };\n  const handleStartTimeChange = event => {\n    setStartTime(event.target.value);\n    calculateTimes(event.target.value, endTime, nextDay, isHoliday);\n  };\n  const handleEndTimeChange = event => {\n    setEndTime(event.target.value);\n    calculateTimes(startTime, event.target.value, nextDay, isHoliday);\n  };\n  const handleNextDayToggle = () => {\n    setNextDay(prev => !prev);\n    calculateTimes(startTime, endTime, !nextDay, isHoliday);\n  };\n  const handleHolidayToggle = () => {\n    const newIsHoliday = !isHoliday;\n    setIsHoliday(newIsHoliday);\n    if (newIsHoliday) {\n      setHolidayTime(totalTime);\n      setNormalTime(0);\n      setNightShiftHours(0);\n      setTotalTime(0);\n    } else {\n      calculateTimes(startTime, endTime, nextDay, false);\n    }\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  };\n  const calculateTimes = (start, end, isNextDay, isHoliday) => {\n    if (!start || !end) return;\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0);\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1);\n    nightShiftEnd.setHours(6, 0, 0);\n    let nightShiftHours = 0;\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n    const normalTime = isHoliday ? 0 : totalTimeInHours - nightShiftHours;\n    setNormalTime(normalTime.toFixed(2));\n    const holidayTime = isHoliday ? totalTimeInHours : 0;\n    setHolidayTime(holidayTime.toFixed(2));\n  };\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    try {\n      var _await$getDoc$data;\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId);\n      const timesheetData = ((_await$getDoc$data = (await getDoc(timesheetDocRef)).data()) === null || _await$getDoc$data === void 0 ? void 0 : _await$getDoc$data.hours) || {};\n      timesheetData[date] = {\n        startTime: start,\n        endTime: end,\n        totalTime: parseFloat(totalTime),\n        nightShift: parseFloat(nightShift),\n        holidayTime: parseFloat(holidayTime),\n        normalTime: parseFloat(normalTime),\n        isHoliday\n      };\n      await setDoc(timesheetDocRef, {\n        hours: timesheetData\n      });\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n  const handleInputChange = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    setTimesheetData(prevData => {\n      const newData = {\n        ...prevData\n      };\n      newData[employeeId][date] = {\n        startTime: start,\n        endTime: end,\n        totalTime,\n        nightShift,\n        holidayTime,\n        isHoliday,\n        normalTime\n      };\n      return newData;\n    });\n    await saveTimesheetDataToFirebase(employeeId, date, start, end, totalTime, nightShift, holidayTime);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Shift Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), weekDates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              rowSpan: 4,\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Normal Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), weekDates.map(date => {\n              var _timesheetData$employ7, _timesheetData$employ8;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handleSetTime(employee.id, date),\n                children: ((_timesheetData$employ7 = timesheetData[employee.id]) === null || _timesheetData$employ7 === void 0 ? void 0 : (_timesheetData$employ8 = _timesheetData$employ7[date]) === null || _timesheetData$employ8 === void 0 ? void 0 : _timesheetData$employ8.normalTime) || \"0 hrs\"\n              }, date, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Night Shift\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), weekDates.map(date => {\n              var _timesheetData$employ9, _timesheetData$employ10;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handleSetTime(employee.id, date),\n                children: ((_timesheetData$employ9 = timesheetData[employee.id]) === null || _timesheetData$employ9 === void 0 ? void 0 : (_timesheetData$employ10 = _timesheetData$employ9[date]) === null || _timesheetData$employ10 === void 0 ? void 0 : _timesheetData$employ10.nightShift) || \"0 hrs\"\n              }, date, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Holiday Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), weekDates.map(date => {\n              var _timesheetData$employ11, _timesheetData$employ12;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handleSetTime(employee.id, date),\n                children: ((_timesheetData$employ11 = timesheetData[employee.id]) === null || _timesheetData$employ11 === void 0 ? void 0 : (_timesheetData$employ12 = _timesheetData$employ11[date]) === null || _timesheetData$employ12 === void 0 ? void 0 : _timesheetData$employ12.holidayTime) || \"0 hrs\"\n              }, date, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Total Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), weekDates.map(date => {\n              var _timesheetData$employ13, _timesheetData$employ14;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handleSetTime(employee.id, date),\n                children: ((_timesheetData$employ13 = timesheetData[employee.id]) === null || _timesheetData$employ13 === void 0 ? void 0 : (_timesheetData$employ14 = _timesheetData$employ13[date]) === null || _timesheetData$employ14 === void 0 ? void 0 : _timesheetData$employ14.totalTime) || \"0 hrs\"\n              }, date, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: handleStartTimeChange,\n          placeholder: \"Start Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: endTime,\n          onChange: handleEndTimeChange,\n          placeholder: \"End Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Next Day\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: nextDay,\n          onChange: handleNextDayToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Holiday\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isHoliday,\n          onChange: handleHolidayToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleInputChange(selectedEmployee, selectedDate, startTime, endTime, totalTime, nightShiftHours, holidayTime),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCloseModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"LuJF93aoCyJzjR3hVD8EVfLaOJo=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["React","useState","useEffect","collection","onSnapshot","doc","setDoc","getDoc","db","jsxDEV","_jsxDEV","TimesheetList","weekDates","_s","employees","setEmployees","timesheetData","setTimesheetData","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","nextDay","setNextDay","isHoliday","setIsHoliday","totalTime","setTotalTime","nightShiftHours","setNightShiftHours","holidayTime","setHolidayTime","normalTime","setNormalTime","fetchEmployees","unsubscribe","snapshot","employeeData","docs","map","id","data","fetchTimesheetData","timesheetDataRef","updatedTimesheetData","forEach","employeeId","hours","date","record","Object","entries","parseFloat","nightShift","Boolean","handleSetTime","_timesheetData$employ","_timesheetData$employ2","_timesheetData$employ3","_timesheetData$employ4","_timesheetData$employ5","_timesheetData$employ6","handleStartTimeChange","event","target","value","calculateTimes","handleEndTimeChange","handleNextDayToggle","prev","handleHolidayToggle","newIsHoliday","handleCloseModal","start","end","isNextDay","startHours","startMinutes","split","Number","endHours","endMinutes","startDate","Date","setHours","endDate","setDate","getDate","totalTimeInHours","nightShiftStart","nightShiftEnd","nightShiftStartTime","nightShiftEndTime","toFixed","saveTimesheetDataToFirebase","_await$getDoc$data","timesheetDocRef","error","console","handleInputChange","prevData","newData","children","border","fileName","_jsxFileName","lineNumber","columnNumber","employee","Fragment","rowSpan","name","_timesheetData$employ7","_timesheetData$employ8","onClick","_timesheetData$employ9","_timesheetData$employ10","_timesheetData$employ11","_timesheetData$employ12","_timesheetData$employ13","_timesheetData$employ14","type","onChange","placeholder","checked","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\n\nconst TimesheetList = ({ weekDates }) => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), (snapshot) => {\n        const employeeData = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe; // Cleanup on unmount\n    };\n\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, (snapshot) => {\n        const updatedTimesheetData = {};\n        snapshot.forEach((doc) => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0,\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe; // Cleanup on unmount\n    };\n\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setStartTime(timesheetData[employeeId]?.[date]?.startTime || \"\");\n    setEndTime(timesheetData[employeeId]?.[date]?.endTime || \"\");\n    setIsHoliday(timesheetData[employeeId]?.[date]?.isHoliday || false);\n    setModalOpen(true);\n  };\n\n  const handleStartTimeChange = (event) => {\n    setStartTime(event.target.value);\n    calculateTimes(event.target.value, endTime, nextDay, isHoliday);\n  };\n\n  const handleEndTimeChange = (event) => {\n    setEndTime(event.target.value);\n    calculateTimes(startTime, event.target.value, nextDay, isHoliday);\n  };\n\n  const handleNextDayToggle = () => {\n    setNextDay((prev) => !prev);\n    calculateTimes(startTime, endTime, !nextDay, isHoliday);\n  };\n\n  const handleHolidayToggle = () => {\n    const newIsHoliday = !isHoliday;\n    setIsHoliday(newIsHoliday);\n    if (newIsHoliday) {\n      setHolidayTime(totalTime);\n      setNormalTime(0);\n      setNightShiftHours(0);\n      setTotalTime(0);\n    } else {\n      calculateTimes(startTime, endTime, nextDay, false);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  };\n\n  const calculateTimes = (start, end, isNextDay, isHoliday) => {\n    if (!start || !end) return;\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0);\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1);\n    nightShiftEnd.setHours(6, 0, 0);\n    let nightShiftHours = 0;\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n    const normalTime = isHoliday ? 0 : totalTimeInHours - nightShiftHours;\n    setNormalTime(normalTime.toFixed(2));\n    const holidayTime = isHoliday ? totalTimeInHours : 0;\n    setHolidayTime(holidayTime.toFixed(2));\n  };\n\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId);\n      const timesheetData = (await getDoc(timesheetDocRef)).data()?.hours || {};\n      timesheetData[date] = {\n        startTime: start,\n        endTime: end,\n        totalTime: parseFloat(totalTime),\n        nightShift: parseFloat(nightShift),\n        holidayTime: parseFloat(holidayTime),\n        normalTime: parseFloat(normalTime),\n        isHoliday,\n      };\n      await setDoc(timesheetDocRef, { hours: timesheetData });\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  const handleInputChange = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    setTimesheetData((prevData) => {\n      const newData = { ...prevData };\n      newData[employeeId][date] = { startTime: start, endTime: end, totalTime, nightShift, holidayTime, isHoliday, normalTime };\n      return newData;\n    });\n    await saveTimesheetDataToFirebase(employeeId, date, start, end, totalTime, nightShift, holidayTime);\n  };\n\n  return (\n    <div>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Shift Type</th>\n            {weekDates.map((date) => (\n              <th key={date}>{date}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => (\n            <React.Fragment key={employee.id}>\n              <tr>\n                <td rowSpan={4}>{employee.name}</td>\n                <td>Normal Time</td>\n                {weekDates.map((date) => (\n                  <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                    {timesheetData[employee.id]?.[date]?.normalTime || \"0 hrs\"}\n                  </td>\n                ))}\n              </tr>\n              <tr>\n                <td>Night Shift</td>\n                {weekDates.map((date) => (\n                  <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                    {timesheetData[employee.id]?.[date]?.nightShift || \"0 hrs\"}\n                  </td>\n                ))}\n              </tr>\n              <tr>\n                <td>Holiday Time</td>\n                {weekDates.map((date) => (\n                  <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                    {timesheetData[employee.id]?.[date]?.holidayTime || \"0 hrs\"}\n                  </td>\n                ))}\n              </tr>\n              <tr>\n                <td>Total Time</td>\n                {weekDates.map((date) => (\n                  <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                    {timesheetData[employee.id]?.[date]?.totalTime || \"0 hrs\"}\n                  </td>\n                ))}\n              </tr>\n            </React.Fragment>\n          ))}\n        </tbody>\n      </table>\n\n      {modalOpen && (\n        <div>\n          <div>\n            <input\n              type=\"time\"\n              value={startTime}\n              onChange={handleStartTimeChange}\n              placeholder=\"Start Time\"\n            />\n            <input\n              type=\"time\"\n              value={endTime}\n              onChange={handleEndTimeChange}\n              placeholder=\"End Time\"\n            />\n          </div>\n          <label>\n            Next Day\n            <input type=\"checkbox\" checked={nextDay} onChange={handleNextDayToggle} />\n          </label>\n          <label>\n            Holiday\n            <input type=\"checkbox\" checked={isHoliday} onChange={handleHolidayToggle} />\n          </label>\n          <div>\n            <button\n              onClick={() =>\n                handleInputChange(\n                  selectedEmployee,\n                  selectedDate,\n                  startTime,\n                  endTime,\n                  totalTime,\n                  nightShiftHours,\n                  holidayTime\n                )\n              }\n            >\n              Save\n            </button>\n            <button onClick={handleCloseModal}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}