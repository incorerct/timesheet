{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { collection, getDocs, getDoc, doc, setDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = ({\n  weekDates\n}) => {\n  _s();\n  var _employees$find;\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [timeAdjustments, setTimeAdjustments] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [nextDay, setNextDay] = useState(false); // Checkbox to indicate if the shift extends to the next day\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const employeeSnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = employeeSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n        const settingsDocRef = doc(db, \"timeAdjustments\", \"settings\");\n        const settingsDoc = await getDoc(settingsDocRef);\n        if (settingsDoc.exists()) {\n          setTimeAdjustments(settingsDoc.data());\n        } else {\n          console.log(\"No time adjustments found\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const calculateTotalTimeAndNightShift = (start, end) => {\n    const startParts = start.split(\":\").map(Number);\n    const endParts = end.split(\":\").map(Number);\n    let startDate = new Date();\n    startDate.setHours(startParts[0], startParts[1], 0);\n    let endDate = new Date();\n    endDate.setHours(endParts[0], endParts[1], 0);\n    if (nextDay) endDate.setDate(endDate.getDate() + 1);\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    let nightShift = 0;\n    let normalHours = 0;\n    if (startParts[0] < 9) {\n      nightShift += Math.min(6 - startParts[0], totalTimeInHours);\n    }\n    if (endParts[0] >= 22 || nextDay) {\n      nightShift += Math.min(endParts[0] < 6 ? endParts[0] : 6, totalTimeInHours);\n    }\n    normalHours = totalTimeInHours - nightShift;\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShift.toFixed(2));\n  };\n  const handleInputChange = async (employeeId, date, start, end, totalTime, nightShift) => {\n    setTimesheetData(prevData => {\n      const newData = {\n        ...prevData\n      };\n      newData[employeeId][date] = {\n        startTime: start,\n        endTime: end,\n        totalTime,\n        nightShift\n      };\n      return newData;\n    });\n    await saveTimesheetDataToFirebase(employeeId, date, start, end, totalTime, nightShift);\n  };\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setStartTime(\"\");\n    setEndTime(\"\");\n    setTotalTime(0);\n    setNightShiftHours(0);\n    setNextDay(false);\n  };\n  const handleStartTimeChange = e => {\n    setStartTime(e.target.value);\n    if (endTime) {\n      calculateTotalTimeAndNightShift(e.target.value, endTime);\n    }\n  };\n  const handleEndTimeChange = e => {\n    setEndTime(e.target.value);\n    if (startTime) {\n      calculateTotalTimeAndNightShift(startTime, e.target.value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), weekDates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), weekDates.map(date => {\n            var _timesheetData$employ, _timesheetData$employ2;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSetTime(employee.id, date),\n                children: \"Set Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), ((_timesheetData$employ = timesheetData[employee.id]) === null || _timesheetData$employ === void 0 ? void 0 : (_timesheetData$employ2 = _timesheetData$employ[date]) === null || _timesheetData$employ2 === void 0 ? void 0 : _timesheetData$employ2.totalTime) && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Total Time: \", timesheetData[employee.id][date].totalTime, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Night Shift: \", timesheetData[employee.id][date].nightShift, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this)]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this);\n          })]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Set Time for \", (_employees$find = employees.find(emp => emp.id === selectedEmployee)) === null || _employees$find === void 0 ? void 0 : _employees$find.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date: \", selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: handleStartTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: endTime,\n          onChange: handleEndTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Next Day?\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: nextDay,\n          onChange: () => setNextDay(!nextDay)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Time: \", totalTime, \" hours\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Night Shift: \", nightShiftHours, \" hours\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handleInputChange(selectedEmployee, selectedDate, startTime, endTime, totalTime, nightShiftHours);\n          handleCloseModal();\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCloseModal,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"CKNUnAA+qE0MigPSCMMBvFBDHUE=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["useState","useEffect","collection","getDocs","getDoc","doc","setDoc","db","jsxDEV","_jsxDEV","TimesheetList","weekDates","_s","_employees$find","employees","setEmployees","timesheetData","setTimesheetData","timeAdjustments","setTimeAdjustments","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","totalTime","setTotalTime","nightShiftHours","setNightShiftHours","nextDay","setNextDay","fetchData","employeeSnapshot","employeeData","docs","map","id","data","settingsDocRef","settingsDoc","exists","console","log","error","calculateTotalTimeAndNightShift","start","end","startParts","split","Number","endParts","startDate","Date","setHours","endDate","setDate","getDate","totalTimeInHours","nightShift","normalHours","Math","min","toFixed","handleInputChange","employeeId","date","prevData","newData","saveTimesheetDataToFirebase","handleSetTime","handleCloseModal","handleStartTimeChange","e","target","value","handleEndTimeChange","children","border","fileName","_jsxFileName","lineNumber","columnNumber","employee","name","_timesheetData$employ","_timesheetData$employ2","onClick","find","emp","type","onChange","checked","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { collection, getDocs, getDoc, doc, setDoc } from \"firebase/firestore\"; \nimport { db } from \"./firebaseConfig\";\n\nconst TimesheetList = ({ weekDates }) => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [timeAdjustments, setTimeAdjustments] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [nextDay, setNextDay] = useState(false); // Checkbox to indicate if the shift extends to the next day\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const employeeSnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = employeeSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n\n        const settingsDocRef = doc(db, \"timeAdjustments\", \"settings\");\n        const settingsDoc = await getDoc(settingsDocRef);\n        if (settingsDoc.exists()) {\n          setTimeAdjustments(settingsDoc.data());\n        } else {\n          console.log(\"No time adjustments found\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const calculateTotalTimeAndNightShift = (start, end) => {\n    const startParts = start.split(\":\").map(Number);\n    const endParts = end.split(\":\").map(Number);\n\n    let startDate = new Date();\n    startDate.setHours(startParts[0], startParts[1], 0);\n\n    let endDate = new Date();\n    endDate.setHours(endParts[0], endParts[1], 0);\n\n    if (nextDay) endDate.setDate(endDate.getDate() + 1);\n\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n\n    let nightShift = 0;\n    let normalHours = 0;\n\n    if (startParts[0] < 9) {\n      nightShift += Math.min(6 - startParts[0], totalTimeInHours);\n    }\n    if (endParts[0] >= 22 || nextDay) {\n      nightShift += Math.min(endParts[0] < 6 ? endParts[0] : 6, totalTimeInHours);\n    }\n\n    normalHours = totalTimeInHours - nightShift;\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShift.toFixed(2));\n  };\n\n  const handleInputChange = async (employeeId, date, start, end, totalTime, nightShift) => {\n    setTimesheetData((prevData) => {\n      const newData = { ...prevData };\n      newData[employeeId][date] = { startTime: start, endTime: end, totalTime, nightShift };\n      return newData;\n    });\n\n    await saveTimesheetDataToFirebase(employeeId, date, start, end, totalTime, nightShift);\n  };\n\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setStartTime(\"\");\n    setEndTime(\"\");\n    setTotalTime(0);\n    setNightShiftHours(0);\n    setNextDay(false);\n  };\n\n  const handleStartTimeChange = (e) => {\n    setStartTime(e.target.value);\n    if (endTime) {\n      calculateTotalTimeAndNightShift(e.target.value, endTime);\n    }\n  };\n\n  const handleEndTimeChange = (e) => {\n    setEndTime(e.target.value);\n    if (startTime) {\n      calculateTotalTimeAndNightShift(startTime, e.target.value);\n    }\n  };\n\n  return (\n    <div>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Employee</th>\n            {weekDates.map((date) => (\n              <th key={date}>{date}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => (\n            <tr key={employee.id}>\n              <td>{employee.name}</td>\n              {weekDates.map((date) => (\n                <td key={date}>\n                  <button onClick={() => handleSetTime(employee.id, date)}>Set Time</button>\n                  {timesheetData[employee.id]?.[date]?.totalTime && (\n                    <div>\n                      <p>Total Time: {timesheetData[employee.id][date].totalTime} hours</p>\n                      <p>Night Shift: {timesheetData[employee.id][date].nightShift} hours</p>\n                    </div>\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {modalOpen && (\n        <div>\n          <h3>Set Time for {employees.find(emp => emp.id === selectedEmployee)?.name}</h3>\n          <p>Date: {selectedDate}</p>\n          <label>\n            Start Time:\n            <input type=\"time\" value={startTime} onChange={handleStartTimeChange} />\n          </label>\n          <label>\n            End Time:\n            <input type=\"time\" value={endTime} onChange={handleEndTimeChange} />\n          </label>\n          <label>\n            Next Day?\n            <input type=\"checkbox\" checked={nextDay} onChange={() => setNextDay(!nextDay)} />\n          </label>\n          <div>\n            <p>Total Time: {totalTime} hours</p>\n            <p>Night Shift: {nightShiftHours} hours</p>\n          </div>\n          <button\n            onClick={() => {\n              handleInputChange(\n                selectedEmployee,\n                selectedDate,\n                startTime,\n                endTime,\n                totalTime,\n                nightShiftHours\n              );\n              handleCloseModal();\n            }}\n          >\n            Save\n          </button>\n          <button onClick={handleCloseModal}>Cancel</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}