{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\n// src/TimesheetList.js\nimport React, { useEffect, useState } from 'react';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from './firebaseConfig';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TextField, Typography, Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TimesheetList() {\n  _s();\n  const [timesheets, setTimesheets] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [workHours, setWorkHours] = useState({}); // For tracking work hours entered manually\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const querySnapshot = await getDocs(collection(db, 'timesheets'));\n      const timesheetData = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        date: doc.data().startTime.toDate().toLocaleDateString() // Extract date for easier display\n      }));\n\n      // Organize data by employee names\n      const groupedData = timesheetData.reduce((acc, entry) => {\n        const {\n          name,\n          date,\n          hoursWorked\n        } = entry;\n        if (!acc[name]) acc[name] = {};\n        acc[name][date] = hoursWorked;\n        return acc;\n      }, {});\n\n      // Set unique dates in sorted order for table columns\n      const uniqueDates = [...new Set(timesheetData.map(entry => entry.date))].sort();\n      setDates(uniqueDates);\n      setTimesheets(groupedData);\n    };\n    fetchData();\n  }, []);\n\n  // Handle manual input of work hours\n  const handleWorkHoursChange = (employeeName, date, value) => {\n    setWorkHours(prev => ({\n      ...prev,\n      [employeeName]: {\n        ...prev[employeeName],\n        [date]: value\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    sx: {\n      padding: 2,\n      boxShadow: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Employee Timesheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Employee Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), dates.map(date => /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 52\n            }, this)\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: Object.keys(timesheets).map(name => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), dates.map(date => {\n            var _workHours$name;\n            return /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"number\",\n                value: ((_workHours$name = workHours[name]) === null || _workHours$name === void 0 ? void 0 : _workHours$name[date]) || timesheets[name][date] || '',\n                onChange: e => handleWorkHoursChange(name, date, e.target.value),\n                size: \"small\",\n                variant: \"outlined\",\n                fullWidth: true,\n                inputProps: {\n                  min: 0\n                },\n                sx: {\n                  width: '80px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this);\n          })]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(TimesheetList, \"vBKNTRjcUtK/xYbGSsPDIadSFSE=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["React","useEffect","useState","collection","getDocs","db","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TextField","Typography","Grid","jsxDEV","_jsxDEV","TimesheetList","_s","timesheets","setTimesheets","dates","setDates","workHours","setWorkHours","fetchData","querySnapshot","timesheetData","docs","map","doc","id","data","date","startTime","toDate","toLocaleDateString","groupedData","reduce","acc","entry","name","hoursWorked","uniqueDates","Set","sort","handleWorkHoursChange","employeeName","value","prev","component","sx","padding","boxShadow","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","scope","_workHours$name","type","onChange","e","target","size","fullWidth","inputProps","min","width","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["// src/TimesheetList.js\nimport React, { useEffect, useState } from 'react';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from './firebaseConfig';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TextField, Typography, Grid } from '@mui/material';\n\nfunction TimesheetList() {\n  const [timesheets, setTimesheets] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [workHours, setWorkHours] = useState({}); // For tracking work hours entered manually\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const querySnapshot = await getDocs(collection(db, 'timesheets'));\n      const timesheetData = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        date: doc.data().startTime.toDate().toLocaleDateString() // Extract date for easier display\n      }));\n\n      // Organize data by employee names\n      const groupedData = timesheetData.reduce((acc, entry) => {\n        const { name, date, hoursWorked } = entry;\n        if (!acc[name]) acc[name] = {};\n        acc[name][date] = hoursWorked;\n        return acc;\n      }, {});\n\n      // Set unique dates in sorted order for table columns\n      const uniqueDates = [...new Set(timesheetData.map(entry => entry.date))].sort();\n\n      setDates(uniqueDates);\n      setTimesheets(groupedData);\n    };\n\n    fetchData();\n  }, []);\n\n  // Handle manual input of work hours\n  const handleWorkHoursChange = (employeeName, date, value) => {\n    setWorkHours((prev) => ({\n      ...prev,\n      [employeeName]: {\n        ...prev[employeeName],\n        [date]: value\n      }\n    }));\n  };\n\n  return (\n    <TableContainer component={Paper} sx={{ padding: 2, boxShadow: 3 }}>\n      <Typography variant=\"h4\" gutterBottom align=\"center\">Employee Timesheet</Typography>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell><strong>Employee Name</strong></TableCell>\n            {dates.map((date) => (\n              <TableCell key={date} align=\"center\"><strong>{date}</strong></TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {Object.keys(timesheets).map((name) => (\n            <TableRow key={name}>\n              <TableCell component=\"th\" scope=\"row\"><strong>{name}</strong></TableCell>\n              {dates.map((date) => (\n                <TableCell key={date} align=\"center\">\n                  <TextField\n                    type=\"number\"\n                    value={workHours[name]?.[date] || timesheets[name][date] || ''}\n                    onChange={(e) => handleWorkHoursChange(name, date, e.target.value)}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    fullWidth\n                    inputProps={{ min: 0 }}\n                    sx={{ width: '80px' }}\n                  />\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default TimesheetList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}