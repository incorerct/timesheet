{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport './TimesheetStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const today = new Date(); // Today's date\n\n  const generateMonthDays = (year, month) => {\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const days = [];\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push(`${month + 1}-${day < 10 ? '0' + day : day}`);\n    }\n    return days;\n  };\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), snapshot => {\n        const employeeData = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe;\n    };\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, snapshot => {\n        const updatedTimesheetData = {};\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe;\n    };\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n  const handleSetTime = (employeeId, date) => {\n    var _timesheetData$employ, _timesheetData$employ2, _timesheetData$employ3, _timesheetData$employ4, _timesheetData$employ5, _timesheetData$employ6;\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setStartTime(((_timesheetData$employ = timesheetData[employeeId]) === null || _timesheetData$employ === void 0 ? void 0 : (_timesheetData$employ2 = _timesheetData$employ[date]) === null || _timesheetData$employ2 === void 0 ? void 0 : _timesheetData$employ2.startTime) || \"\");\n    setEndTime(((_timesheetData$employ3 = timesheetData[employeeId]) === null || _timesheetData$employ3 === void 0 ? void 0 : (_timesheetData$employ4 = _timesheetData$employ3[date]) === null || _timesheetData$employ4 === void 0 ? void 0 : _timesheetData$employ4.endTime) || \"\");\n    setIsHoliday(((_timesheetData$employ5 = timesheetData[employeeId]) === null || _timesheetData$employ5 === void 0 ? void 0 : (_timesheetData$employ6 = _timesheetData$employ5[date]) === null || _timesheetData$employ6 === void 0 ? void 0 : _timesheetData$employ6.isHoliday) || false);\n    setModalOpen(true);\n  };\n  const handleStartTimeChange = event => {\n    const newStartTime = event.target.value;\n    setStartTime(newStartTime);\n    calculateTimes(newStartTime, endTime, nextDay, isHoliday);\n  };\n  const handleEndTimeChange = event => {\n    const newEndTime = event.target.value;\n    setEndTime(newEndTime);\n    calculateTimes(startTime, newEndTime, nextDay, isHoliday);\n  };\n  const handleNextDayToggle = () => {\n    const newNextDay = !nextDay;\n    setNextDay(newNextDay);\n    calculateTimes(startTime, endTime, newNextDay, isHoliday);\n  };\n  const handleHolidayToggle = () => {\n    const newIsHoliday = !isHoliday;\n    setIsHoliday(newIsHoliday);\n    calculateTimes(startTime, endTime, nextDay, newIsHoliday);\n  };\n  const calculateTimes = (start, end, isNextDay, isHoliday) => {\n    if (!start || !end) return;\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0);\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1);\n    nightShiftEnd.setHours(6, 0, 0);\n    let nightShiftHours = 0;\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n    const normalTime = isHoliday ? 0 : totalTimeInHours - nightShiftHours;\n    setNormalTime(normalTime.toFixed(2));\n    const holidayTime = isHoliday ? totalTimeInHours : 0;\n    setHolidayTime(holidayTime.toFixed(2));\n  };\n  const saveTimesheetDataToFirebase = async () => {\n    try {\n      var _await$getDoc$data;\n      const timesheetDocRef = doc(db, \"timesheets\", selectedEmployee);\n      const timesheetData = ((_await$getDoc$data = (await getDoc(timesheetDocRef)).data()) === null || _await$getDoc$data === void 0 ? void 0 : _await$getDoc$data.hours) || {};\n      timesheetData[selectedDate] = {\n        startTime,\n        endTime,\n        totalTime: parseFloat(totalTime),\n        nightShift: parseFloat(nightShiftHours),\n        holidayTime: parseFloat(holidayTime),\n        normalTime: parseFloat(normalTime),\n        isHoliday\n      };\n      await setDoc(timesheetDocRef, {\n        hours: timesheetData\n      });\n      setModalOpen(false);\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n  const calculateMonthlyTotal = employeeId => {\n    let monthlyTotal = {\n      normalTime: 0,\n      nightShift: 0,\n      holidayTime: 0,\n      totalTime: 0\n    };\n    const monthDays = generateMonthDays(currentYear, currentMonth);\n    monthDays.forEach(date => {\n      var _timesheetData$employ7;\n      const data = (_timesheetData$employ7 = timesheetData[employeeId]) === null || _timesheetData$employ7 === void 0 ? void 0 : _timesheetData$employ7[date];\n      if (data) {\n        monthlyTotal.normalTime += data.normalTime || 0;\n        monthlyTotal.nightShift += data.nightShift || 0;\n        monthlyTotal.holidayTime += data.holidayTime || 0;\n        monthlyTotal.totalTime += data.totalTime || 0;\n      }\n    });\n    return monthlyTotal;\n  };\n  const goToPreviousMonth = () => {\n    setCurrentMonth(prevMonth => prevMonth === 0 ? 11 : prevMonth - 1);\n    if (currentMonth === 0) setCurrentYear(currentYear - 1);\n  };\n  const goToNextMonth = () => {\n    setCurrentMonth(prevMonth => prevMonth === 11 ? 0 : prevMonth + 1);\n    if (currentMonth === 11) setCurrentYear(currentYear + 1);\n  };\n  const monthDays = generateMonthDays(currentYear, currentMonth);\n  const isToday = (month, day) => {\n    return month === today.getMonth() + 1 && day === today.getDate() && currentYear === today.getFullYear();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToPreviousMonth,\n      children: \"Previous Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: new Date(currentYear, currentMonth).toLocaleString('default', {\n        month: 'long',\n        year: 'numeric'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToNextMonth,\n      children: \"Next Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Shift\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), monthDays.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => {\n          const monthlyTotal = calculateMonthlyTotal(employee.id);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: employee.id === selectedEmployee ? 'highlight' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: monthlyTotal.totalTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), monthDays.map(date => {\n              var _timesheetData$employ8;\n              const dayData = (_timesheetData$employ8 = timesheetData[employee.id]) === null || _timesheetData$employ8 === void 0 ? void 0 : _timesheetData$employ8[date];\n              const isTodayRow = isToday(currentMonth + 1, parseInt(date.split('-')[1]));\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: isTodayRow ? 'highlight-row' : '',\n                onClick: () => handleSetTime(employee.id, date),\n                children: dayData ? `${dayData.totalTime} hrs` : \"No data\"\n              }, date, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this);\n            })]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Set Time for \", selectedEmployee]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Start Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: handleStartTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"End Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: endTime,\n          onChange: handleEndTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Next Day?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: nextDay,\n          onChange: handleNextDayToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Holiday?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isHoliday,\n          onChange: handleHolidayToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Time: \", totalTime, \" hrs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Night Shift: \", nightShiftHours, \" hrs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Holiday Time: \", holidayTime, \" hrs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Normal Time: \", normalTime, \" hrs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveTimesheetDataToFirebase,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"GtL7G+CIYHZoqFNJ+BgOdeBo91k=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["React","useState","useEffect","collection","onSnapshot","doc","setDoc","getDoc","db","jsxDEV","_jsxDEV","TimesheetList","_s","employees","setEmployees","timesheetData","setTimesheetData","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","nextDay","setNextDay","isHoliday","setIsHoliday","totalTime","setTotalTime","nightShiftHours","setNightShiftHours","holidayTime","setHolidayTime","normalTime","setNormalTime","currentMonth","setCurrentMonth","Date","getMonth","currentYear","setCurrentYear","getFullYear","today","generateMonthDays","year","month","daysInMonth","getDate","days","day","push","fetchEmployees","unsubscribe","snapshot","employeeData","docs","map","id","data","fetchTimesheetData","timesheetDataRef","updatedTimesheetData","forEach","employeeId","hours","date","record","Object","entries","parseFloat","nightShift","Boolean","handleSetTime","_timesheetData$employ","_timesheetData$employ2","_timesheetData$employ3","_timesheetData$employ4","_timesheetData$employ5","_timesheetData$employ6","handleStartTimeChange","event","newStartTime","target","value","calculateTimes","handleEndTimeChange","newEndTime","handleNextDayToggle","newNextDay","handleHolidayToggle","newIsHoliday","start","end","isNextDay","startHours","startMinutes","split","Number","endHours","endMinutes","startDate","setHours","endDate","setDate","totalTimeInHours","nightShiftStart","nightShiftEnd","nightShiftStartTime","nightShiftEndTime","toFixed","saveTimesheetDataToFirebase","_await$getDoc$data","timesheetDocRef","error","console","calculateMonthlyTotal","monthlyTotal","monthDays","_timesheetData$employ7","goToPreviousMonth","prevMonth","goToNextMonth","isToday","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","border","employee","className","name","_timesheetData$employ8","dayData","isTodayRow","parseInt","type","onChange","checked","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport './TimesheetStyles.css';\n\nconst TimesheetList = () => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const today = new Date(); // Today's date\n\n  const generateMonthDays = (year, month) => {\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const days = [];\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push(`${month + 1}-${day < 10 ? '0' + day : day}`);\n    }\n    return days;\n  };\n\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), (snapshot) => {\n        const employeeData = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe;\n    };\n\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, (snapshot) => {\n        const updatedTimesheetData = {};\n        snapshot.forEach((doc) => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0,\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe;\n    };\n\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setStartTime(timesheetData[employeeId]?.[date]?.startTime || \"\");\n    setEndTime(timesheetData[employeeId]?.[date]?.endTime || \"\");\n    setIsHoliday(timesheetData[employeeId]?.[date]?.isHoliday || false);\n    setModalOpen(true);\n  };\n\n  const handleStartTimeChange = (event) => {\n    const newStartTime = event.target.value;\n    setStartTime(newStartTime);\n    calculateTimes(newStartTime, endTime, nextDay, isHoliday);\n  };\n\n  const handleEndTimeChange = (event) => {\n    const newEndTime = event.target.value;\n    setEndTime(newEndTime);\n    calculateTimes(startTime, newEndTime, nextDay, isHoliday);\n  };\n\n  const handleNextDayToggle = () => {\n    const newNextDay = !nextDay;\n    setNextDay(newNextDay);\n    calculateTimes(startTime, endTime, newNextDay, isHoliday);\n  };\n\n  const handleHolidayToggle = () => {\n    const newIsHoliday = !isHoliday;\n    setIsHoliday(newIsHoliday);\n    calculateTimes(startTime, endTime, nextDay, newIsHoliday);\n  };\n\n  const calculateTimes = (start, end, isNextDay, isHoliday) => {\n    if (!start || !end) return;\n\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);\n\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0);\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1);\n    nightShiftEnd.setHours(6, 0, 0);\n\n    let nightShiftHours = 0;\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n\n    const normalTime = isHoliday ? 0 : totalTimeInHours - nightShiftHours;\n    setNormalTime(normalTime.toFixed(2));\n\n    const holidayTime = isHoliday ? totalTimeInHours : 0;\n    setHolidayTime(holidayTime.toFixed(2));\n  };\n\n  const saveTimesheetDataToFirebase = async () => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", selectedEmployee);\n      const timesheetData = (await getDoc(timesheetDocRef)).data()?.hours || {};\n      timesheetData[selectedDate] = {\n        startTime,\n        endTime,\n        totalTime: parseFloat(totalTime),\n        nightShift: parseFloat(nightShiftHours),\n        holidayTime: parseFloat(holidayTime),\n        normalTime: parseFloat(normalTime),\n        isHoliday,\n      };\n      await setDoc(timesheetDocRef, { hours: timesheetData });\n      setModalOpen(false);\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  const calculateMonthlyTotal = (employeeId) => {\n    let monthlyTotal = {\n      normalTime: 0,\n      nightShift: 0,\n      holidayTime: 0,\n      totalTime: 0,\n    };\n\n    const monthDays = generateMonthDays(currentYear, currentMonth);\n    monthDays.forEach((date) => {\n      const data = timesheetData[employeeId]?.[date];\n      if (data) {\n        monthlyTotal.normalTime += data.normalTime || 0;\n        monthlyTotal.nightShift += data.nightShift || 0;\n        monthlyTotal.holidayTime += data.holidayTime || 0;\n        monthlyTotal.totalTime += data.totalTime || 0;\n      }\n    });\n\n    return monthlyTotal;\n  };\n\n  const goToPreviousMonth = () => {\n    setCurrentMonth((prevMonth) => (prevMonth === 0 ? 11 : prevMonth - 1));\n    if (currentMonth === 0) setCurrentYear(currentYear - 1);\n  };\n\n  const goToNextMonth = () => {\n    setCurrentMonth((prevMonth) => (prevMonth === 11 ? 0 : prevMonth + 1));\n    if (currentMonth === 11) setCurrentYear(currentYear + 1);\n  };\n\n  const monthDays = generateMonthDays(currentYear, currentMonth);\n\n  const isToday = (month, day) => {\n    return (\n      month === today.getMonth() + 1 &&\n      day === today.getDate() &&\n      currentYear === today.getFullYear()\n    );\n  };\n\n  return (\n    <div>\n      <button onClick={goToPreviousMonth}>Previous Month</button>\n      <span>\n        {new Date(currentYear, currentMonth).toLocaleString('default', {\n          month: 'long',\n          year: 'numeric',\n        })}\n      </span>\n      <button onClick={goToNextMonth}>Next Month</button>\n\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Shift</th>\n            {monthDays.map((date) => (\n              <th key={date}>{date}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => {\n            const monthlyTotal = calculateMonthlyTotal(employee.id);\n            return (\n              <tr\n                key={employee.id}\n                className={employee.id === selectedEmployee ? 'highlight' : ''}\n              >\n                <td>{employee.name}</td>\n                <td>{monthlyTotal.totalTime}</td>\n                {monthDays.map((date) => {\n                  const dayData = timesheetData[employee.id]?.[date];\n                  const isTodayRow = isToday(currentMonth + 1, parseInt(date.split('-')[1]));\n                  return (\n                    <td\n                      key={date}\n                      className={isTodayRow ? 'highlight-row' : ''}\n                      onClick={() => handleSetTime(employee.id, date)}\n                    >\n                      {dayData ? `${dayData.totalTime} hrs` : \"No data\"}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {modalOpen && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h3>Set Time for {selectedEmployee}</h3>\n            <label>Start Time:</label>\n            <input\n              type=\"time\"\n              value={startTime}\n              onChange={handleStartTimeChange}\n            />\n            <label>End Time:</label>\n            <input\n              type=\"time\"\n              value={endTime}\n              onChange={handleEndTimeChange}\n            />\n            <label>Next Day?</label>\n            <input\n              type=\"checkbox\"\n              checked={nextDay}\n              onChange={handleNextDayToggle}\n            />\n            <label>Holiday?</label>\n            <input\n              type=\"checkbox\"\n              checked={isHoliday}\n              onChange={handleHolidayToggle}\n            />\n            <div>\n              <p>Total Time: {totalTime} hrs</p>\n              <p>Night Shift: {nightShiftHours} hrs</p>\n              <p>Holiday Time: {holidayTime} hrs</p>\n              <p>Normal Time: {normalTime} hrs</p>\n            </div>\n            <button onClick={saveTimesheetDataToFirebase}>Save</button>\n            <button onClick={() => setModalOpen(false)}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}