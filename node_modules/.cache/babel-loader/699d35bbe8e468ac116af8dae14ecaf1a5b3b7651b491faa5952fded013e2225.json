{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/EmployeeManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { collection, addDoc, getDocs, updateDoc, doc, deleteDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\"; // Import the Firestore db instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeManagement = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [newEmployee, setNewEmployee] = useState({\n    name: \"\",\n    phone: \"\",\n    sap: \"\" // Added SAP field\n  });\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false); // Modal visibility state\n\n  // Fetch employees data from Firebase\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n    fetchEmployees();\n  }, []);\n\n  // Handle input change for new employee form\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewEmployee(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle adding a new employee to Firestore\n  const handleAddEmployee = async e => {\n    e.preventDefault();\n    try {\n      if (!newEmployee.name || !newEmployee.phone || !newEmployee.sap) {\n        alert(\"Please fill all fields!\");\n        return;\n      }\n      const docRef = await addDoc(collection(db, \"employees\"), newEmployee);\n      setEmployees(prev => [...prev, {\n        id: docRef.id,\n        ...newEmployee\n      }]);\n      setNewEmployee({\n        name: \"\",\n        phone: \"\",\n        sap: \"\"\n      }); // Reset form after submission\n      setIsModalOpen(false); // Close the modal after submission\n    } catch (error) {\n      console.error(\"Error adding employee:\", error);\n    }\n  };\n\n  // Handle editing employee details\n  const handleDoubleClick = (employee, field) => {\n    setEditingEmployee({\n      ...employee,\n      fieldToEdit: field\n    });\n  };\n\n  // Handle deleting an employee with a confirmation\n  const handleDeleteEmployee = async employeeId => {\n    const isConfirmed = window.confirm(\"Are you sure you want to delete this employee?\");\n    if (isConfirmed) {\n      try {\n        const employeeDoc = doc(db, \"employees\", employeeId);\n        await deleteDoc(employeeDoc);\n        setEmployees(prev => prev.filter(emp => emp.id !== employeeId));\n      } catch (error) {\n        console.error(\"Error deleting employee:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsModalOpen(true),\n      children: \"Add New Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"employee-table\",\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"SAP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            onDoubleClick: () => handleDoubleClick(employee, \"name\"),\n            children: editingEmployee && editingEmployee.id === employee.id && editingEmployee.fieldToEdit === \"name\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: editingEmployee.name,\n              onChange: e => setEditingEmployee(prev => ({\n                ...prev,\n                name: e.target.value\n              })),\n              onBlur: () => handleUpdateEmployee(employee.id) // Trigger update on blur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this) : employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            onDoubleClick: () => handleDoubleClick(employee, \"phone\"),\n            children: editingEmployee && editingEmployee.id === employee.id && editingEmployee.fieldToEdit === \"phone\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"phone\",\n              value: editingEmployee.phone,\n              onChange: e => setEditingEmployee(prev => ({\n                ...prev,\n                phone: e.target.value\n              })),\n              onBlur: () => handleUpdateEmployee(employee.id) // Trigger update on blur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this) : employee.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            onDoubleClick: () => handleDoubleClick(employee, \"sap\"),\n            children: editingEmployee && editingEmployee.id === employee.id && editingEmployee.fieldToEdit === \"sap\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"sap\",\n              value: editingEmployee.sap,\n              onChange: e => setEditingEmployee(prev => ({\n                ...prev,\n                sap: e.target.value\n              })),\n              onBlur: () => handleUpdateEmployee(employee.id) // Trigger update on blur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this) : employee.sap\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteEmployee(employee.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add New Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddEmployee,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: newEmployee.name,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phone\",\n            value: newEmployee.phone,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"SAP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"sap\",\n            value: newEmployee.sap,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"save-btn\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close-btn\",\n              onClick: () => setIsModalOpen(false) // Close the modal\n              ,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeManagement, \"ecHPTwoCY3nx8mB9x8UR8wOxBFE=\");\n_c = EmployeeManagement;\nexport default EmployeeManagement;\nvar _c;\n$RefreshReg$(_c, \"EmployeeManagement\");","map":{"version":3,"names":["React","useState","useEffect","collection","addDoc","getDocs","updateDoc","doc","deleteDoc","db","jsxDEV","_jsxDEV","EmployeeManagement","_s","employees","setEmployees","newEmployee","setNewEmployee","name","phone","sap","editingEmployee","setEditingEmployee","isModalOpen","setIsModalOpen","fetchEmployees","querySnapshot","employeeData","docs","map","id","data","error","console","handleInputChange","e","value","target","prev","handleAddEmployee","preventDefault","alert","docRef","handleDoubleClick","employee","field","fieldToEdit","handleDeleteEmployee","employeeId","isConfirmed","window","confirm","employeeDoc","filter","emp","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","border","onDoubleClick","type","onChange","onBlur","handleUpdateEmployee","onSubmit","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/EmployeeManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { collection, addDoc, getDocs, updateDoc, doc, deleteDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\"; // Import the Firestore db instance\n\nconst EmployeeManagement = () => {\n  const [employees, setEmployees] = useState([]);\n  const [newEmployee, setNewEmployee] = useState({\n    name: \"\",\n    phone: \"\",\n    sap: \"\", // Added SAP field\n  });\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false); // Modal visibility state\n\n  // Fetch employees data from Firebase\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n\n    fetchEmployees();\n  }, []);\n\n  // Handle input change for new employee form\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewEmployee((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Handle adding a new employee to Firestore\n  const handleAddEmployee = async (e) => {\n    e.preventDefault();\n    try {\n      if (!newEmployee.name || !newEmployee.phone || !newEmployee.sap) {\n        alert(\"Please fill all fields!\");\n        return;\n      }\n      const docRef = await addDoc(collection(db, \"employees\"), newEmployee);\n      setEmployees((prev) => [\n        ...prev,\n        { id: docRef.id, ...newEmployee },\n      ]);\n      setNewEmployee({ name: \"\", phone: \"\", sap: \"\" }); // Reset form after submission\n      setIsModalOpen(false); // Close the modal after submission\n    } catch (error) {\n      console.error(\"Error adding employee:\", error);\n    }\n  };\n\n  // Handle editing employee details\n  const handleDoubleClick = (employee, field) => {\n    setEditingEmployee({ ...employee, fieldToEdit: field });\n  };\n\n  // Handle deleting an employee with a confirmation\n  const handleDeleteEmployee = async (employeeId) => {\n    const isConfirmed = window.confirm(\"Are you sure you want to delete this employee?\");\n    if (isConfirmed) {\n      try {\n        const employeeDoc = doc(db, \"employees\", employeeId);\n        await deleteDoc(employeeDoc);\n        setEmployees((prev) => prev.filter((emp) => emp.id !== employeeId));\n      } catch (error) {\n        console.error(\"Error deleting employee:\", error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      {/* Button to open modal for adding new employee */}\n      <button onClick={() => setIsModalOpen(true)}>Add New Employee</button>\n\n      {/* Employee List */}\n      <h3>Employee List</h3>\n      <table className=\"employee-table\" border=\"1\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Phone</th>\n            <th>SAP</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => (\n            <tr key={employee.id}>\n              <td onDoubleClick={() => handleDoubleClick(employee, \"name\")}>\n                {editingEmployee && editingEmployee.id === employee.id && editingEmployee.fieldToEdit === \"name\" ? (\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={editingEmployee.name}\n                    onChange={(e) => setEditingEmployee((prev) => ({ ...prev, name: e.target.value }))}\n                    onBlur={() => handleUpdateEmployee(employee.id)} // Trigger update on blur\n                  />\n                ) : (\n                  employee.name\n                )}\n              </td>\n              <td onDoubleClick={() => handleDoubleClick(employee, \"phone\")}>\n                {editingEmployee && editingEmployee.id === employee.id && editingEmployee.fieldToEdit === \"phone\" ? (\n                  <input\n                    type=\"text\"\n                    name=\"phone\"\n                    value={editingEmployee.phone}\n                    onChange={(e) => setEditingEmployee((prev) => ({ ...prev, phone: e.target.value }))}\n                    onBlur={() => handleUpdateEmployee(employee.id)} // Trigger update on blur\n                  />\n                ) : (\n                  employee.phone\n                )}\n              </td>\n              <td onDoubleClick={() => handleDoubleClick(employee, \"sap\")}>\n                {editingEmployee && editingEmployee.id === employee.id && editingEmployee.fieldToEdit === \"sap\" ? (\n                  <input\n                    type=\"number\"\n                    name=\"sap\"\n                    value={editingEmployee.sap}\n                    onChange={(e) => setEditingEmployee((prev) => ({ ...prev, sap: e.target.value }))}\n                    onBlur={() => handleUpdateEmployee(employee.id)} // Trigger update on blur\n                  />\n                ) : (\n                  employee.sap\n                )}\n              </td>\n              <td>\n                <button onClick={() => handleDeleteEmployee(employee.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {/* Modal for Adding New Employee */}\n      {isModalOpen && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h2>Add New Employee</h2>\n            <form onSubmit={handleAddEmployee}>\n              <label>Name</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={newEmployee.name}\n                onChange={handleInputChange}\n              />\n              <label>Phone</label>\n              <input\n                type=\"text\"\n                name=\"phone\"\n                value={newEmployee.phone}\n                onChange={handleInputChange}\n              />\n              <label>SAP</label>\n              <input\n                type=\"number\"\n                name=\"sap\"\n                value={newEmployee.sap}\n                onChange={handleInputChange}\n              />\n              <div className=\"modal-actions\">\n                <button type=\"submit\" className=\"save-btn\">Save</button>\n                <button\n                  type=\"button\"\n                  className=\"close-btn\"\n                  onClick={() => setIsModalOpen(false)} // Close the modal\n                >\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EmployeeManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}