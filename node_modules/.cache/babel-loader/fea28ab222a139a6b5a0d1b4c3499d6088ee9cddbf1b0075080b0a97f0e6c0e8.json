{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = ({\n  monthDates = []\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), snapshot => {\n        const employeeData = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe;\n    };\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, snapshot => {\n        const updatedTimesheetData = {};\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe;\n    };\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n  const handleSetTime = (employeeId, date) => {\n    var _timesheetData$employ, _timesheetData$employ2, _timesheetData$employ3, _timesheetData$employ4, _timesheetData$employ5, _timesheetData$employ6;\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setStartTime(((_timesheetData$employ = timesheetData[employeeId]) === null || _timesheetData$employ === void 0 ? void 0 : (_timesheetData$employ2 = _timesheetData$employ[date]) === null || _timesheetData$employ2 === void 0 ? void 0 : _timesheetData$employ2.startTime) || \"\");\n    setEndTime(((_timesheetData$employ3 = timesheetData[employeeId]) === null || _timesheetData$employ3 === void 0 ? void 0 : (_timesheetData$employ4 = _timesheetData$employ3[date]) === null || _timesheetData$employ4 === void 0 ? void 0 : _timesheetData$employ4.endTime) || \"\");\n    setIsHoliday(((_timesheetData$employ5 = timesheetData[employeeId]) === null || _timesheetData$employ5 === void 0 ? void 0 : (_timesheetData$employ6 = _timesheetData$employ5[date]) === null || _timesheetData$employ6 === void 0 ? void 0 : _timesheetData$employ6.isHoliday) || false);\n    setModalOpen(true);\n  };\n  const handleStartTimeChange = event => {\n    const newStartTime = event.target.value;\n    setStartTime(newStartTime);\n    calculateTimes(newStartTime, endTime, nextDay, isHoliday);\n  };\n  const handleEndTimeChange = event => {\n    const newEndTime = event.target.value;\n    setEndTime(newEndTime);\n    calculateTimes(startTime, newEndTime, nextDay, isHoliday);\n  };\n  const handleNextDayToggle = () => {\n    const newNextDay = !nextDay;\n    setNextDay(newNextDay);\n    calculateTimes(startTime, endTime, newNextDay, isHoliday);\n  };\n  const handleHolidayToggle = () => {\n    const newIsHoliday = !isHoliday;\n    setIsHoliday(newIsHoliday);\n    calculateTimes(startTime, endTime, nextDay, newIsHoliday);\n  };\n  const calculateTimes = (start, end, isNextDay, isHoliday) => {\n    if (!start || !end) return;\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0);\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1);\n    nightShiftEnd.setHours(6, 0, 0);\n    let nightShiftHours = 0;\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n    const normalTime = isHoliday ? 0 : totalTimeInHours - nightShiftHours;\n    setNormalTime(normalTime.toFixed(2));\n    const holidayTime = isHoliday ? totalTimeInHours : 0;\n    setHolidayTime(holidayTime.toFixed(2));\n  };\n  const saveTimesheetDataToFirebase = async () => {\n    try {\n      var _await$getDoc$data;\n      const timesheetDocRef = doc(db, \"timesheets\", selectedEmployee);\n      const timesheetData = ((_await$getDoc$data = (await getDoc(timesheetDocRef)).data()) === null || _await$getDoc$data === void 0 ? void 0 : _await$getDoc$data.hours) || {};\n      timesheetData[selectedDate] = {\n        startTime,\n        endTime,\n        totalTime: parseFloat(totalTime),\n        nightShift: parseFloat(nightShiftHours),\n        holidayTime: parseFloat(holidayTime),\n        normalTime: parseFloat(normalTime),\n        isHoliday\n      };\n      await setDoc(timesheetDocRef, {\n        hours: timesheetData\n      });\n      setModalOpen(false);\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n  const calculateMonthlyTotal = employeeId => {\n    let monthlyTotal = {\n      normalTime: 0,\n      nightShift: 0,\n      holidayTime: 0,\n      totalTime: 0\n    };\n    if (Array.isArray(monthDates)) {\n      monthDates.forEach(date => {\n        var _timesheetData$employ7;\n        const data = (_timesheetData$employ7 = timesheetData[employeeId]) === null || _timesheetData$employ7 === void 0 ? void 0 : _timesheetData$employ7[date];\n        if (data) {\n          monthlyTotal.normalTime += data.normalTime || 0;\n          monthlyTotal.nightShift += data.nightShift || 0;\n          monthlyTotal.holidayTime += data.holidayTime || 0;\n          monthlyTotal.totalTime += data.totalTime || 0;\n        }\n      });\n    }\n    return monthlyTotal;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Shift Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), monthDates && monthDates.length > 0 ? monthDates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"No Dates Available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Monthly Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => {\n          const monthlyTotal = calculateMonthlyTotal(employee.id);\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                rowSpan: 4,\n                children: employee.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Normal Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), monthDates.map(date => {\n                var _timesheetData$employ8, _timesheetData$employ9, _timesheetData$employ10, _timesheetData$employ11;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ8 = timesheetData[employee.id]) === null || _timesheetData$employ8 === void 0 ? void 0 : (_timesheetData$employ9 = _timesheetData$employ8[date]) === null || _timesheetData$employ9 === void 0 ? void 0 : _timesheetData$employ9.normalTime) === 0 ? \"0 hrs\" : (_timesheetData$employ10 = timesheetData[employee.id]) !== null && _timesheetData$employ10 !== void 0 && (_timesheetData$employ11 = _timesheetData$employ10[date]) !== null && _timesheetData$employ11 !== void 0 && _timesheetData$employ11.normalTime ? `${timesheetData[employee.id][date].normalTime} hrs` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [monthlyTotal.normalTime.toFixed(2), \" hrs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Night Shift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), monthDates.map(date => {\n                var _timesheetData$employ12, _timesheetData$employ13, _timesheetData$employ14, _timesheetData$employ15;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ12 = timesheetData[employee.id]) === null || _timesheetData$employ12 === void 0 ? void 0 : (_timesheetData$employ13 = _timesheetData$employ12[date]) === null || _timesheetData$employ13 === void 0 ? void 0 : _timesheetData$employ13.nightShift) === 0 ? \"0 hrs\" : (_timesheetData$employ14 = timesheetData[employee.id]) !== null && _timesheetData$employ14 !== void 0 && (_timesheetData$employ15 = _timesheetData$employ14[date]) !== null && _timesheetData$employ15 !== void 0 && _timesheetData$employ15.nightShift ? `${timesheetData[employee.id][date].nightShift} hrs` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [monthlyTotal.nightShift.toFixed(2), \" hrs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Holiday Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), monthDates.map(date => {\n                var _timesheetData$employ16, _timesheetData$employ17, _timesheetData$employ18, _timesheetData$employ19;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ16 = timesheetData[employee.id]) === null || _timesheetData$employ16 === void 0 ? void 0 : (_timesheetData$employ17 = _timesheetData$employ16[date]) === null || _timesheetData$employ17 === void 0 ? void 0 : _timesheetData$employ17.holidayTime) === 0 ? \"0 hrs\" : (_timesheetData$employ18 = timesheetData[employee.id]) !== null && _timesheetData$employ18 !== void 0 && (_timesheetData$employ19 = _timesheetData$employ18[date]) !== null && _timesheetData$employ19 !== void 0 && _timesheetData$employ19.holidayTime ? `${timesheetData[employee.id][date].holidayTime} hrs` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [monthlyTotal.holidayTime.toFixed(2), \" hrs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Total Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this), monthDates.map(date => {\n                var _timesheetData$employ20, _timesheetData$employ21, _timesheetData$employ22, _timesheetData$employ23;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ20 = timesheetData[employee.id]) === null || _timesheetData$employ20 === void 0 ? void 0 : (_timesheetData$employ21 = _timesheetData$employ20[date]) === null || _timesheetData$employ21 === void 0 ? void 0 : _timesheetData$employ21.totalTime) === 0 ? \"0 hrs\" : (_timesheetData$employ22 = timesheetData[employee.id]) !== null && _timesheetData$employ22 !== void 0 && (_timesheetData$employ23 = _timesheetData$employ22[date]) !== null && _timesheetData$employ23 !== void 0 && _timesheetData$employ23.totalTime ? `${timesheetData[employee.id][date].totalTime} hrs` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [monthlyTotal.totalTime.toFixed(2), \" hrs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: handleStartTimeChange,\n          placeholder: \"Start Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: endTime,\n          onChange: handleEndTimeChange,\n          placeholder: \"End Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: nextDay,\n            onChange: handleNextDayToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), \"Next Day\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isHoliday,\n            onChange: handleHolidayToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), \"Holiday\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Time: \", totalTime, \" hrs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Night Shift Hours: \", nightShiftHours, \" hrs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Holiday Time: \", holidayTime, \" hrs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Normal Time: \", normalTime, \" hrs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveTimesheetDataToFirebase,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"LuJF93aoCyJzjR3hVD8EVfLaOJo=\");\n_c = TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["TimesheetList","monthDates","_s","employees","setEmployees","useState","timesheetData","setTimesheetData","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","nextDay","setNextDay","isHoliday","setIsHoliday","totalTime","setTotalTime","nightShiftHours","setNightShiftHours","holidayTime","setHolidayTime","normalTime","setNormalTime","useEffect","fetchEmployees","unsubscribe","onSnapshot","collection","db","snapshot","employeeData","docs","map","doc","id","data","fetchTimesheetData","timesheetDataRef","updatedTimesheetData","forEach","employeeId","hours","date","record","Object","entries","parseFloat","nightShift","Boolean","handleSetTime","_timesheetData$employ","_timesheetData$employ2","_timesheetData$employ3","_timesheetData$employ4","_timesheetData$employ5","_timesheetData$employ6","handleStartTimeChange","event","newStartTime","target","value","calculateTimes","handleEndTimeChange","newEndTime","handleNextDayToggle","newNextDay","handleHolidayToggle","newIsHoliday","start","end","isNextDay","startHours","startMinutes","split","Number","endHours","endMinutes","startDate","Date","setHours","endDate","setDate","getDate","totalTimeInHours","nightShiftStart","nightShiftEnd","nightShiftStartTime","nightShiftEndTime","toFixed","saveTimesheetDataToFirebase","_await$getDoc$data","timesheetDocRef","getDoc","setDoc","error","console","calculateMonthlyTotal","monthlyTotal","Array","isArray","_timesheetData$employ7","_jsxDEV","children","border","fileName","_jsxFileName","lineNumber","columnNumber","length","employee","React","Fragment","rowSpan","name","_timesheetData$employ8","_timesheetData$employ9","_timesheetData$employ10","_timesheetData$employ11","onClick","_timesheetData$employ12","_timesheetData$employ13","_timesheetData$employ14","_timesheetData$employ15","_timesheetData$employ16","_timesheetData$employ17","_timesheetData$employ18","_timesheetData$employ19","_timesheetData$employ20","_timesheetData$employ21","_timesheetData$employ22","_timesheetData$employ23","type","onChange","placeholder","checked","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["const TimesheetList = ({ monthDates = [] }) => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), (snapshot) => {\n        const employeeData = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe;\n    };\n\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, (snapshot) => {\n        const updatedTimesheetData = {};\n        snapshot.forEach((doc) => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0,\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe;\n    };\n\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setStartTime(timesheetData[employeeId]?.[date]?.startTime || \"\");\n    setEndTime(timesheetData[employeeId]?.[date]?.endTime || \"\");\n    setIsHoliday(timesheetData[employeeId]?.[date]?.isHoliday || false);\n    setModalOpen(true);\n  };\n\n  const handleStartTimeChange = (event) => {\n    const newStartTime = event.target.value;\n    setStartTime(newStartTime);\n    calculateTimes(newStartTime, endTime, nextDay, isHoliday);\n  };\n\n  const handleEndTimeChange = (event) => {\n    const newEndTime = event.target.value;\n    setEndTime(newEndTime);\n    calculateTimes(startTime, newEndTime, nextDay, isHoliday);\n  };\n\n  const handleNextDayToggle = () => {\n    const newNextDay = !nextDay;\n    setNextDay(newNextDay);\n    calculateTimes(startTime, endTime, newNextDay, isHoliday);\n  };\n\n  const handleHolidayToggle = () => {\n    const newIsHoliday = !isHoliday;\n    setIsHoliday(newIsHoliday);\n    calculateTimes(startTime, endTime, nextDay, newIsHoliday);\n  };\n\n  const calculateTimes = (start, end, isNextDay, isHoliday) => {\n    if (!start || !end) return;\n\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);\n\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0);\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1);\n    nightShiftEnd.setHours(6, 0, 0);\n\n    let nightShiftHours = 0;\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n\n    const normalTime = isHoliday ? 0 : totalTimeInHours - nightShiftHours;\n    setNormalTime(normalTime.toFixed(2));\n\n    const holidayTime = isHoliday ? totalTimeInHours : 0;\n    setHolidayTime(holidayTime.toFixed(2));\n  };\n\n  const saveTimesheetDataToFirebase = async () => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", selectedEmployee);\n      const timesheetData = (await getDoc(timesheetDocRef)).data()?.hours || {};\n      timesheetData[selectedDate] = {\n        startTime,\n        endTime,\n        totalTime: parseFloat(totalTime),\n        nightShift: parseFloat(nightShiftHours),\n        holidayTime: parseFloat(holidayTime),\n        normalTime: parseFloat(normalTime),\n        isHoliday,\n      };\n      await setDoc(timesheetDocRef, { hours: timesheetData });\n      setModalOpen(false);\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  const calculateMonthlyTotal = (employeeId) => {\n    let monthlyTotal = {\n      normalTime: 0,\n      nightShift: 0,\n      holidayTime: 0,\n      totalTime: 0,\n    };\n\n    if (Array.isArray(monthDates)) {\n      monthDates.forEach((date) => {\n        const data = timesheetData[employeeId]?.[date];\n        if (data) {\n          monthlyTotal.normalTime += data.normalTime || 0;\n          monthlyTotal.nightShift += data.nightShift || 0;\n          monthlyTotal.holidayTime += data.holidayTime || 0;\n          monthlyTotal.totalTime += data.totalTime || 0;\n        }\n      });\n    }\n\n    return monthlyTotal;\n  };\n\n  return (\n    <div>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Shift Type</th>\n            {monthDates && monthDates.length > 0 ? (\n              monthDates.map((date) => (\n                <th key={date}>{date}</th>\n              ))\n            ) : (\n              <th>No Dates Available</th>\n            )}\n            <th>Monthly Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => {\n            const monthlyTotal = calculateMonthlyTotal(employee.id);\n            return (\n              <React.Fragment key={employee.id}>\n                <tr>\n                  <td rowSpan={4}>{employee.name}</td>\n                  <td>Normal Time</td>\n                  {monthDates.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.normalTime === 0\n                        ? \"0 hrs\"\n                        : timesheetData[employee.id]?.[date]?.normalTime\n                        ? `${timesheetData[employee.id][date].normalTime} hrs`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{monthlyTotal.normalTime.toFixed(2)} hrs</td>\n                </tr>\n                <tr>\n                  <td>Night Shift</td>\n                  {monthDates.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.nightShift === 0\n                        ? \"0 hrs\"\n                        : timesheetData[employee.id]?.[date]?.nightShift\n                        ? `${timesheetData[employee.id][date].nightShift} hrs`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{monthlyTotal.nightShift.toFixed(2)} hrs</td>\n                </tr>\n                <tr>\n                  <td>Holiday Time</td>\n                  {monthDates.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.holidayTime === 0\n                        ? \"0 hrs\"\n                        : timesheetData[employee.id]?.[date]?.holidayTime\n                        ? `${timesheetData[employee.id][date].holidayTime} hrs`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{monthlyTotal.holidayTime.toFixed(2)} hrs</td>\n                </tr>\n                <tr>\n                  <td>Total Time</td>\n                  {monthDates.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.totalTime === 0\n                        ? \"0 hrs\"\n                        : timesheetData[employee.id]?.[date]?.totalTime\n                        ? `${timesheetData[employee.id][date].totalTime} hrs`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{monthlyTotal.totalTime.toFixed(2)} hrs</td>\n                </tr>\n              </React.Fragment>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {modalOpen && (\n        <div>\n          <div>\n            <input\n              type=\"time\"\n              value={startTime}\n              onChange={handleStartTimeChange}\n              placeholder=\"Start Time\"\n            />\n            <input\n              type=\"time\"\n              value={endTime}\n              onChange={handleEndTimeChange}\n              placeholder=\"End Time\"\n            />\n          </div>\n          <div>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={nextDay}\n                onChange={handleNextDayToggle}\n              />\n              Next Day\n            </label>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={isHoliday}\n                onChange={handleHolidayToggle}\n              />\n              Holiday\n            </label>\n          </div>\n          <div>\n            <p>Total Time: {totalTime} hrs</p>\n            <p>Night Shift Hours: {nightShiftHours} hrs</p>\n            <p>Holiday Time: {holidayTime} hrs</p>\n            <p>Normal Time: {normalTime} hrs</p>\n            <button onClick={saveTimesheetDataToFirebase}>Save</button>\n            <button onClick={() => setModalOpen(false)}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,MAAMA,aAAa,GAAGA,CAAC;EAAEC,UAAU,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGF,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACK,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EAE/CyB,SAAS,CAAC,MAAM;IACd,MAAMC,cAAc,GAAGA,CAAA,KAAM;MAC3B,MAAMC,WAAW,GAAGC,UAAU,CAACC,UAAU,CAACC,EAAE,EAAE,WAAW,CAAC,EAAGC,QAAQ,IAAK;QACxE,MAAMC,YAAY,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAEC,GAAG,KAAM;UAC/CC,EAAE,EAAED,GAAG,CAACC,EAAE;UACV,GAAGD,GAAG,CAACE,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QACHtC,YAAY,CAACiC,YAAY,CAAC;MAC5B,CAAC,CAAC;MACF,OAAOL,WAAW;IACpB,CAAC;IAED,MAAMW,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,MAAMC,gBAAgB,GAAGV,UAAU,CAACC,EAAE,EAAE,YAAY,CAAC;MACrD,MAAMH,WAAW,GAAGC,UAAU,CAACW,gBAAgB,EAAGR,QAAQ,IAAK;QAC7D,MAAMS,oBAAoB,GAAG,CAAC,CAAC;QAC/BT,QAAQ,CAACU,OAAO,CAAEN,GAAG,IAAK;UACxB,MAAME,IAAI,GAAGF,GAAG,CAACE,IAAI,CAAC,CAAC;UACvB,MAAMK,UAAU,GAAGP,GAAG,CAACC,EAAE;UACzB,IAAIC,IAAI,CAACM,KAAK,EAAE;YACdH,oBAAoB,CAACE,UAAU,CAAC,GAAG,CAAC,CAAC;YACrC,KAAK,MAAM,CAACE,IAAI,EAAEC,MAAM,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACV,IAAI,CAACM,KAAK,CAAC,EAAE;cACvDH,oBAAoB,CAACE,UAAU,CAAC,CAACE,IAAI,CAAC,GAAG;gBACvCnC,SAAS,EAAEoC,MAAM,CAACpC,SAAS;gBAC3BE,OAAO,EAAEkC,MAAM,CAAClC,OAAO;gBACvBM,SAAS,EAAE+B,UAAU,CAACH,MAAM,CAAC5B,SAAS,CAAC;gBACvCgC,UAAU,EAAED,UAAU,CAACH,MAAM,CAACI,UAAU,CAAC;gBACzC5B,WAAW,EAAE2B,UAAU,CAACH,MAAM,CAACxB,WAAW,CAAC;gBAC3CN,SAAS,EAAEmC,OAAO,CAACL,MAAM,CAAC9B,SAAS,CAAC;gBACpCQ,UAAU,EAAEyB,UAAU,CAACH,MAAM,CAACtB,UAAU,CAAC,IAAI;cAC/C,CAAC;YACH;UACF;QACF,CAAC,CAAC;QACFrB,gBAAgB,CAACsC,oBAAoB,CAAC;MACxC,CAAC,CAAC;MACF,OAAOb,WAAW;IACpB,CAAC;IAEDD,cAAc,CAAC,CAAC;IAChBY,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,aAAa,GAAGA,CAACT,UAAU,EAAEE,IAAI,KAAK;IAAA,IAAAQ,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IAC1CnD,mBAAmB,CAACoC,UAAU,CAAC;IAC/BlC,eAAe,CAACoC,IAAI,CAAC;IACrBlC,YAAY,CAAC,EAAA0C,qBAAA,GAAAnD,aAAa,CAACyC,UAAU,CAAC,cAAAU,qBAAA,wBAAAC,sBAAA,GAAzBD,qBAAA,CAA4BR,IAAI,CAAC,cAAAS,sBAAA,uBAAjCA,sBAAA,CAAmC5C,SAAS,KAAI,EAAE,CAAC;IAChEG,UAAU,CAAC,EAAA0C,sBAAA,GAAArD,aAAa,CAACyC,UAAU,CAAC,cAAAY,sBAAA,wBAAAC,sBAAA,GAAzBD,sBAAA,CAA4BV,IAAI,CAAC,cAAAW,sBAAA,uBAAjCA,sBAAA,CAAmC5C,OAAO,KAAI,EAAE,CAAC;IAC5DK,YAAY,CAAC,EAAAwC,sBAAA,GAAAvD,aAAa,CAACyC,UAAU,CAAC,cAAAc,sBAAA,wBAAAC,sBAAA,GAAzBD,sBAAA,CAA4BZ,IAAI,CAAC,cAAAa,sBAAA,uBAAjCA,sBAAA,CAAmC1C,SAAS,KAAI,KAAK,CAAC;IACnEX,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMsD,qBAAqB,GAAIC,KAAK,IAAK;IACvC,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACvCpD,YAAY,CAACkD,YAAY,CAAC;IAC1BG,cAAc,CAACH,YAAY,EAAEjD,OAAO,EAAEE,OAAO,EAAEE,SAAS,CAAC;EAC3D,CAAC;EAED,MAAMiD,mBAAmB,GAAIL,KAAK,IAAK;IACrC,MAAMM,UAAU,GAAGN,KAAK,CAACE,MAAM,CAACC,KAAK;IACrClD,UAAU,CAACqD,UAAU,CAAC;IACtBF,cAAc,CAACtD,SAAS,EAAEwD,UAAU,EAAEpD,OAAO,EAAEE,SAAS,CAAC;EAC3D,CAAC;EAED,MAAMmD,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,UAAU,GAAG,CAACtD,OAAO;IAC3BC,UAAU,CAACqD,UAAU,CAAC;IACtBJ,cAAc,CAACtD,SAAS,EAAEE,OAAO,EAAEwD,UAAU,EAAEpD,SAAS,CAAC;EAC3D,CAAC;EAED,MAAMqD,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,YAAY,GAAG,CAACtD,SAAS;IAC/BC,YAAY,CAACqD,YAAY,CAAC;IAC1BN,cAAc,CAACtD,SAAS,EAAEE,OAAO,EAAEE,OAAO,EAAEwD,YAAY,CAAC;EAC3D,CAAC;EAED,MAAMN,cAAc,GAAGA,CAACO,KAAK,EAAEC,GAAG,EAAEC,SAAS,EAAEzD,SAAS,KAAK;IAC3D,IAAI,CAACuD,KAAK,IAAI,CAACC,GAAG,EAAE;IAEpB,MAAM,CAACE,UAAU,EAAEC,YAAY,CAAC,GAAGJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAACzC,GAAG,CAAC0C,MAAM,CAAC;IAC/D,MAAM,CAACC,QAAQ,EAAEC,UAAU,CAAC,GAAGP,GAAG,CAACI,KAAK,CAAC,GAAG,CAAC,CAACzC,GAAG,CAAC0C,MAAM,CAAC;IACzD,MAAMG,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC5BD,SAAS,CAACE,QAAQ,CAACR,UAAU,EAAEC,YAAY,EAAE,CAAC,CAAC;IAC/C,MAAMQ,OAAO,GAAG,IAAIF,IAAI,CAAC,CAAC;IAC1BE,OAAO,CAACD,QAAQ,CAACJ,QAAQ,EAAEC,UAAU,EAAE,CAAC,CAAC;IACzC,IAAIN,SAAS,EAAEU,OAAO,CAACC,OAAO,CAACD,OAAO,CAACE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAErD,MAAMC,gBAAgB,GAAG,CAACH,OAAO,GAAGH,SAAS,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;IACjE,MAAMO,eAAe,GAAG,IAAIN,IAAI,CAACD,SAAS,CAAC;IAC3CO,eAAe,CAACL,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IAClC,MAAMM,aAAa,GAAG,IAAIP,IAAI,CAACD,SAAS,CAAC;IACzCQ,aAAa,CAACJ,OAAO,CAACI,aAAa,CAACH,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAClDG,aAAa,CAACN,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAE/B,IAAI9D,eAAe,GAAG,CAAC;IACvB,IAAI4D,SAAS,GAAGQ,aAAa,IAAIL,OAAO,IAAII,eAAe,EAAE;MAC3D,MAAME,mBAAmB,GAAGT,SAAS,GAAGO,eAAe,GAAGA,eAAe,GAAGP,SAAS;MACrF,MAAMU,iBAAiB,GAAGP,OAAO,GAAGK,aAAa,GAAGA,aAAa,GAAGL,OAAO;MAC3E/D,eAAe,GAAG,CAACsE,iBAAiB,GAAGD,mBAAmB,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;IAChF;IAEAtE,YAAY,CAACmE,gBAAgB,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC;IACzCtE,kBAAkB,CAACD,eAAe,CAACuE,OAAO,CAAC,CAAC,CAAC,CAAC;IAE9C,MAAMnE,UAAU,GAAGR,SAAS,GAAG,CAAC,GAAGsE,gBAAgB,GAAGlE,eAAe;IACrEK,aAAa,CAACD,UAAU,CAACmE,OAAO,CAAC,CAAC,CAAC,CAAC;IAEpC,MAAMrE,WAAW,GAAGN,SAAS,GAAGsE,gBAAgB,GAAG,CAAC;IACpD/D,cAAc,CAACD,WAAW,CAACqE,OAAO,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,2BAA2B,GAAG,MAAAA,CAAA,KAAY;IAC9C,IAAI;MAAA,IAAAC,kBAAA;MACF,MAAMC,eAAe,GAAG1D,GAAG,CAACL,EAAE,EAAE,YAAY,EAAEzB,gBAAgB,CAAC;MAC/D,MAAMJ,aAAa,GAAG,EAAA2F,kBAAA,IAAC,MAAME,MAAM,CAACD,eAAe,CAAC,EAAExD,IAAI,CAAC,CAAC,cAAAuD,kBAAA,uBAAtCA,kBAAA,CAAwCjD,KAAK,KAAI,CAAC,CAAC;MACzE1C,aAAa,CAACM,YAAY,CAAC,GAAG;QAC5BE,SAAS;QACTE,OAAO;QACPM,SAAS,EAAE+B,UAAU,CAAC/B,SAAS,CAAC;QAChCgC,UAAU,EAAED,UAAU,CAAC7B,eAAe,CAAC;QACvCE,WAAW,EAAE2B,UAAU,CAAC3B,WAAW,CAAC;QACpCE,UAAU,EAAEyB,UAAU,CAACzB,UAAU,CAAC;QAClCR;MACF,CAAC;MACD,MAAMgF,MAAM,CAACF,eAAe,EAAE;QAAElD,KAAK,EAAE1C;MAAc,CAAC,CAAC;MACvDG,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAO4F,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAME,qBAAqB,GAAIxD,UAAU,IAAK;IAC5C,IAAIyD,YAAY,GAAG;MACjB5E,UAAU,EAAE,CAAC;MACb0B,UAAU,EAAE,CAAC;MACb5B,WAAW,EAAE,CAAC;MACdJ,SAAS,EAAE;IACb,CAAC;IAED,IAAImF,KAAK,CAACC,OAAO,CAACzG,UAAU,CAAC,EAAE;MAC7BA,UAAU,CAAC6C,OAAO,CAAEG,IAAI,IAAK;QAAA,IAAA0D,sBAAA;QAC3B,MAAMjE,IAAI,IAAAiE,sBAAA,GAAGrG,aAAa,CAACyC,UAAU,CAAC,cAAA4D,sBAAA,uBAAzBA,sBAAA,CAA4B1D,IAAI,CAAC;QAC9C,IAAIP,IAAI,EAAE;UACR8D,YAAY,CAAC5E,UAAU,IAAIc,IAAI,CAACd,UAAU,IAAI,CAAC;UAC/C4E,YAAY,CAAClD,UAAU,IAAIZ,IAAI,CAACY,UAAU,IAAI,CAAC;UAC/CkD,YAAY,CAAC9E,WAAW,IAAIgB,IAAI,CAAChB,WAAW,IAAI,CAAC;UACjD8E,YAAY,CAAClF,SAAS,IAAIoB,IAAI,CAACpB,SAAS,IAAI,CAAC;QAC/C;MACF,CAAC,CAAC;IACJ;IAEA,OAAOkF,YAAY;EACrB,CAAC;EAED,oBACEI,OAAA;IAAAC,QAAA,gBACED,OAAA;MAAOE,MAAM,EAAC,GAAG;MAAAD,QAAA,gBACfD,OAAA;QAAAC,QAAA,eACED,OAAA;UAAAC,QAAA,gBACED,OAAA;YAAAC,QAAA,EAAI;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbN,OAAA;YAAAC,QAAA,EAAI;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAClBjH,UAAU,IAAIA,UAAU,CAACkH,MAAM,GAAG,CAAC,GAClClH,UAAU,CAACsC,GAAG,CAAEU,IAAI,iBAClB2D,OAAA;YAAAC,QAAA,EAAgB5D;UAAI,GAAXA,IAAI;YAAA8D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAC1B,CAAC,gBAEFN,OAAA;YAAAC,QAAA,EAAI;UAAkB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAC3B,eACDN,OAAA;YAAAC,QAAA,EAAI;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRN,OAAA;QAAAC,QAAA,EACG1G,SAAS,CAACoC,GAAG,CAAE6E,QAAQ,IAAK;UAC3B,MAAMZ,YAAY,GAAGD,qBAAqB,CAACa,QAAQ,CAAC3E,EAAE,CAAC;UACvD,oBACEmE,OAAA,CAACS,KAAK,CAACC,QAAQ;YAAAT,QAAA,gBACbD,OAAA;cAAAC,QAAA,gBACED,OAAA;gBAAIW,OAAO,EAAE,CAAE;gBAAAV,QAAA,EAAEO,QAAQ,CAACI;cAAI;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpCN,OAAA;gBAAAC,QAAA,EAAI;cAAW;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACnBjH,UAAU,CAACsC,GAAG,CAAEU,IAAI;gBAAA,IAAAwE,sBAAA,EAAAC,sBAAA,EAAAC,uBAAA,EAAAC,uBAAA;gBAAA,oBACnBhB,OAAA;kBAAeiB,OAAO,EAAEA,CAAA,KAAMrE,aAAa,CAAC4D,QAAQ,CAAC3E,EAAE,EAAEQ,IAAI,CAAE;kBAAA4D,QAAA,EAC5D,EAAAY,sBAAA,GAAAnH,aAAa,CAAC8G,QAAQ,CAAC3E,EAAE,CAAC,cAAAgF,sBAAA,wBAAAC,sBAAA,GAA1BD,sBAAA,CAA6BxE,IAAI,CAAC,cAAAyE,sBAAA,uBAAlCA,sBAAA,CAAoC9F,UAAU,MAAK,CAAC,GACjD,OAAO,GACP,CAAA+F,uBAAA,GAAArH,aAAa,CAAC8G,QAAQ,CAAC3E,EAAE,CAAC,cAAAkF,uBAAA,gBAAAC,uBAAA,GAA1BD,uBAAA,CAA6B1E,IAAI,CAAC,cAAA2E,uBAAA,eAAlCA,uBAAA,CAAoChG,UAAU,GAC9C,GAAGtB,aAAa,CAAC8G,QAAQ,CAAC3E,EAAE,CAAC,CAACQ,IAAI,CAAC,CAACrB,UAAU,MAAM,GACpD;gBAAE,GALCqB,IAAI;kBAAA8D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAMT,CAAC;cAAA,CACN,CAAC,eACFN,OAAA;gBAAAC,QAAA,GAAKL,YAAY,CAAC5E,UAAU,CAACmE,OAAO,CAAC,CAAC,CAAC,EAAC,MAAI;cAAA;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC,eACLN,OAAA;cAAAC,QAAA,gBACED,OAAA;gBAAAC,QAAA,EAAI;cAAW;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACnBjH,UAAU,CAACsC,GAAG,CAAEU,IAAI;gBAAA,IAAA6E,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA;gBAAA,oBACnBrB,OAAA;kBAAeiB,OAAO,EAAEA,CAAA,KAAMrE,aAAa,CAAC4D,QAAQ,CAAC3E,EAAE,EAAEQ,IAAI,CAAE;kBAAA4D,QAAA,EAC5D,EAAAiB,uBAAA,GAAAxH,aAAa,CAAC8G,QAAQ,CAAC3E,EAAE,CAAC,cAAAqF,uBAAA,wBAAAC,uBAAA,GAA1BD,uBAAA,CAA6B7E,IAAI,CAAC,cAAA8E,uBAAA,uBAAlCA,uBAAA,CAAoCzE,UAAU,MAAK,CAAC,GACjD,OAAO,GACP,CAAA0E,uBAAA,GAAA1H,aAAa,CAAC8G,QAAQ,CAAC3E,EAAE,CAAC,cAAAuF,uBAAA,gBAAAC,uBAAA,GAA1BD,uBAAA,CAA6B/E,IAAI,CAAC,cAAAgF,uBAAA,eAAlCA,uBAAA,CAAoC3E,UAAU,GAC9C,GAAGhD,aAAa,CAAC8G,QAAQ,CAAC3E,EAAE,CAAC,CAACQ,IAAI,CAAC,CAACK,UAAU,MAAM,GACpD;gBAAE,GALCL,IAAI;kBAAA8D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAMT,CAAC;cAAA,CACN,CAAC,eACFN,OAAA;gBAAAC,QAAA,GAAKL,YAAY,CAAClD,UAAU,CAACyC,OAAO,CAAC,CAAC,CAAC,EAAC,MAAI;cAAA;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC,eACLN,OAAA;cAAAC,QAAA,gBACED,OAAA;gBAAAC,QAAA,EAAI;cAAY;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACpBjH,UAAU,CAACsC,GAAG,CAAEU,IAAI;gBAAA,IAAAiF,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA;gBAAA,oBACnBzB,OAAA;kBAAeiB,OAAO,EAAEA,CAAA,KAAMrE,aAAa,CAAC4D,QAAQ,CAAC3E,EAAE,EAAEQ,IAAI,CAAE;kBAAA4D,QAAA,EAC5D,EAAAqB,uBAAA,GAAA5H,aAAa,CAAC8G,QAAQ,CAAC3E,EAAE,CAAC,cAAAyF,uBAAA,wBAAAC,uBAAA,GAA1BD,uBAAA,CAA6BjF,IAAI,CAAC,cAAAkF,uBAAA,uBAAlCA,uBAAA,CAAoCzG,WAAW,MAAK,CAAC,GAClD,OAAO,GACP,CAAA0G,uBAAA,GAAA9H,aAAa,CAAC8G,QAAQ,CAAC3E,EAAE,CAAC,cAAA2F,uBAAA,gBAAAC,uBAAA,GAA1BD,uBAAA,CAA6BnF,IAAI,CAAC,cAAAoF,uBAAA,eAAlCA,uBAAA,CAAoC3G,WAAW,GAC/C,GAAGpB,aAAa,CAAC8G,QAAQ,CAAC3E,EAAE,CAAC,CAACQ,IAAI,CAAC,CAACvB,WAAW,MAAM,GACrD;gBAAE,GALCuB,IAAI;kBAAA8D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAMT,CAAC;cAAA,CACN,CAAC,eACFN,OAAA;gBAAAC,QAAA,GAAKL,YAAY,CAAC9E,WAAW,CAACqE,OAAO,CAAC,CAAC,CAAC,EAAC,MAAI;cAAA;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC,eACLN,OAAA;cAAAC,QAAA,gBACED,OAAA;gBAAAC,QAAA,EAAI;cAAU;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EAClBjH,UAAU,CAACsC,GAAG,CAAEU,IAAI;gBAAA,IAAAqF,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA;gBAAA,oBACnB7B,OAAA;kBAAeiB,OAAO,EAAEA,CAAA,KAAMrE,aAAa,CAAC4D,QAAQ,CAAC3E,EAAE,EAAEQ,IAAI,CAAE;kBAAA4D,QAAA,EAC5D,EAAAyB,uBAAA,GAAAhI,aAAa,CAAC8G,QAAQ,CAAC3E,EAAE,CAAC,cAAA6F,uBAAA,wBAAAC,uBAAA,GAA1BD,uBAAA,CAA6BrF,IAAI,CAAC,cAAAsF,uBAAA,uBAAlCA,uBAAA,CAAoCjH,SAAS,MAAK,CAAC,GAChD,OAAO,GACP,CAAAkH,uBAAA,GAAAlI,aAAa,CAAC8G,QAAQ,CAAC3E,EAAE,CAAC,cAAA+F,uBAAA,gBAAAC,uBAAA,GAA1BD,uBAAA,CAA6BvF,IAAI,CAAC,cAAAwF,uBAAA,eAAlCA,uBAAA,CAAoCnH,SAAS,GAC7C,GAAGhB,aAAa,CAAC8G,QAAQ,CAAC3E,EAAE,CAAC,CAACQ,IAAI,CAAC,CAAC3B,SAAS,MAAM,GACnD;gBAAE,GALC2B,IAAI;kBAAA8D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAMT,CAAC;cAAA,CACN,CAAC,eACFN,OAAA;gBAAAC,QAAA,GAAKL,YAAY,CAAClF,SAAS,CAACyE,OAAO,CAAC,CAAC,CAAC,EAAC,MAAI;cAAA;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA,GArDcE,QAAQ,CAAC3E,EAAE;YAAAsE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsDhB,CAAC;QAErB,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEP1G,SAAS,iBACRoG,OAAA;MAAAC,QAAA,gBACED,OAAA;QAAAC,QAAA,gBACED,OAAA;UACE8B,IAAI,EAAC,MAAM;UACXvE,KAAK,EAAErD,SAAU;UACjB6H,QAAQ,EAAE5E,qBAAsB;UAChC6E,WAAW,EAAC;QAAY;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,eACFN,OAAA;UACE8B,IAAI,EAAC,MAAM;UACXvE,KAAK,EAAEnD,OAAQ;UACf2H,QAAQ,EAAEtE,mBAAoB;UAC9BuE,WAAW,EAAC;QAAU;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNN,OAAA;QAAAC,QAAA,gBACED,OAAA;UAAAC,QAAA,gBACED,OAAA;YACE8B,IAAI,EAAC,UAAU;YACfG,OAAO,EAAE3H,OAAQ;YACjByH,QAAQ,EAAEpE;UAAoB;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,YAEJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRN,OAAA;UAAAC,QAAA,gBACED,OAAA;YACE8B,IAAI,EAAC,UAAU;YACfG,OAAO,EAAEzH,SAAU;YACnBuH,QAAQ,EAAElE;UAAoB;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,WAEJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNN,OAAA;QAAAC,QAAA,gBACED,OAAA;UAAAC,QAAA,GAAG,cAAY,EAACvF,SAAS,EAAC,MAAI;QAAA;UAAAyF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAClCN,OAAA;UAAAC,QAAA,GAAG,qBAAmB,EAACrF,eAAe,EAAC,MAAI;QAAA;UAAAuF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC/CN,OAAA;UAAAC,QAAA,GAAG,gBAAc,EAACnF,WAAW,EAAC,MAAI;QAAA;UAAAqF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACtCN,OAAA;UAAAC,QAAA,GAAG,eAAa,EAACjF,UAAU,EAAC,MAAI;QAAA;UAAAmF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACpCN,OAAA;UAAQiB,OAAO,EAAE7B,2BAA4B;UAAAa,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3DN,OAAA;UAAQiB,OAAO,EAAEA,CAAA,KAAMpH,YAAY,CAAC,KAAK,CAAE;UAAAoG,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChH,EAAA,CAxSIF,aAAa;AAAA8I,EAAA,GAAb9I,aAAa;AAAA,IAAA8I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}