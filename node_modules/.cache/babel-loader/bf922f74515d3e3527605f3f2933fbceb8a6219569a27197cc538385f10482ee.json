{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimeAdjustments.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimeAdjustments = () => {\n  _s();\n  const [normalStartTime, setNormalStartTime] = useState(\"08:00\");\n  const [normalEndTime, setNormalEndTime] = useState(\"18:00\");\n  const [overtimeStartTime, setOvertimeStartTime] = useState(\"18:00\");\n  const [overtimeEndTime, setOvertimeEndTime] = useState(\"08:00\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Here, you can handle saving the time conditions, like sending them to a backend or updating state\n    console.log(\"Normal Hours:\", normalStartTime, \"to\", normalEndTime);\n    console.log(\"Overtime Hours:\", overtimeStartTime, \"to\", overtimeEndTime);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Time Adjustments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Normal Working Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Start Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: normalStartTime,\n            onChange: e => setNormalStartTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"End Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: normalEndTime,\n            onChange: e => setNormalEndTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Overtime Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Start Time (Overtime):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: overtimeStartTime,\n            onChange: e => setOvertimeStartTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"End Time (Overtime):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: overtimeEndTime,\n            onChange: e => setOvertimeEndTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Adjustments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(TimeAdjustments, \"Wyb8/+uTyS3R8x/7RzIXsgCuMPU=\");\n_c = TimeAdjustments;\nexport default TimeAdjustments;\nvar _c;\n$RefreshReg$(_c, \"TimeAdjustments\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TimeAdjustments","_s","normalStartTime","setNormalStartTime","normalEndTime","setNormalEndTime","overtimeStartTime","setOvertimeStartTime","overtimeEndTime","setOvertimeEndTime","handleSubmit","e","preventDefault","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimeAdjustments.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst TimeAdjustments = () => {\n  const [normalStartTime, setNormalStartTime] = useState(\"08:00\");\n  const [normalEndTime, setNormalEndTime] = useState(\"18:00\");\n  const [overtimeStartTime, setOvertimeStartTime] = useState(\"18:00\");\n  const [overtimeEndTime, setOvertimeEndTime] = useState(\"08:00\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Here, you can handle saving the time conditions, like sending them to a backend or updating state\n    console.log(\"Normal Hours:\", normalStartTime, \"to\", normalEndTime);\n    console.log(\"Overtime Hours:\", overtimeStartTime, \"to\", overtimeEndTime);\n  };\n\n  return (\n    <div>\n      <h2>Time Adjustments</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <h3>Normal Working Hours</h3>\n          <label>\n            Start Time:\n            <input\n              type=\"time\"\n              value={normalStartTime}\n              onChange={(e) => setNormalStartTime(e.target.value)}\n            />\n          </label>\n          <label>\n            End Time:\n            <input\n              type=\"time\"\n              value={normalEndTime}\n              onChange={(e) => setNormalEndTime(e.target.value)}\n            />\n          </label>\n        </div>\n\n        <div>\n          <h3>Overtime Hours</h3>\n          <label>\n            Start Time (Overtime):\n            <input\n              type=\"time\"\n              value={overtimeStartTime}\n              onChange={(e) => setOvertimeStartTime(e.target.value)}\n            />\n          </label>\n          <label>\n            End Time (Overtime):\n            <input\n              type=\"time\"\n              value={overtimeEndTime}\n              onChange={(e) => setOvertimeEndTime(e.target.value)}\n            />\n          </label>\n        </div>\n\n        <button type=\"submit\">Save Adjustments</button>\n      </form>\n    </div>\n  );\n};\n\nexport default TimeAdjustments;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}