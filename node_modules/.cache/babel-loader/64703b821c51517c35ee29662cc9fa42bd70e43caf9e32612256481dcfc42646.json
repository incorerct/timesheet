{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport './TimesheetStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth()); // Start with current month\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear()); // Start with current year\n\n  // Generate all days of the current month\n  const generateMonthDays = (year, month) => {\n    const daysInMonth = new Date(year, month + 1, 0).getDate(); // month is 0-indexed\n    const days = [];\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push(`${month + 1}-${day < 10 ? '0' + day : day}`);\n    }\n    return days;\n  };\n  const [today, setToday] = useState(() => {\n    const now = new Date();\n    const month = now.getMonth() + 1; // JS months are 0-indexed\n    const day = now.getDate();\n    return `${month}-${day < 10 ? '0' + day : day}`; // Format MM-DD\n  });\n\n  // Fetch employee and timesheet data from Firestore\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), snapshot => {\n        const employeeData = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe;\n    };\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, snapshot => {\n        const updatedTimesheetData = {};\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe;\n    };\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n\n  // Handle the time settings for a specific employee and date\n  const handleSetTime = (employeeId, date) => {\n    var _timesheetData$employ, _timesheetData$employ2, _timesheetData$employ3, _timesheetData$employ4, _timesheetData$employ5, _timesheetData$employ6;\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setStartTime(((_timesheetData$employ = timesheetData[employeeId]) === null || _timesheetData$employ === void 0 ? void 0 : (_timesheetData$employ2 = _timesheetData$employ[date]) === null || _timesheetData$employ2 === void 0 ? void 0 : _timesheetData$employ2.startTime) || \"\");\n    setEndTime(((_timesheetData$employ3 = timesheetData[employeeId]) === null || _timesheetData$employ3 === void 0 ? void 0 : (_timesheetData$employ4 = _timesheetData$employ3[date]) === null || _timesheetData$employ4 === void 0 ? void 0 : _timesheetData$employ4.endTime) || \"\");\n    setIsHoliday(((_timesheetData$employ5 = timesheetData[employeeId]) === null || _timesheetData$employ5 === void 0 ? void 0 : (_timesheetData$employ6 = _timesheetData$employ5[date]) === null || _timesheetData$employ6 === void 0 ? void 0 : _timesheetData$employ6.isHoliday) || false);\n    setModalOpen(true);\n  };\n\n  // Handle changes in start time\n  const handleStartTimeChange = event => {\n    const newStartTime = event.target.value;\n    setStartTime(newStartTime);\n    calculateTimes(newStartTime, endTime, nextDay, isHoliday);\n  };\n\n  // Handle changes in end time\n  const handleEndTimeChange = event => {\n    const newEndTime = event.target.value;\n    setEndTime(newEndTime);\n    calculateTimes(startTime, newEndTime, nextDay, isHoliday);\n  };\n\n  // Toggle next day status\n  const handleNextDayToggle = () => {\n    const newNextDay = !nextDay;\n    setNextDay(newNextDay);\n    calculateTimes(startTime, endTime, newNextDay, isHoliday);\n  };\n\n  // Toggle holiday status\n  const handleHolidayToggle = () => {\n    const newIsHoliday = !isHoliday;\n    setIsHoliday(newIsHoliday);\n    calculateTimes(startTime, endTime, nextDay, newIsHoliday);\n  };\n\n  // Calculate total time, night shift hours, and normal/holiday time\n  const calculateTimes = (start, end, isNextDay, isHoliday) => {\n    if (!start || !end) return;\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0);\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1);\n    nightShiftEnd.setHours(6, 0, 0);\n    let nightShiftHours = 0;\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n    const normalTime = isHoliday ? 0 : totalTimeInHours - nightShiftHours;\n    setNormalTime(normalTime.toFixed(2));\n    const holidayTime = isHoliday ? totalTimeInHours : 0;\n    setHolidayTime(holidayTime.toFixed(2));\n  };\n\n  // Save timesheet data to Firestore\n  const saveTimesheetDataToFirebase = async () => {\n    try {\n      var _await$getDoc$data;\n      const timesheetDocRef = doc(db, \"timesheets\", selectedEmployee);\n      const timesheetData = ((_await$getDoc$data = (await getDoc(timesheetDocRef)).data()) === null || _await$getDoc$data === void 0 ? void 0 : _await$getDoc$data.hours) || {};\n      timesheetData[selectedDate] = {\n        startTime,\n        endTime,\n        totalTime: parseFloat(totalTime),\n        nightShift: parseFloat(nightShiftHours),\n        holidayTime: parseFloat(holidayTime),\n        normalTime: parseFloat(normalTime),\n        isHoliday\n      };\n      await setDoc(timesheetDocRef, {\n        hours: timesheetData\n      });\n      setModalOpen(false);\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  // Modify the calculateMonthlyTotal function to include target calculation\n  const calculateMonthlyTotal = employeeId => {\n    let monthlyTotal = {\n      normalTime: 0,\n      nightShift: 0,\n      holidayTime: 0,\n      totalTime: 0\n    };\n    const monthDays = generateMonthDays(currentYear, currentMonth);\n    monthDays.forEach(date => {\n      var _timesheetData$employ7;\n      const data = (_timesheetData$employ7 = timesheetData[employeeId]) === null || _timesheetData$employ7 === void 0 ? void 0 : _timesheetData$employ7[date];\n      if (data) {\n        monthlyTotal.normalTime += data.normalTime || 0;\n        monthlyTotal.nightShift += data.nightShift || 0;\n        monthlyTotal.holidayTime += data.holidayTime || 0;\n        monthlyTotal.totalTime += data.totalTime || 0;\n      }\n    });\n\n    // Calculate target hours based on the current day\n    const targetHours = 8 * monthDays.length;\n    return {\n      ...monthlyTotal,\n      targetHours\n    };\n  };\n\n  // Define a function to determine the color based on the total hours worked\n  const getTotalCellColor = employeeId => {\n    const monthlyTotal = calculateMonthlyTotal(employeeId);\n    const targetHours = monthlyTotal.targetHours;\n    const totalTime = monthlyTotal.totalTime;\n\n    // Compare total worked hours with target and set color\n    if (totalTime >= targetHours) {\n      return 'green'; // Employee is on track\n    } else if (totalTime < targetHours * 0.8) {\n      return 'red'; // Employee is far behind\n    } else {\n      return 'yellow'; // Employee is getting close but not there yet\n    }\n  };\n\n  // Inside your table rendering logic, apply dynamic styling for the 'Total' row\n  /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: employees.map((employee, employeeIndex) => {\n      const monthlyTotal = calculateMonthlyTotal(employee.id);\n      const totalCellColor = getTotalCellColor(employee.id); // Get color for the total cell\n\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: `row ${employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"}`,\n          style: {\n            backgroundColor: \"lightgreen\"\n          } // Example for Regular\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            rowSpan: 4,\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Regular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 11\n          }, this), monthDays.map(date => {\n            var _timesheetData$employ8, _timesheetData$employ9;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => handleSetTime(employee.id, date),\n              className: date === today ? \"highlight-today\" : \"\",\n              children: ((_timesheetData$employ8 = timesheetData[employee.id]) === null || _timesheetData$employ8 === void 0 ? void 0 : (_timesheetData$employ9 = _timesheetData$employ8[date]) === null || _timesheetData$employ9 === void 0 ? void 0 : _timesheetData$employ9.normalTime) || \"0\"\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 13\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: monthlyTotal.normalTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: `row ${employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"}`,\n          style: {\n            backgroundColor: \"lightblue\"\n          } // Example for Night\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Night\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 11\n          }, this), monthDays.map(date => {\n            var _timesheetData$employ10, _timesheetData$employ11;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => handleSetTime(employee.id, date),\n              className: date === today ? \"highlight-today\" : \"\",\n              children: ((_timesheetData$employ10 = timesheetData[employee.id]) === null || _timesheetData$employ10 === void 0 ? void 0 : (_timesheetData$employ11 = _timesheetData$employ10[date]) === null || _timesheetData$employ11 === void 0 ? void 0 : _timesheetData$employ11.nightShift) || \"0\"\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 13\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: monthlyTotal.nightShift\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: `row ${employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"}`,\n          style: {\n            backgroundColor: \"lightcoral\"\n          } // Example for Holiday\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Holiday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 11\n          }, this), monthDays.map(date => {\n            var _timesheetData$employ12, _timesheetData$employ13;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => handleSetTime(employee.id, date),\n              className: date === today ? \"highlight-today\" : \"\",\n              children: ((_timesheetData$employ12 = timesheetData[employee.id]) === null || _timesheetData$employ12 === void 0 ? void 0 : (_timesheetData$employ13 = _timesheetData$employ12[date]) === null || _timesheetData$employ13 === void 0 ? void 0 : _timesheetData$employ13.holidayTime) || \"0\"\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 13\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: monthlyTotal.holidayTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: `row ${employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"}`,\n          style: {\n            backgroundColor: totalCellColor // Apply dynamic color for the 'Total' row\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 11\n          }, this), monthDays.map(date => {\n            var _timesheetData$employ14, _timesheetData$employ15;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => handleSetTime(employee.id, date),\n              className: date === today ? \"highlight-today\" : \"\",\n              children: ((_timesheetData$employ14 = timesheetData[employee.id]) === null || _timesheetData$employ14 === void 0 ? void 0 : (_timesheetData$employ15 = _timesheetData$employ14[date]) === null || _timesheetData$employ15 === void 0 ? void 0 : _timesheetData$employ15.totalTime) || \"0\"\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 13\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: monthlyTotal.totalTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 9\n        }, this)]\n      }, employee.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 7\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 1\n  }, this);\n\n  // Change to previous month\n  const goToPreviousMonth = () => {\n    setCurrentMonth(prevMonth => prevMonth === 0 ? 11 : prevMonth - 1);\n    if (currentMonth === 0) setCurrentYear(currentYear - 1); // Handle year change\n  };\n\n  // Change to next month\n  const goToNextMonth = () => {\n    setCurrentMonth(prevMonth => prevMonth === 11 ? 0 : prevMonth + 1);\n    if (currentMonth === 11) setCurrentYear(currentYear + 1); // Handle year change\n  };\n\n  // Get the days for the selected month\n  const monthDays = generateMonthDays(currentYear, currentMonth);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToPreviousMonth,\n      children: \"Previous Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: new Date(currentYear, currentMonth).toLocaleString('default', {\n        month: 'long',\n        year: 'numeric'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToNextMonth,\n      children: \"Next Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Shift\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 7\n          }, this), monthDays.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: parseInt(date.split('-')[1], 10)\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 9\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Monthly Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map((employee, employeeIndex) => {\n          const monthlyTotal = calculateMonthlyTotal(employee.id);\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              className: `row ${employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"}`,\n              style: {\n                backgroundColor: \"lightgreen\"\n              } // Example for Regular\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                rowSpan: 4,\n                children: employee.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Regular\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 11\n              }, this), monthDays.map(date => {\n                var _timesheetData$employ16, _timesheetData$employ17, _timesheetData$employ18, _timesheetData$employ19;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  className: date === today ? \"highlight-today\" : \"\",\n                  children: ((_timesheetData$employ16 = timesheetData[employee.id]) === null || _timesheetData$employ16 === void 0 ? void 0 : (_timesheetData$employ17 = _timesheetData$employ16[date]) === null || _timesheetData$employ17 === void 0 ? void 0 : _timesheetData$employ17.normalTime) === 0 ? \"0\" : (_timesheetData$employ18 = timesheetData[employee.id]) !== null && _timesheetData$employ18 !== void 0 && (_timesheetData$employ19 = _timesheetData$employ18[date]) !== null && _timesheetData$employ19 !== void 0 && _timesheetData$employ19.normalTime ? `${timesheetData[employee.id][date].normalTime}` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 13\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthlyTotal.normalTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: `row ${employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"}`,\n              style: {\n                backgroundColor: \"lightblue\"\n              } // Example for Night\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Night\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 11\n              }, this), monthDays.map(date => {\n                var _timesheetData$employ20, _timesheetData$employ21, _timesheetData$employ22, _timesheetData$employ23;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  className: date === today ? \"highlight-today\" : \"\",\n                  children: ((_timesheetData$employ20 = timesheetData[employee.id]) === null || _timesheetData$employ20 === void 0 ? void 0 : (_timesheetData$employ21 = _timesheetData$employ20[date]) === null || _timesheetData$employ21 === void 0 ? void 0 : _timesheetData$employ21.nightShift) === 0 ? \"0\" : (_timesheetData$employ22 = timesheetData[employee.id]) !== null && _timesheetData$employ22 !== void 0 && (_timesheetData$employ23 = _timesheetData$employ22[date]) !== null && _timesheetData$employ23 !== void 0 && _timesheetData$employ23.nightShift ? `${timesheetData[employee.id][date].nightShift}` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 13\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthlyTotal.nightShift\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: `row ${employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"}`,\n              style: {\n                backgroundColor: \"lightcoral\"\n              } // Example for Holiday\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Holiday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 11\n              }, this), monthDays.map(date => {\n                var _timesheetData$employ24, _timesheetData$employ25, _timesheetData$employ26, _timesheetData$employ27;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  className: date === today ? \"highlight-today\" : \"\",\n                  children: ((_timesheetData$employ24 = timesheetData[employee.id]) === null || _timesheetData$employ24 === void 0 ? void 0 : (_timesheetData$employ25 = _timesheetData$employ24[date]) === null || _timesheetData$employ25 === void 0 ? void 0 : _timesheetData$employ25.holidayTime) === 0 ? \"0\" : (_timesheetData$employ26 = timesheetData[employee.id]) !== null && _timesheetData$employ26 !== void 0 && (_timesheetData$employ27 = _timesheetData$employ26[date]) !== null && _timesheetData$employ27 !== void 0 && _timesheetData$employ27.holidayTime ? `${timesheetData[employee.id][date].holidayTime}` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 13\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthlyTotal.holidayTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: `row ${employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"}`,\n              style: {\n                backgroundColor: \"lightyellow\"\n              } // Example for Total\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 11\n              }, this), monthDays.map(date => {\n                var _timesheetData$employ28, _timesheetData$employ29, _timesheetData$employ30, _timesheetData$employ31;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  className: date === today ? \"highlight-today\" : \"\",\n                  children: ((_timesheetData$employ28 = timesheetData[employee.id]) === null || _timesheetData$employ28 === void 0 ? void 0 : (_timesheetData$employ29 = _timesheetData$employ28[date]) === null || _timesheetData$employ29 === void 0 ? void 0 : _timesheetData$employ29.totalTime) === 0 ? \"0\" : (_timesheetData$employ30 = timesheetData[employee.id]) !== null && _timesheetData$employ30 !== void 0 && (_timesheetData$employ31 = _timesheetData$employ30[date]) !== null && _timesheetData$employ31 !== void 0 && _timesheetData$employ31.totalTime ? `${timesheetData[employee.id][date].totalTime}` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 13\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthlyTotal.totalTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 9\n            }, this)]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 7\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Timesheet Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Start Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: startTime,\n            onChange: handleStartTimeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"End Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: endTime,\n            onChange: handleEndTimeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Next Day:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: nextDay,\n            onChange: handleNextDayToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Is Holiday:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isHoliday,\n            onChange: handleHolidayToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Time: \", totalTime, \" hours\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Night Shift Hours: \", nightShiftHours, \" hours\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Normal Time: \", normalTime, \" hours\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Holiday Time: \", holidayTime, \" hours\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveTimesheetDataToFirebase,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"JO8/ggFRxcKHjzzCzzPgOITCrj4=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["React","useState","useEffect","collection","onSnapshot","doc","setDoc","getDoc","db","jsxDEV","_jsxDEV","TimesheetList","_s","employees","setEmployees","timesheetData","setTimesheetData","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","nextDay","setNextDay","isHoliday","setIsHoliday","totalTime","setTotalTime","nightShiftHours","setNightShiftHours","holidayTime","setHolidayTime","normalTime","setNormalTime","currentMonth","setCurrentMonth","Date","getMonth","currentYear","setCurrentYear","getFullYear","generateMonthDays","year","month","daysInMonth","getDate","days","day","push","today","setToday","now","fetchEmployees","unsubscribe","snapshot","employeeData","docs","map","id","data","fetchTimesheetData","timesheetDataRef","updatedTimesheetData","forEach","employeeId","hours","date","record","Object","entries","parseFloat","nightShift","Boolean","handleSetTime","_timesheetData$employ","_timesheetData$employ2","_timesheetData$employ3","_timesheetData$employ4","_timesheetData$employ5","_timesheetData$employ6","handleStartTimeChange","event","newStartTime","target","value","calculateTimes","handleEndTimeChange","newEndTime","handleNextDayToggle","newNextDay","handleHolidayToggle","newIsHoliday","start","end","isNextDay","startHours","startMinutes","split","Number","endHours","endMinutes","startDate","setHours","endDate","setDate","totalTimeInHours","nightShiftStart","nightShiftEnd","nightShiftStartTime","nightShiftEndTime","toFixed","saveTimesheetDataToFirebase","_await$getDoc$data","timesheetDocRef","error","console","calculateMonthlyTotal","monthlyTotal","monthDays","_timesheetData$employ7","targetHours","length","getTotalCellColor","children","employee","employeeIndex","totalCellColor","Fragment","className","style","backgroundColor","rowSpan","name","fileName","_jsxFileName","lineNumber","columnNumber","_timesheetData$employ8","_timesheetData$employ9","onClick","_timesheetData$employ10","_timesheetData$employ11","_timesheetData$employ12","_timesheetData$employ13","_timesheetData$employ14","_timesheetData$employ15","goToPreviousMonth","prevMonth","goToNextMonth","toLocaleString","border","parseInt","_timesheetData$employ16","_timesheetData$employ17","_timesheetData$employ18","_timesheetData$employ19","_timesheetData$employ20","_timesheetData$employ21","_timesheetData$employ22","_timesheetData$employ23","_timesheetData$employ24","_timesheetData$employ25","_timesheetData$employ26","_timesheetData$employ27","_timesheetData$employ28","_timesheetData$employ29","_timesheetData$employ30","_timesheetData$employ31","type","onChange","checked","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport './TimesheetStyles.css';\n\nconst TimesheetList = () => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth()); // Start with current month\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear()); // Start with current year\n\n  // Generate all days of the current month\n  const generateMonthDays = (year, month) => {\n    const daysInMonth = new Date(year, month + 1, 0).getDate(); // month is 0-indexed\n    const days = [];\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push(`${month + 1}-${day < 10 ? '0' + day : day}`);\n    }\n    return days;\n  };\n\n  const [today, setToday] = useState(() => {\n  const now = new Date();\n  const month = now.getMonth() + 1; // JS months are 0-indexed\n  const day = now.getDate();\n  return `${month}-${day < 10 ? '0' + day : day}`; // Format MM-DD\n});\n\n\n  // Fetch employee and timesheet data from Firestore\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), (snapshot) => {\n        const employeeData = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe;\n    };\n\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, (snapshot) => {\n        const updatedTimesheetData = {};\n        snapshot.forEach((doc) => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0,\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe;\n    };\n\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n\n  // Handle the time settings for a specific employee and date\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setStartTime(timesheetData[employeeId]?.[date]?.startTime || \"\");\n    setEndTime(timesheetData[employeeId]?.[date]?.endTime || \"\");\n    setIsHoliday(timesheetData[employeeId]?.[date]?.isHoliday || false);\n    setModalOpen(true);\n  };\n\n  // Handle changes in start time\n  const handleStartTimeChange = (event) => {\n    const newStartTime = event.target.value;\n    setStartTime(newStartTime);\n    calculateTimes(newStartTime, endTime, nextDay, isHoliday);\n  };\n\n  // Handle changes in end time\n  const handleEndTimeChange = (event) => {\n    const newEndTime = event.target.value;\n    setEndTime(newEndTime);\n    calculateTimes(startTime, newEndTime, nextDay, isHoliday);\n  };\n\n  // Toggle next day status\n  const handleNextDayToggle = () => {\n    const newNextDay = !nextDay;\n    setNextDay(newNextDay);\n    calculateTimes(startTime, endTime, newNextDay, isHoliday);\n  };\n\n  // Toggle holiday status\n  const handleHolidayToggle = () => {\n    const newIsHoliday = !isHoliday;\n    setIsHoliday(newIsHoliday);\n    calculateTimes(startTime, endTime, nextDay, newIsHoliday);\n  };\n\n  // Calculate total time, night shift hours, and normal/holiday time\n  const calculateTimes = (start, end, isNextDay, isHoliday) => {\n    if (!start || !end) return;\n\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);\n\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0);\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1);\n    nightShiftEnd.setHours(6, 0, 0);\n\n    let nightShiftHours = 0;\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n\n    const normalTime = isHoliday ? 0 : totalTimeInHours - nightShiftHours;\n    setNormalTime(normalTime.toFixed(2));\n\n    const holidayTime = isHoliday ? totalTimeInHours : 0;\n    setHolidayTime(holidayTime.toFixed(2));\n  };\n\n  // Save timesheet data to Firestore\n  const saveTimesheetDataToFirebase = async () => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", selectedEmployee);\n      const timesheetData = (await getDoc(timesheetDocRef)).data()?.hours || {};\n      timesheetData[selectedDate] = {\n        startTime,\n        endTime,\n        totalTime: parseFloat(totalTime),\n        nightShift: parseFloat(nightShiftHours),\n        holidayTime: parseFloat(holidayTime),\n        normalTime: parseFloat(normalTime),\n        isHoliday,\n      };\n      await setDoc(timesheetDocRef, { hours: timesheetData });\n      setModalOpen(false);\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n// Modify the calculateMonthlyTotal function to include target calculation\nconst calculateMonthlyTotal = (employeeId) => {\n  let monthlyTotal = {\n    normalTime: 0,\n    nightShift: 0,\n    holidayTime: 0,\n    totalTime: 0,\n  };\n\n  const monthDays = generateMonthDays(currentYear, currentMonth);\n  monthDays.forEach((date) => {\n    const data = timesheetData[employeeId]?.[date];\n    if (data) {\n      monthlyTotal.normalTime += data.normalTime || 0;\n      monthlyTotal.nightShift += data.nightShift || 0;\n      monthlyTotal.holidayTime += data.holidayTime || 0;\n      monthlyTotal.totalTime += data.totalTime || 0;\n    }\n  });\n\n  // Calculate target hours based on the current day\n  const targetHours = 8 * monthDays.length;\n\n  return { ...monthlyTotal, targetHours };\n};\n\n// Define a function to determine the color based on the total hours worked\nconst getTotalCellColor = (employeeId) => {\n  const monthlyTotal = calculateMonthlyTotal(employeeId);\n  const targetHours = monthlyTotal.targetHours;\n  const totalTime = monthlyTotal.totalTime;\n\n  // Compare total worked hours with target and set color\n  if (totalTime >= targetHours) {\n    return 'green'; // Employee is on track\n  } else if (totalTime < targetHours * 0.8) {\n    return 'red'; // Employee is far behind\n  } else {\n    return 'yellow'; // Employee is getting close but not there yet\n  }\n};\n\n// Inside your table rendering logic, apply dynamic styling for the 'Total' row\n<tbody>\n  {employees.map((employee, employeeIndex) => {\n    const monthlyTotal = calculateMonthlyTotal(employee.id);\n    const totalCellColor = getTotalCellColor(employee.id); // Get color for the total cell\n\n    return (\n      <React.Fragment key={employee.id}>\n        <tr\n          className={`row ${\n            employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"\n          }`}\n          style={{ backgroundColor: \"lightgreen\" }} // Example for Regular\n        >\n          <td rowSpan={4}>{employee.name}</td>\n          <td>Regular</td>\n          {monthDays.map((date) => (\n            <td\n              key={date}\n              onClick={() => handleSetTime(employee.id, date)}\n              className={date === today ? \"highlight-today\" : \"\"}\n            >\n              {timesheetData[employee.id]?.[date]?.normalTime || \"0\"}\n            </td>\n          ))}\n          <td>{monthlyTotal.normalTime}</td>\n        </tr>\n        <tr\n          className={`row ${\n            employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"\n          }`}\n          style={{ backgroundColor: \"lightblue\" }} // Example for Night\n        >\n          <td>Night</td>\n          {monthDays.map((date) => (\n            <td\n              key={date}\n              onClick={() => handleSetTime(employee.id, date)}\n              className={date === today ? \"highlight-today\" : \"\"}\n            >\n              {timesheetData[employee.id]?.[date]?.nightShift || \"0\"}\n            </td>\n          ))}\n          <td>{monthlyTotal.nightShift}</td>\n        </tr>\n        <tr\n          className={`row ${\n            employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"\n          }`}\n          style={{ backgroundColor: \"lightcoral\" }} // Example for Holiday\n        >\n          <td>Holiday</td>\n          {monthDays.map((date) => (\n            <td\n              key={date}\n              onClick={() => handleSetTime(employee.id, date)}\n              className={date === today ? \"highlight-today\" : \"\"}\n            >\n              {timesheetData[employee.id]?.[date]?.holidayTime || \"0\"}\n            </td>\n          ))}\n          <td>{monthlyTotal.holidayTime}</td>\n        </tr>\n        <tr\n          className={`row ${\n            employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"\n          }`}\n          style={{\n            backgroundColor: totalCellColor, // Apply dynamic color for the 'Total' row\n          }}\n        >\n          <td>Total</td>\n          {monthDays.map((date) => (\n            <td\n              key={date}\n              onClick={() => handleSetTime(employee.id, date)}\n              className={date === today ? \"highlight-today\" : \"\"}\n            >\n              {timesheetData[employee.id]?.[date]?.totalTime || \"0\"}\n            </td>\n          ))}\n          <td>{monthlyTotal.totalTime}</td>\n        </tr>\n      </React.Fragment>\n    );\n  })}\n</tbody>\n\n\n  // Change to previous month\n  const goToPreviousMonth = () => {\n    setCurrentMonth((prevMonth) => (prevMonth === 0 ? 11 : prevMonth - 1));\n    if (currentMonth === 0) setCurrentYear(currentYear - 1); // Handle year change\n  };\n\n  // Change to next month\n  const goToNextMonth = () => {\n    setCurrentMonth((prevMonth) => (prevMonth === 11 ? 0 : prevMonth + 1));\n    if (currentMonth === 11) setCurrentYear(currentYear + 1); // Handle year change\n  };\n\n  // Get the days for the selected month\n  const monthDays = generateMonthDays(currentYear, currentMonth);\n\n  return (\n    <div>\n      <button onClick={goToPreviousMonth}>Previous Month</button>\n<span>{new Date(currentYear, currentMonth).toLocaleString('default', { month: 'long', year: 'numeric' })}</span>\n<button onClick={goToNextMonth}>Next Month</button>\n\n\n      <table border=\"1\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Shift</th>\n      {monthDays.map((date) => (\n        <th key={date}>{parseInt(date.split('-')[1], 10)}</th>\n      ))}\n      <th>Monthly Total</th>\n    </tr>\n  </thead>\n  <tbody>\n  {employees.map((employee, employeeIndex) => {\n    const monthlyTotal = calculateMonthlyTotal(employee.id);\n    return (\n      <React.Fragment key={employee.id}>\n        <tr\n          className={`row ${\n            employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"\n          }`}\n          style={{ backgroundColor: \"lightgreen\" }} // Example for Regular\n        >\n          <td rowSpan={4}>{employee.name}</td>\n          <td>Regular</td>\n          {monthDays.map((date) => (\n            <td\n            key={date}\n            onClick={() => handleSetTime(employee.id, date)}\n            className={date === today ? \"highlight-today\" : \"\"}\n          >          \n              {timesheetData[employee.id]?.[date]?.normalTime === 0\n                ? \"0\"\n                : timesheetData[employee.id]?.[date]?.normalTime\n                ? `${timesheetData[employee.id][date].normalTime}`\n                : \"\"}\n            </td>\n          ))}\n          <td>{monthlyTotal.normalTime}</td>\n        </tr>\n        <tr\n          className={`row ${\n            employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"\n          }`}\n          style={{ backgroundColor: \"lightblue\" }} // Example for Night\n        >\n          <td>Night</td>\n          {monthDays.map((date) => (\n            <td\n            key={date}\n            onClick={() => handleSetTime(employee.id, date)}\n            className={date === today ? \"highlight-today\" : \"\"}\n          >\n              {timesheetData[employee.id]?.[date]?.nightShift === 0\n                ? \"0\"\n                : timesheetData[employee.id]?.[date]?.nightShift\n                ? `${timesheetData[employee.id][date].nightShift}`\n                : \"\"}\n            </td>\n          ))}\n          <td>{monthlyTotal.nightShift}</td>\n        </tr>\n        <tr\n          className={`row ${\n            employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"\n          }`}\n          style={{ backgroundColor: \"lightcoral\" }} // Example for Holiday\n        >\n          <td>Holiday</td>\n          {monthDays.map((date) => (\n            <td\n            key={date}\n            onClick={() => handleSetTime(employee.id, date)}\n            className={date === today ? \"highlight-today\" : \"\"}\n          >\n              {timesheetData[employee.id]?.[date]?.holidayTime === 0\n                ? \"0\"\n                : timesheetData[employee.id]?.[date]?.holidayTime\n                ? `${timesheetData[employee.id][date].holidayTime}`\n                : \"\"}\n            </td>\n          ))}\n          <td>{monthlyTotal.holidayTime}</td>\n        </tr>\n        <tr\n          className={`row ${\n            employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"\n          }`}\n          style={{ backgroundColor: \"lightyellow\" }} // Example for Total\n        >\n          <td>Total</td>\n          {monthDays.map((date) => (\n            <td\n            key={date}\n            onClick={() => handleSetTime(employee.id, date)}\n            className={date === today ? \"highlight-today\" : \"\"}\n          >\n              {timesheetData[employee.id]?.[date]?.totalTime === 0\n                ? \"0\"\n                : timesheetData[employee.id]?.[date]?.totalTime\n                ? `${timesheetData[employee.id][date].totalTime}`\n                : \"\"}\n            </td>\n          ))}\n          <td>{monthlyTotal.totalTime}</td>\n        </tr>\n      </React.Fragment>\n    );\n  })}\n</tbody>\n\n</table>\n\n      {modalOpen && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h2>Timesheet Details</h2>\n            <label>\n              Start Time:\n              <input\n                type=\"time\"\n                value={startTime}\n                onChange={handleStartTimeChange}\n              />\n            </label>\n            <label>\n              End Time:\n              <input\n                type=\"time\"\n                value={endTime}\n                onChange={handleEndTimeChange}\n              />\n            </label>\n            <label>\n              Next Day:\n              <input\n                type=\"checkbox\"\n                checked={nextDay}\n                onChange={handleNextDayToggle}\n              />\n            </label>\n            <label>\n              Is Holiday:\n              <input\n                type=\"checkbox\"\n                checked={isHoliday}\n                onChange={handleHolidayToggle}\n              />\n            </label>\n            <p>Total Time: {totalTime} hours</p>\n            <p>Night Shift Hours: {nightShiftHours} hours</p>\n            <p>Normal Time: {normalTime} hours</p>\n            <p>Holiday Time: {holidayTime} hours</p>\n            <button onClick={saveTimesheetDataToFirebase}>Save</button>\n            <button onClick={() => setModalOpen(false)}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}