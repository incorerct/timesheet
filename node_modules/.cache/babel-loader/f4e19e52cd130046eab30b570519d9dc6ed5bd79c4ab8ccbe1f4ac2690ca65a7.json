{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  useEffect(() => {\n    // Generate random animated circles for the neural effect\n    const generateCircles = () => {\n      const container = document.querySelector('.glowing-circles');\n      const numberOfCircles = 10; // Number of circles to create\n      const circleArray = [];\n      for (let i = 0; i < numberOfCircles; i++) {\n        const circle = document.createElement('div');\n        circle.classList.add('glowing-circle');\n        const size = Math.random() * 50 + 20; // Random size between 20px and 70px\n        const xPos = Math.random() * 100; // Random position in x-axis\n        const yPos = Math.random() * 100; // Random position in y-axis\n        const animationDuration = Math.random() * 3 + 3; // Random duration for glowing effect\n\n        circle.style.width = `${size}px`;\n        circle.style.height = `${size}px`;\n        circle.style.left = `${xPos}%`;\n        circle.style.top = `${yPos}%`;\n        circle.style.animationDuration = `${animationDuration}s`;\n        container.appendChild(circle);\n        circleArray.push(circle);\n      }\n    };\n    generateCircles();\n  }, []);\n  const [username, setUsername] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    onLogin(username, password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"glowing-circles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            placeholder: \"Enter your username\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Enter your password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-btn\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Ka0kZZC22nEbpC5J/mmjYonsUYU=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Login","onLogin","_s","generateCircles","container","document","querySelector","numberOfCircles","circleArray","i","circle","createElement","classList","add","size","Math","random","xPos","yPos","animationDuration","style","width","height","left","top","appendChild","push","username","setUsername","useState","password","setPassword","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/login.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./login.css\";\n\nconst Login = ({ onLogin }) => {\n  useEffect(() => {\n    // Generate random animated circles for the neural effect\n    const generateCircles = () => {\n      const container = document.querySelector('.glowing-circles');\n      const numberOfCircles = 10; // Number of circles to create\n      const circleArray = [];\n\n      for (let i = 0; i < numberOfCircles; i++) {\n        const circle = document.createElement('div');\n        circle.classList.add('glowing-circle');\n        const size = Math.random() * 50 + 20; // Random size between 20px and 70px\n        const xPos = Math.random() * 100; // Random position in x-axis\n        const yPos = Math.random() * 100; // Random position in y-axis\n        const animationDuration = Math.random() * 3 + 3; // Random duration for glowing effect\n\n        circle.style.width = `${size}px`;\n        circle.style.height = `${size}px`;\n        circle.style.left = `${xPos}%`;\n        circle.style.top = `${yPos}%`;\n        circle.style.animationDuration = `${animationDuration}s`;\n\n        container.appendChild(circle);\n        circleArray.push(circle);\n      }\n    };\n\n    generateCircles();\n  }, []);\n\n  const [username, setUsername] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onLogin(username, password);\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"glowing-circles\"></div> {/* Container for glowing circles */}\n      <div className=\"login-box\">\n        <h2 className=\"login-title\">Login</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"input-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              placeholder=\"Enter your username\"\n              required\n            />\n          </div>\n          <div className=\"input-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Enter your password\"\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"login-btn\">Login</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}