{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { collection, getDocs, getDoc, doc, setDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = ({\n  weekDates\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const employeeSnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = employeeSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n\n        // Fetch initial timesheet data for employees\n        fetchTimesheetData();\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const fetchTimesheetData = async () => {\n    try {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const snapshot = await getDocs(timesheetDataRef);\n      const fetchedData = {};\n      snapshot.forEach(doc => {\n        fetchedData[doc.id] = doc.data().hours; // Assuming 'hours' field contains timesheet data\n      });\n      setTimesheetData(fetchedData);\n    } catch (error) {\n      console.error(\"Error fetching timesheet data:\", error);\n    }\n  };\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId); // Adjust the document path if necessary\n      const timesheetData = await getDoc(timesheetDocRef);\n      let updatedData = {};\n      if (timesheetData.exists()) {\n        updatedData = timesheetData.data().hours;\n        updatedData[date] = {\n          startTime: start,\n          endTime: end,\n          totalTime,\n          nightShift,\n          holidayTime,\n          isHoliday\n        };\n      } else {\n        updatedData = {\n          [date]: {\n            startTime: start,\n            endTime: end,\n            totalTime,\n            nightShift,\n            holidayTime,\n            isHoliday\n          }\n        };\n      }\n      await setDoc(timesheetDocRef, {\n        hours: updatedData\n      });\n      console.log(\"Data saved successfully!\");\n\n      // After saving, fetch the updated data\n      fetchTimesheetData();\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), weekDates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), weekDates.map(date => {\n            var _timesheetData$employ, _timesheetData$employ2;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSetTime(employee.id, date),\n                children: \"Set Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), ((_timesheetData$employ = timesheetData[employee.id]) === null || _timesheetData$employ === void 0 ? void 0 : (_timesheetData$employ2 = _timesheetData$employ[date]) === null || _timesheetData$employ2 === void 0 ? void 0 : _timesheetData$employ2.totalTime) && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Total Time: \", timesheetData[employee.id][date].totalTime, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Night Shift: \", timesheetData[employee.id][date].nightShift, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Holiday Time: \", timesheetData[employee.id][date].holidayTime, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this);\n          })]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"wNV2LoUbjaUXZHV3edriqlOvNLE=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["useState","useEffect","collection","getDocs","getDoc","doc","setDoc","db","jsxDEV","_jsxDEV","TimesheetList","weekDates","_s","employees","setEmployees","timesheetData","setTimesheetData","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","nextDay","setNextDay","isHoliday","setIsHoliday","totalTime","setTotalTime","nightShiftHours","setNightShiftHours","holidayTime","setHolidayTime","fetchData","employeeSnapshot","employeeData","docs","map","id","data","fetchTimesheetData","error","console","timesheetDataRef","snapshot","fetchedData","forEach","hours","saveTimesheetDataToFirebase","employeeId","date","start","end","nightShift","timesheetDocRef","updatedData","exists","log","children","border","fileName","_jsxFileName","lineNumber","columnNumber","employee","name","_timesheetData$employ","_timesheetData$employ2","onClick","handleSetTime","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { collection, getDocs, getDoc, doc, setDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\n\nconst TimesheetList = ({ weekDates }) => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const employeeSnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = employeeSnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n\n        // Fetch initial timesheet data for employees\n        fetchTimesheetData();\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const fetchTimesheetData = async () => {\n    try {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const snapshot = await getDocs(timesheetDataRef);\n\n      const fetchedData = {};\n      snapshot.forEach((doc) => {\n        fetchedData[doc.id] = doc.data().hours; // Assuming 'hours' field contains timesheet data\n      });\n\n      setTimesheetData(fetchedData);\n    } catch (error) {\n      console.error(\"Error fetching timesheet data:\", error);\n    }\n  };\n\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId); // Adjust the document path if necessary\n      const timesheetData = await getDoc(timesheetDocRef);\n\n      let updatedData = {};\n\n      if (timesheetData.exists()) {\n        updatedData = timesheetData.data().hours;\n        updatedData[date] = { startTime: start, endTime: end, totalTime, nightShift, holidayTime, isHoliday };\n      } else {\n        updatedData = { [date]: { startTime: start, endTime: end, totalTime, nightShift, holidayTime, isHoliday } };\n      }\n\n      await setDoc(timesheetDocRef, { hours: updatedData });\n      console.log(\"Data saved successfully!\");\n\n      // After saving, fetch the updated data\n      fetchTimesheetData();\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Employee</th>\n            {weekDates.map((date) => (\n              <th key={date}>{date}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => (\n            <tr key={employee.id}>\n              <td>{employee.name}</td>\n              {weekDates.map((date) => (\n                <td key={date}>\n                  <button onClick={() => handleSetTime(employee.id, date)}>Set Time</button>\n                  {timesheetData[employee.id]?.[date]?.totalTime && (\n                    <div>\n                      <p>Total Time: {timesheetData[employee.id][date].totalTime} hours</p>\n                      <p>Night Shift: {timesheetData[employee.id][date].nightShift} hours</p>\n                      <p>Holiday Time: {timesheetData[employee.id][date].holidayTime} hours</p>\n                    </div>\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}