{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/EmployeeManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { collection, addDoc, getDocs, updateDoc, doc, deleteDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\"; // Import the Firestore db instance\nimport * as XLSX from \"xlsx\"; // Import the xlsx library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeManagement = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [newEmployee, setNewEmployee] = useState({\n    name: \"\",\n    phone: \"\",\n    sap: \"\",\n    group: \"\" // Add group field\n  });\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: \"asc\"\n  });\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n    fetchEmployees();\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewEmployee(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleAddEmployee = async e => {\n    e.preventDefault();\n    try {\n      if (!newEmployee.name || !newEmployee.phone || !newEmployee.sap || !newEmployee.group) {\n        alert(\"Please fill all fields!\");\n        return;\n      }\n      const docRef = await addDoc(collection(db, \"employees\"), newEmployee);\n      setEmployees(prev => [...prev, {\n        id: docRef.id,\n        ...newEmployee\n      }]);\n      setNewEmployee({\n        name: \"\",\n        phone: \"\",\n        sap: \"\",\n        group: \"\"\n      });\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error(\"Error adding employee:\", error);\n    }\n  };\n  const handleDoubleClick = (employee, field) => {\n    setEditingEmployee({\n      ...employee,\n      fieldToEdit: field\n    });\n  };\n  const handleUpdateEmployee = async () => {\n    try {\n      if (!editingEmployee) return;\n      const employeeDoc = doc(db, \"employees\", editingEmployee.id);\n      await updateDoc(employeeDoc, {\n        name: editingEmployee.name,\n        phone: editingEmployee.phone,\n        sap: editingEmployee.sap,\n        group: editingEmployee.group\n      });\n      setEmployees(prev => prev.map(emp => emp.id === editingEmployee.id ? editingEmployee : emp));\n      setEditingEmployee(null);\n    } catch (error) {\n      console.error(\"Error updating employee:\", error);\n    }\n  };\n  const handleDeleteEmployee = async employeeId => {\n    const isConfirmed = window.confirm(\"Are you sure you want to delete this employee?\");\n    if (isConfirmed) {\n      try {\n        const employeeDoc = doc(db, \"employees\", employeeId);\n        await deleteDoc(employeeDoc);\n        setEmployees(prev => prev.filter(emp => emp.id !== employeeId));\n      } catch (error) {\n        console.error(\"Error deleting employee:\", error);\n      }\n    }\n  };\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  const filteredEmployees = employees.filter(employee => {\n    return employee.name.toLowerCase().includes(searchTerm.toLowerCase()) || employee.phone.includes(searchTerm) || employee.sap.toString().includes(searchTerm) || employee.group.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n  const handleSort = key => {\n    let direction = \"asc\";\n    if (sortConfig.key === key && sortConfig.direction === \"asc\") {\n      direction = \"desc\";\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n    const sortedEmployees = [...filteredEmployees].sort((a, b) => {\n      if (a[key] < b[key]) return direction === \"asc\" ? -1 : 1;\n      if (a[key] > b[key]) return direction === \"asc\" ? 1 : -1;\n      return 0;\n    });\n    setEmployees(sortedEmployees);\n  };\n\n  // Function to export employee data to Excel\n  const exportToExcel = () => {\n    const filteredData = employees.map(({\n      name,\n      phone,\n      sap,\n      group\n    }) => ({\n      Group: group,\n      Name: name,\n      Phone: phone,\n      SAP: sap\n    }));\n    const worksheet = XLSX.utils.json_to_sheet(filteredData);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Employees\");\n    XLSX.writeFile(workbook, \"Employees.xlsx\");\n  };\n\n  // Handle \"Enter\" key press to save updates\n  const handleKeyDown = (e, field) => {\n    if (e.key === \"Enter\") {\n      handleUpdateEmployee();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employee-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        placeholder: \"Search Employees...\",\n        value: searchTerm,\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-employee-btn\",\n          onClick: () => setIsModalOpen(true),\n          children: \"Add New Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"export-btn\",\n          onClick: exportToExcel,\n          children: \"Export to Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"employee-table\",\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"group\"),\n            children: \"Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"name\"),\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"phone\"),\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"sap\"),\n            children: \"SAP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredEmployees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            onDoubleClick: () => handleDoubleClick(employee, \"group\"),\n            children: editingEmployee && editingEmployee.id === employee.id && editingEmployee.fieldToEdit === \"group\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"group\",\n              value: editingEmployee.group,\n              onChange: e => setEditingEmployee(prev => ({\n                ...prev,\n                group: e.target.value\n              })),\n              onBlur: handleUpdateEmployee,\n              onKeyDown: e => handleKeyDown(e, \"group\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this) : employee.group\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            onDoubleClick: () => handleDoubleClick(employee, \"name\"),\n            children: editingEmployee && editingEmployee.id === employee.id && editingEmployee.fieldToEdit === \"name\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: editingEmployee.name,\n              onChange: e => setEditingEmployee(prev => ({\n                ...prev,\n                name: e.target.value\n              })),\n              onBlur: handleUpdateEmployee,\n              onKeyDown: e => handleKeyDown(e, \"name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this) : employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            onDoubleClick: () => handleDoubleClick(employee, \"phone\"),\n            children: editingEmployee && editingEmployee.id === employee.id && editingEmployee.fieldToEdit === \"phone\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"phone\",\n              value: editingEmployee.phone,\n              onChange: e => setEditingEmployee(prev => ({\n                ...prev,\n                phone: e.target.value\n              })),\n              onBlur: handleUpdateEmployee,\n              onKeyDown: e => handleKeyDown(e, \"phone\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this) : employee.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            onDoubleClick: () => handleDoubleClick(employee, \"sap\"),\n            children: editingEmployee && editingEmployee.id === employee.id && editingEmployee.fieldToEdit === \"sap\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"sap\",\n              value: editingEmployee.sap,\n              onChange: e => setEditingEmployee(prev => ({\n                ...prev,\n                sap: e.target.value\n              })),\n              onBlur: handleUpdateEmployee,\n              onKeyDown: e => handleKeyDown(e, \"sap\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this) : employee.sap\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"actions\",\n            children: [editingEmployee && editingEmployee.id === employee.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpdateEmployee,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDoubleClick(employee, \"name\"),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteEmployee(employee.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add New Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddEmployee,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"group\",\n            value: newEmployee.group,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: newEmployee.name,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phone\",\n            value: newEmployee.phone,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"SAP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"sap\",\n            value: newEmployee.sap,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setIsModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeManagement, \"464s3eZNldZgl1k1vKG4qpf2jjs=\");\n_c = EmployeeManagement;\nexport default EmployeeManagement;\nvar _c;\n$RefreshReg$(_c, \"EmployeeManagement\");","map":{"version":3,"names":["React","useState","useEffect","collection","addDoc","getDocs","updateDoc","doc","deleteDoc","db","XLSX","jsxDEV","_jsxDEV","EmployeeManagement","_s","employees","setEmployees","newEmployee","setNewEmployee","name","phone","sap","group","editingEmployee","setEditingEmployee","isModalOpen","setIsModalOpen","searchTerm","setSearchTerm","sortConfig","setSortConfig","key","direction","fetchEmployees","querySnapshot","employeeData","docs","map","id","data","error","console","handleInputChange","e","value","target","prev","handleAddEmployee","preventDefault","alert","docRef","handleDoubleClick","employee","field","fieldToEdit","handleUpdateEmployee","employeeDoc","emp","handleDeleteEmployee","employeeId","isConfirmed","window","confirm","filter","handleSearchChange","filteredEmployees","toLowerCase","includes","toString","handleSort","sortedEmployees","sort","a","b","exportToExcel","filteredData","Group","Name","Phone","SAP","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","handleKeyDown","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","border","onDoubleClick","onBlur","onKeyDown","onSubmit","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/EmployeeManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { collection, addDoc, getDocs, updateDoc, doc, deleteDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\"; // Import the Firestore db instance\nimport * as XLSX from \"xlsx\"; // Import the xlsx library\n\nconst EmployeeManagement = () => {\n  const [employees, setEmployees] = useState([]);\n  const [newEmployee, setNewEmployee] = useState({\n    name: \"\",\n    phone: \"\",\n    sap: \"\",\n    group: \"\", // Add group field\n  });\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: \"asc\" });\n\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n\n    fetchEmployees();\n  }, []);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewEmployee((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleAddEmployee = async (e) => {\n    e.preventDefault();\n    try {\n      if (!newEmployee.name || !newEmployee.phone || !newEmployee.sap || !newEmployee.group) {\n        alert(\"Please fill all fields!\");\n        return;\n      }\n      const docRef = await addDoc(collection(db, \"employees\"), newEmployee);\n      setEmployees((prev) => [...prev, { id: docRef.id, ...newEmployee }]);\n      setNewEmployee({ name: \"\", phone: \"\", sap: \"\", group: \"\" });\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error(\"Error adding employee:\", error);\n    }\n  };\n\n  const handleDoubleClick = (employee, field) => {\n    setEditingEmployee({ ...employee, fieldToEdit: field });\n  };\n\n  const handleUpdateEmployee = async () => {\n    try {\n      if (!editingEmployee) return;\n\n      const employeeDoc = doc(db, \"employees\", editingEmployee.id);\n      await updateDoc(employeeDoc, {\n        name: editingEmployee.name,\n        phone: editingEmployee.phone,\n        sap: editingEmployee.sap,\n        group: editingEmployee.group,\n      });\n\n      setEmployees((prev) =>\n        prev.map((emp) => (emp.id === editingEmployee.id ? editingEmployee : emp))\n      );\n      setEditingEmployee(null);\n    } catch (error) {\n      console.error(\"Error updating employee:\", error);\n    }\n  };\n\n  const handleDeleteEmployee = async (employeeId) => {\n    const isConfirmed = window.confirm(\"Are you sure you want to delete this employee?\");\n    if (isConfirmed) {\n      try {\n        const employeeDoc = doc(db, \"employees\", employeeId);\n        await deleteDoc(employeeDoc);\n        setEmployees((prev) => prev.filter((emp) => emp.id !== employeeId));\n      } catch (error) {\n        console.error(\"Error deleting employee:\", error);\n      }\n    }\n  };\n\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const filteredEmployees = employees.filter((employee) => {\n    return (\n      employee.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      employee.phone.includes(searchTerm) ||\n      employee.sap.toString().includes(searchTerm) ||\n      employee.group.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  });\n\n  const handleSort = (key) => {\n    let direction = \"asc\";\n    if (sortConfig.key === key && sortConfig.direction === \"asc\") {\n      direction = \"desc\";\n    }\n    setSortConfig({ key, direction });\n\n    const sortedEmployees = [...filteredEmployees].sort((a, b) => {\n      if (a[key] < b[key]) return direction === \"asc\" ? -1 : 1;\n      if (a[key] > b[key]) return direction === \"asc\" ? 1 : -1;\n      return 0;\n    });\n\n    setEmployees(sortedEmployees);\n  };\n\n  // Function to export employee data to Excel\n  const exportToExcel = () => {\n    const filteredData = employees.map(({ name, phone, sap, group }) => ({\n      Group: group,\n      Name: name,\n      Phone: phone,\n      SAP: sap,\n    }));\n\n    const worksheet = XLSX.utils.json_to_sheet(filteredData);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Employees\");\n\n    XLSX.writeFile(workbook, \"Employees.xlsx\");\n  };\n\n  // Handle \"Enter\" key press to save updates\n  const handleKeyDown = (e, field) => {\n    if (e.key === \"Enter\") {\n      handleUpdateEmployee();\n    }\n  };\n\n  return (\n    <div className=\"employee-management\">\n      <div className=\"header\">\n        <input\n          type=\"search\"\n          placeholder=\"Search Employees...\"\n          value={searchTerm}\n          onChange={handleSearchChange}\n        />\n\n        <div className=\"button-container\">\n          <button className=\"add-employee-btn\" onClick={() => setIsModalOpen(true)}>\n            Add New Employee\n          </button>\n\n          <button className=\"export-btn\" onClick={exportToExcel}>\n            Export to Excel\n          </button>\n        </div>\n      </div>\n\n      <h3>Employee List</h3>\n      <table className=\"employee-table\" border=\"1\">\n        <thead>\n          <tr>\n            <th onClick={() => handleSort(\"group\")}>Group</th> {/* New column for Group */}\n            <th onClick={() => handleSort(\"name\")}>Name</th>\n            <th onClick={() => handleSort(\"phone\")}>Phone</th>\n            <th onClick={() => handleSort(\"sap\")}>SAP</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredEmployees.map((employee) => (\n            <tr key={employee.id}>\n              <td onDoubleClick={() => handleDoubleClick(employee, \"group\")}>\n                {editingEmployee && editingEmployee.id === employee.id && editingEmployee.fieldToEdit === \"group\" ? (\n                  <input\n                    type=\"text\"\n                    name=\"group\"\n                    value={editingEmployee.group}\n                    onChange={(e) =>\n                      setEditingEmployee((prev) => ({ ...prev, group: e.target.value }))\n                    }\n                    onBlur={handleUpdateEmployee}\n                    onKeyDown={(e) => handleKeyDown(e, \"group\")}\n                  />\n                ) : (\n                  employee.group\n                )}\n              </td>\n              <td onDoubleClick={() => handleDoubleClick(employee, \"name\")}>\n                {editingEmployee && editingEmployee.id === employee.id && editingEmployee.fieldToEdit === \"name\" ? (\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={editingEmployee.name}\n                    onChange={(e) =>\n                      setEditingEmployee((prev) => ({ ...prev, name: e.target.value }))\n                    }\n                    onBlur={handleUpdateEmployee}\n                    onKeyDown={(e) => handleKeyDown(e, \"name\")}\n                  />\n                ) : (\n                  employee.name\n                )}\n              </td>\n              <td onDoubleClick={() => handleDoubleClick(employee, \"phone\")}>\n                {editingEmployee && editingEmployee.id === employee.id && editingEmployee.fieldToEdit === \"phone\" ? (\n                  <input\n                    type=\"text\"\n                    name=\"phone\"\n                    value={editingEmployee.phone}\n                    onChange={(e) =>\n                      setEditingEmployee((prev) => ({ ...prev, phone: e.target.value }))\n                    }\n                    onBlur={handleUpdateEmployee}\n                    onKeyDown={(e) => handleKeyDown(e, \"phone\")}\n                  />\n                ) : (\n                  employee.phone\n                )}\n              </td>\n              <td onDoubleClick={() => handleDoubleClick(employee, \"sap\")}>\n                {editingEmployee && editingEmployee.id === employee.id && editingEmployee.fieldToEdit === \"sap\" ? (\n                  <input\n                    type=\"text\"\n                    name=\"sap\"\n                    value={editingEmployee.sap}\n                    onChange={(e) =>\n                      setEditingEmployee((prev) => ({ ...prev, sap: e.target.value }))\n                    }\n                    onBlur={handleUpdateEmployee}\n                    onKeyDown={(e) => handleKeyDown(e, \"sap\")}\n                  />\n                ) : (\n                  employee.sap\n                )}\n              </td>\n              <td className=\"actions\">\n                {editingEmployee && editingEmployee.id === employee.id ? (\n                  <button onClick={handleUpdateEmployee}>Save</button>\n                ) : (\n                  <button onClick={() => handleDoubleClick(employee, \"name\")}>Edit</button>\n                )}\n                <button onClick={() => handleDeleteEmployee(employee.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {isModalOpen && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h2>Add New Employee</h2>\n            <form onSubmit={handleAddEmployee}>\n              <label>Group</label>\n              <input\n                type=\"text\"\n                name=\"group\"\n                value={newEmployee.group}\n                onChange={handleInputChange}\n              />\n              <label>Name</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={newEmployee.name}\n                onChange={handleInputChange}\n              />\n              <label>Phone</label>\n              <input\n                type=\"text\"\n                name=\"phone\"\n                value={newEmployee.phone}\n                onChange={handleInputChange}\n              />\n              <label>SAP</label>\n              <input\n                type=\"text\"\n                name=\"sap\"\n                value={newEmployee.sap}\n                onChange={handleInputChange}\n              />\n              <button type=\"submit\">Add Employee</button>\n              <button type=\"button\" onClick={() => setIsModalOpen(false)}>\n                Cancel\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EmployeeManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}