{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = ({\n  weekDates\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalData, setModalData] = useState({\n    employeeId: null,\n    date: null,\n    startTime: \"\",\n    endTime: \"\",\n    nextDay: false,\n    isHoliday: false,\n    totalTime: 0,\n    nightShiftHours: 0,\n    holidayTime: 0,\n    normalTime: 0\n  });\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), snapshot => {\n        const employeeData = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe; // Cleanup on unmount\n    };\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, snapshot => {\n        const updatedTimesheetData = {};\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe; // Cleanup on unmount\n    };\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n  const handleSetTime = (employeeId, date) => {\n    var _timesheetData$employ;\n    const existingData = ((_timesheetData$employ = timesheetData[employeeId]) === null || _timesheetData$employ === void 0 ? void 0 : _timesheetData$employ[date]) || {};\n    setModalData({\n      employeeId,\n      date,\n      startTime: existingData.startTime || \"\",\n      endTime: existingData.endTime || \"\",\n      nextDay: existingData.nextDay || false,\n      isHoliday: existingData.isHoliday || false,\n      totalTime: existingData.totalTime || 0,\n      nightShiftHours: existingData.nightShift || 0,\n      holidayTime: existingData.holidayTime || 0,\n      normalTime: existingData.normalTime || 0\n    });\n  };\n  const handleStartTimeChange = event => {\n    setModalData(prevState => ({\n      ...prevState,\n      startTime: event.target.value\n    }));\n    calculateTimes(event.target.value, modalData.endTime, modalData.nextDay, modalData.isHoliday);\n  };\n  const handleEndTimeChange = event => {\n    setModalData(prevState => ({\n      ...prevState,\n      endTime: event.target.value\n    }));\n    calculateTimes(modalData.startTime, event.target.value, modalData.nextDay, modalData.isHoliday);\n  };\n  const handleNextDayToggle = () => {\n    setModalData(prevState => ({\n      ...prevState,\n      nextDay: !prevState.nextDay\n    }));\n    calculateTimes(modalData.startTime, modalData.endTime, !modalData.nextDay, modalData.isHoliday);\n  };\n  const handleHolidayToggle = () => {\n    setModalData(prevState => ({\n      ...prevState,\n      isHoliday: !prevState.isHoliday\n    }));\n    if (!modalData.isHoliday) {\n      calculateTimes(modalData.startTime, modalData.endTime, modalData.nextDay, false);\n    } else {\n      setModalData(prevState => ({\n        ...prevState,\n        holidayTime: modalData.totalTime,\n        normalTime: 0,\n        nightShiftHours: 0,\n        totalTime: 0\n      }));\n    }\n  };\n  const calculateTimes = (start, end, isNextDay, isHoliday) => {\n    if (!start || !end) return;\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0);\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1);\n    nightShiftEnd.setHours(6, 0, 0);\n    let nightShiftHours = 0;\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n    const normalTime = isHoliday ? 0 : totalTimeInHours - nightShiftHours;\n    const holidayTime = isHoliday ? totalTimeInHours : 0;\n    setModalData(prevState => ({\n      ...prevState,\n      totalTime: totalTimeInHours.toFixed(2),\n      nightShiftHours: nightShiftHours.toFixed(2),\n      normalTime: normalTime.toFixed(2),\n      holidayTime: holidayTime.toFixed(2)\n    }));\n  };\n  const saveTimesheetDataToFirebase = async () => {\n    const {\n      employeeId,\n      date,\n      startTime,\n      endTime,\n      totalTime,\n      nightShiftHours,\n      holidayTime,\n      normalTime,\n      isHoliday\n    } = modalData;\n    try {\n      var _await$getDoc$data;\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId);\n      const timesheetData = ((_await$getDoc$data = (await getDoc(timesheetDocRef)).data()) === null || _await$getDoc$data === void 0 ? void 0 : _await$getDoc$data.hours) || {};\n      timesheetData[date] = {\n        startTime,\n        endTime,\n        totalTime: parseFloat(totalTime),\n        nightShift: parseFloat(nightShiftHours),\n        holidayTime: parseFloat(holidayTime),\n        normalTime: parseFloat(normalTime),\n        isHoliday\n      };\n      await setDoc(timesheetDocRef, {\n        hours: timesheetData\n      });\n      setTimesheetData(prevData => {\n        const newData = {\n          ...prevData\n        };\n        newData[employeeId] = {\n          ...newData[employeeId],\n          [date]: {\n            startTime,\n            endTime,\n            totalTime,\n            nightShift: nightShiftHours,\n            holidayTime,\n            normalTime,\n            isHoliday\n          }\n        };\n        return newData;\n      });\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n  const handleInputChange = () => {\n    saveTimesheetDataToFirebase();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Shift Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), weekDates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              rowSpan: 4,\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Normal Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), weekDates.map(date => {\n              var _timesheetData$employ2, _timesheetData$employ3;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_timesheetData$employ2 = timesheetData[employee.id]) === null || _timesheetData$employ2 === void 0 ? void 0 : (_timesheetData$employ3 = _timesheetData$employ2[date]) === null || _timesheetData$employ3 === void 0 ? void 0 : _timesheetData$employ3.normalTime) || /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 23\n                }, this)\n              }, date, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Night Shift\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), weekDates.map(date => {\n              var _timesheetData$employ4, _timesheetData$employ5;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_timesheetData$employ4 = timesheetData[employee.id]) === null || _timesheetData$employ4 === void 0 ? void 0 : (_timesheetData$employ5 = _timesheetData$employ4[date]) === null || _timesheetData$employ5 === void 0 ? void 0 : _timesheetData$employ5.nightShift) || /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 23\n                }, this)\n              }, date, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Holiday Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), weekDates.map(date => {\n              var _timesheetData$employ6, _timesheetData$employ7;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_timesheetData$employ6 = timesheetData[employee.id]) === null || _timesheetData$employ6 === void 0 ? void 0 : (_timesheetData$employ7 = _timesheetData$employ6[date]) === null || _timesheetData$employ7 === void 0 ? void 0 : _timesheetData$employ7.holidayTime) || /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 23\n                }, this)\n              }, date, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), modalData.employeeId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Add Time for \", modalData.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: modalData.startTime,\n          onChange: handleStartTimeChange,\n          placeholder: \"Start Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: modalData.endTime,\n          onChange: handleEndTimeChange,\n          placeholder: \"End Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Next Day\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: modalData.nextDay,\n          onChange: handleNextDayToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Holiday\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: modalData.isHoliday,\n          onChange: handleHolidayToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleInputChange(modalData.employeeId, modalData.date, modalData.startTime, modalData.endTime, modalData.totalTime, modalData.nightShiftHours, modalData.holidayTime),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalData({\n            ...modalData,\n            employeeId: null\n          }),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"8+s+w/0ibj/MHx0EpjyGV/Ufdio=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["React","useState","useEffect","collection","onSnapshot","doc","setDoc","getDoc","db","jsxDEV","_jsxDEV","TimesheetList","weekDates","_s","employees","setEmployees","timesheetData","setTimesheetData","modalData","setModalData","employeeId","date","startTime","endTime","nextDay","isHoliday","totalTime","nightShiftHours","holidayTime","normalTime","fetchEmployees","unsubscribe","snapshot","employeeData","docs","map","id","data","fetchTimesheetData","timesheetDataRef","updatedTimesheetData","forEach","hours","record","Object","entries","parseFloat","nightShift","Boolean","handleSetTime","_timesheetData$employ","existingData","handleStartTimeChange","event","prevState","target","value","calculateTimes","handleEndTimeChange","handleNextDayToggle","handleHolidayToggle","start","end","isNextDay","startHours","startMinutes","split","Number","endHours","endMinutes","startDate","Date","setHours","endDate","setDate","getDate","totalTimeInHours","nightShiftStart","nightShiftEnd","nightShiftStartTime","nightShiftEndTime","toFixed","saveTimesheetDataToFirebase","_await$getDoc$data","timesheetDocRef","prevData","newData","error","console","handleInputChange","children","border","fileName","_jsxFileName","lineNumber","columnNumber","employee","Fragment","rowSpan","name","_timesheetData$employ2","_timesheetData$employ3","onClick","_timesheetData$employ4","_timesheetData$employ5","_timesheetData$employ6","_timesheetData$employ7","type","onChange","placeholder","checked","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\n\nconst TimesheetList = ({ weekDates }) => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalData, setModalData] = useState({\n    employeeId: null,\n    date: null,\n    startTime: \"\",\n    endTime: \"\",\n    nextDay: false,\n    isHoliday: false,\n    totalTime: 0,\n    nightShiftHours: 0,\n    holidayTime: 0,\n    normalTime: 0,\n  });\n\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), (snapshot) => {\n        const employeeData = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n      });\n\n      return unsubscribe; // Cleanup on unmount\n    };\n\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n\n      const unsubscribe = onSnapshot(timesheetDataRef, (snapshot) => {\n        const updatedTimesheetData = {};\n\n        snapshot.forEach((doc) => {\n          const data = doc.data();\n          const employeeId = doc.id;\n\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0,\n              };\n            }\n          }\n        });\n\n        setTimesheetData(updatedTimesheetData);\n      });\n\n      return unsubscribe; // Cleanup on unmount\n    };\n\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n\n  const handleSetTime = (employeeId, date) => {\n    const existingData = timesheetData[employeeId]?.[date] || {};\n    setModalData({\n      employeeId,\n      date,\n      startTime: existingData.startTime || \"\",\n      endTime: existingData.endTime || \"\",\n      nextDay: existingData.nextDay || false,\n      isHoliday: existingData.isHoliday || false,\n      totalTime: existingData.totalTime || 0,\n      nightShiftHours: existingData.nightShift || 0,\n      holidayTime: existingData.holidayTime || 0,\n      normalTime: existingData.normalTime || 0,\n    });\n  };\n\n  const handleStartTimeChange = (event) => {\n    setModalData((prevState) => ({\n      ...prevState,\n      startTime: event.target.value,\n    }));\n    calculateTimes(event.target.value, modalData.endTime, modalData.nextDay, modalData.isHoliday);\n  };\n\n  const handleEndTimeChange = (event) => {\n    setModalData((prevState) => ({\n      ...prevState,\n      endTime: event.target.value,\n    }));\n    calculateTimes(modalData.startTime, event.target.value, modalData.nextDay, modalData.isHoliday);\n  };\n\n  const handleNextDayToggle = () => {\n    setModalData((prevState) => ({\n      ...prevState,\n      nextDay: !prevState.nextDay,\n    }));\n    calculateTimes(modalData.startTime, modalData.endTime, !modalData.nextDay, modalData.isHoliday);\n  };\n\n  const handleHolidayToggle = () => {\n    setModalData((prevState) => ({\n      ...prevState,\n      isHoliday: !prevState.isHoliday,\n    }));\n\n    if (!modalData.isHoliday) {\n      calculateTimes(modalData.startTime, modalData.endTime, modalData.nextDay, false);\n    } else {\n      setModalData((prevState) => ({\n        ...prevState,\n        holidayTime: modalData.totalTime,\n        normalTime: 0,\n        nightShiftHours: 0,\n        totalTime: 0,\n      }));\n    }\n  };\n\n  const calculateTimes = (start, end, isNextDay, isHoliday) => {\n    if (!start || !end) return;\n\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);\n\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0);\n\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1);\n    nightShiftEnd.setHours(6, 0, 0);\n\n    let nightShiftHours = 0;\n\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n\n    const normalTime = isHoliday ? 0 : totalTimeInHours - nightShiftHours;\n    const holidayTime = isHoliday ? totalTimeInHours : 0;\n\n    setModalData((prevState) => ({\n      ...prevState,\n      totalTime: totalTimeInHours.toFixed(2),\n      nightShiftHours: nightShiftHours.toFixed(2),\n      normalTime: normalTime.toFixed(2),\n      holidayTime: holidayTime.toFixed(2),\n    }));\n  };\n\n  const saveTimesheetDataToFirebase = async () => {\n    const { employeeId, date, startTime, endTime, totalTime, nightShiftHours, holidayTime, normalTime, isHoliday } = modalData;\n\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId);\n      const timesheetData = (await getDoc(timesheetDocRef)).data()?.hours || {};\n\n      timesheetData[date] = {\n        startTime,\n        endTime,\n        totalTime: parseFloat(totalTime),\n        nightShift: parseFloat(nightShiftHours),\n        holidayTime: parseFloat(holidayTime),\n        normalTime: parseFloat(normalTime),\n        isHoliday,\n      };\n\n      await setDoc(timesheetDocRef, { hours: timesheetData });\n      setTimesheetData((prevData) => {\n        const newData = { ...prevData };\n        newData[employeeId] = {\n          ...newData[employeeId],\n          [date]: {\n            startTime,\n            endTime,\n            totalTime,\n            nightShift: nightShiftHours,\n            holidayTime,\n            normalTime,\n            isHoliday,\n          },\n        };\n        return newData;\n      });\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  const handleInputChange = () => {\n    saveTimesheetDataToFirebase();\n  };\n\n  return (\n    <div>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Shift Type</th>\n            {weekDates.map((date) => (\n              <th key={date}>{date}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => (\n            <React.Fragment key={employee.id}>\n              <tr>\n                <td rowSpan={4}>{employee.name}</td>\n                <td>Normal Time</td>\n                {weekDates.map((date) => (\n                  <td key={date}>\n                    {timesheetData[employee.id]?.[date]?.normalTime || (\n                      <button onClick={() => handleSetTime(employee.id, date)}>Add</button>\n                    )}\n                  </td>\n                ))}\n              </tr>\n              <tr>\n                <td>Night Shift</td>\n                {weekDates.map((date) => (\n                  <td key={date}>\n                    {timesheetData[employee.id]?.[date]?.nightShift || (\n                      <button onClick={() => handleSetTime(employee.id, date)}>Add</button>\n                    )}\n                  </td>\n                ))}\n              </tr>\n              <tr>\n                <td>Holiday Time</td>\n                {weekDates.map((date) => (\n                  <td key={date}>\n                    {timesheetData[employee.id]?.[date]?.holidayTime || (\n                      <button onClick={() => handleSetTime(employee.id, date)}>Add</button>\n                    )}\n                  </td>\n                ))}\n              </tr>\n            </React.Fragment>\n          ))}\n        </tbody>\n      </table>\n\n      {modalData.employeeId && (\n        <div>\n          <h3>Add Time for {modalData.date}</h3>\n          <div>\n            <input\n              type=\"time\"\n              value={modalData.startTime}\n              onChange={handleStartTimeChange}\n              placeholder=\"Start Time\"\n            />\n            <input\n              type=\"time\"\n              value={modalData.endTime}\n              onChange={handleEndTimeChange}\n              placeholder=\"End Time\"\n            />\n          </div>\n          <label>\n            Next Day\n            <input type=\"checkbox\" checked={modalData.nextDay} onChange={handleNextDayToggle} />\n          </label>\n          <label>\n            Holiday\n            <input type=\"checkbox\" checked={modalData.isHoliday} onChange={handleHolidayToggle} />\n          </label>\n          <div>\n            <button\n              onClick={() =>\n                handleInputChange(\n                  modalData.employeeId,\n                  modalData.date,\n                  modalData.startTime,\n                  modalData.endTime,\n                  modalData.totalTime,\n                  modalData.nightShiftHours,\n                  modalData.holidayTime\n                )\n              }\n            >\n              Save\n            </button>\n            <button onClick={() => setModalData({ ...modalData, employeeId: null })}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}