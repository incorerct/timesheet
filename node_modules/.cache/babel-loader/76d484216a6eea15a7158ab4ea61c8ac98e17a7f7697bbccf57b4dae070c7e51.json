{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { collection, getDocs, updateDoc, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = ({\n  weekDates\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [totalTime, setTotalTime] = useState(0);\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n    fetchEmployees();\n  }, []);\n  useEffect(() => {\n    if (employees.length > 0 && weekDates.length > 0) {\n      const initialTimesheetData = employees.reduce((acc, employee) => {\n        acc[employee.id] = weekDates.reduce((weekAcc, date) => {\n          weekAcc[date] = {\n            startTime: \"\",\n            endTime: \"\",\n            totalTime: 0\n          };\n          return weekAcc;\n        }, {});\n        return acc;\n      }, {});\n      setTimesheetData(initialTimesheetData);\n      fetchTimesheetData();\n    }\n  }, [employees, weekDates]);\n  const calculateTotalTime = (start, end) => {\n    const startParts = start.split(\":\").map(Number);\n    const endParts = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startParts[0], startParts[1], 0);\n    const endDate = new Date();\n    endDate.setHours(endParts[0], endParts[1], 0);\n    if (endDate < startDate) {\n      endDate.setDate(endDate.getDate() + 1);\n    }\n    const diff = (endDate - startDate) / (1000 * 60 * 60);\n    setTotalTime(diff.toFixed(2));\n  };\n  const handleInputChange = async (employeeId, date, start, end, totalTime) => {\n    setTimesheetData(prevData => {\n      const newData = {\n        ...prevData\n      };\n      newData[employeeId][date] = {\n        startTime: start,\n        endTime: end,\n        totalTime\n      };\n      return newData;\n    });\n    await saveTimesheetDataToFirebase(employeeId, date, start, end, totalTime);\n  };\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime) => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId);\n      const timesheetData = await getDoc(timesheetDocRef);\n      let updatedData = {};\n      if (timesheetData.exists()) {\n        updatedData = timesheetData.data().hours;\n        updatedData[date] = {\n          startTime: start,\n          endTime: end,\n          totalTime\n        };\n      } else {\n        updatedData = {\n          [date]: {\n            startTime: start,\n            endTime: end,\n            totalTime\n          }\n        };\n      }\n      await setDoc(timesheetDocRef, {\n        hours: updatedData\n      });\n      fetchTimesheetData();\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n  const fetchTimesheetData = async () => {\n    try {\n      const querySnapshot = await getDocs(collection(db, \"timesheets\"));\n      const updatedTimesheetData = {};\n      querySnapshot.forEach(doc => {\n        const data = doc.data();\n        updatedTimesheetData[doc.id] = data.hours;\n      });\n      setTimesheetData(updatedTimesheetData);\n    } catch (error) {\n      console.error(\"Error fetching timesheet data:\", error);\n    }\n  };\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setStartTime(\"\");\n    setEndTime(\"\");\n    setTotalTime(0);\n  };\n  const calculateWeeklyTotal = employeeId => {\n    return weekDates.reduce((total, date) => {\n      var _timesheetData$employ, _timesheetData$employ2;\n      return total + (((_timesheetData$employ = timesheetData[employeeId]) === null || _timesheetData$employ === void 0 ? void 0 : (_timesheetData$employ2 = _timesheetData$employ[date]) === null || _timesheetData$employ2 === void 0 ? void 0 : _timesheetData$employ2.totalTime) || 0);\n    }, 0).toFixed(2);\n  };\n  const calculateMonthlyTotal = employeeId => {\n    const firstOfMonth = new Date(weekDates[0]);\n    firstOfMonth.setDate(1);\n    const allDates = [];\n    for (let date = new Date(firstOfMonth); date <= new Date(weekDates[weekDates.length - 1]); date.setDate(date.getDate() + 1)) {\n      allDates.push(date.toISOString().split('T')[0]);\n    }\n    return allDates.reduce((total, date) => {\n      var _timesheetData$employ3, _timesheetData$employ4;\n      return total + (((_timesheetData$employ3 = timesheetData[employeeId]) === null || _timesheetData$employ3 === void 0 ? void 0 : (_timesheetData$employ4 = _timesheetData$employ3[date]) === null || _timesheetData$employ4 === void 0 ? void 0 : _timesheetData$employ4.totalTime) || 0);\n    }, 0).toFixed(2);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), weekDates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Weekly Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Monthly Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), weekDates.map(date => {\n            var _timesheetData$employ5;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSetTime(employee.id, date),\n                children: \"Set Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: ((_timesheetData$employ5 = timesheetData[employee.id]) === null || _timesheetData$employ5 === void 0 ? void 0 : _timesheetData$employ5[date]) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: `From ${timesheetData[employee.id][date].startTime} - ${timesheetData[employee.id][date].endTime}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: `${timesheetData[employee.id][date].totalTime} hours`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [calculateWeeklyTotal(employee.id), \" hours\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [calculateMonthlyTotal(employee.id), \" hours\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Set Work Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Start Time (24hr format):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: e => {\n            setStartTime(e.target.value);\n            if (endTime) calculateTotalTime(e.target.value, endTime);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"End Time (24hr format):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: endTime,\n          onChange: e => {\n            setEndTime(e.target.value);\n            if (startTime) calculateTotalTime(startTime, e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Total Time: \", totalTime, \" hours\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleInputChange(selectedEmployee, selectedDate, startTime, endTime, totalTime);\n            handleCloseModal();\n          },\n          children: \"Save Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCloseModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"Yh7U4J7bIH0DcIv4ctcz0YrlIEo=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["React","useState","useEffect","collection","getDocs","updateDoc","doc","setDoc","getDoc","db","jsxDEV","_jsxDEV","TimesheetList","weekDates","_s","employees","setEmployees","timesheetData","setTimesheetData","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","totalTime","setTotalTime","fetchEmployees","querySnapshot","employeeData","docs","map","id","data","error","console","length","initialTimesheetData","reduce","acc","employee","weekAcc","date","fetchTimesheetData","calculateTotalTime","start","end","startParts","split","Number","endParts","startDate","Date","setHours","endDate","setDate","getDate","diff","toFixed","handleInputChange","employeeId","prevData","newData","saveTimesheetDataToFirebase","timesheetDocRef","updatedData","exists","hours","updatedTimesheetData","forEach","handleSetTime","handleCloseModal","calculateWeeklyTotal","total","_timesheetData$employ","_timesheetData$employ2","calculateMonthlyTotal","firstOfMonth","allDates","push","toISOString","_timesheetData$employ3","_timesheetData$employ4","children","border","fileName","_jsxFileName","lineNumber","columnNumber","name","_timesheetData$employ5","onClick","className","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { collection, getDocs, updateDoc, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\n\nconst TimesheetList = ({ weekDates }) => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [totalTime, setTotalTime] = useState(0);\n\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n    fetchEmployees();\n  }, []);\n\n  useEffect(() => {\n    if (employees.length > 0 && weekDates.length > 0) {\n      const initialTimesheetData = employees.reduce((acc, employee) => {\n        acc[employee.id] = weekDates.reduce((weekAcc, date) => {\n          weekAcc[date] = { startTime: \"\", endTime: \"\", totalTime: 0 };\n          return weekAcc;\n        }, {});\n        return acc;\n      }, {});\n      setTimesheetData(initialTimesheetData);\n      fetchTimesheetData();\n    }\n  }, [employees, weekDates]);\n\n  const calculateTotalTime = (start, end) => {\n    const startParts = start.split(\":\").map(Number);\n    const endParts = end.split(\":\").map(Number);\n\n    const startDate = new Date();\n    startDate.setHours(startParts[0], startParts[1], 0);\n\n    const endDate = new Date();\n    endDate.setHours(endParts[0], endParts[1], 0);\n\n    if (endDate < startDate) {\n      endDate.setDate(endDate.getDate() + 1);\n    }\n\n    const diff = (endDate - startDate) / (1000 * 60 * 60);\n    setTotalTime(diff.toFixed(2));\n  };\n\n  const handleInputChange = async (employeeId, date, start, end, totalTime) => {\n    setTimesheetData((prevData) => {\n      const newData = { ...prevData };\n      newData[employeeId][date] = { startTime: start, endTime: end, totalTime };\n      return newData;\n    });\n\n    await saveTimesheetDataToFirebase(employeeId, date, start, end, totalTime);\n  };\n\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime) => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId);\n      const timesheetData = await getDoc(timesheetDocRef);\n\n      let updatedData = {};\n\n      if (timesheetData.exists()) {\n        updatedData = timesheetData.data().hours;\n        updatedData[date] = { startTime: start, endTime: end, totalTime };\n      } else {\n        updatedData = { [date]: { startTime: start, endTime: end, totalTime } };\n      }\n\n      await setDoc(timesheetDocRef, { hours: updatedData });\n      fetchTimesheetData();\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  const fetchTimesheetData = async () => {\n    try {\n      const querySnapshot = await getDocs(collection(db, \"timesheets\"));\n      const updatedTimesheetData = {};\n\n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        updatedTimesheetData[doc.id] = data.hours;\n      });\n\n      setTimesheetData(updatedTimesheetData);\n    } catch (error) {\n      console.error(\"Error fetching timesheet data:\", error);\n    }\n  };\n\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setStartTime(\"\");\n    setEndTime(\"\");\n    setTotalTime(0);\n  };\n\n  const calculateWeeklyTotal = (employeeId) => {\n    return weekDates.reduce((total, date) => {\n      return total + (timesheetData[employeeId]?.[date]?.totalTime || 0);\n    }, 0).toFixed(2);\n  };\n  \n\n  const calculateMonthlyTotal = (employeeId) => {\n    const firstOfMonth = new Date(weekDates[0]);\n    firstOfMonth.setDate(1);\n    \n    const allDates = [];\n    for (let date = new Date(firstOfMonth); date <= new Date(weekDates[weekDates.length - 1]); date.setDate(date.getDate() + 1)) {\n      allDates.push(date.toISOString().split('T')[0]);\n    }\n    \n    return allDates.reduce((total, date) => {\n      return total + (timesheetData[employeeId]?.[date]?.totalTime || 0);\n    }, 0).toFixed(2);\n  };\n  \n\n  return (\n    <div>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Employee</th>\n            {weekDates.map((date) => (\n              <th key={date}>{date}</th>\n            ))}\n            <th>Weekly Total</th>\n            <th>Monthly Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => (\n            <tr key={employee.id}>\n              <td>{employee.name}</td>\n              {weekDates.map((date) => (\n                <td key={date}>\n                  <button onClick={() => handleSetTime(employee.id, date)}>Set Time</button>\n                  <div>\n                    {timesheetData[employee.id]?.[date] && (\n                      <div>\n                        <span>{`From ${timesheetData[employee.id][date].startTime} - ${timesheetData[employee.id][date].endTime}`}</span>\n                        <br />\n                        <strong>{`${timesheetData[employee.id][date].totalTime} hours`}</strong>\n                      </div>\n                    )}\n                  </div>\n                </td>\n              ))}\n              <td>{calculateWeeklyTotal(employee.id)} hours</td>\n              <td>{calculateMonthlyTotal(employee.id)} hours</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {modalOpen && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h3>Set Work Hours</h3>\n            <label>Start Time (24hr format):</label>\n            <input\n              type=\"time\"\n              value={startTime}\n              onChange={(e) => {\n                setStartTime(e.target.value);\n                if (endTime) calculateTotalTime(e.target.value, endTime);\n              }}\n            />\n            <br />\n            <label>End Time (24hr format):</label>\n            <input\n              type=\"time\"\n              value={endTime}\n              onChange={(e) => {\n                setEndTime(e.target.value);\n                if (startTime) calculateTotalTime(startTime, e.target.value);\n              }}\n            />\n            <br />\n            <div>\n              <strong>Total Time: {totalTime} hours</strong>\n            </div>\n            <button\n              onClick={() => {\n                handleInputChange(selectedEmployee, selectedDate, startTime, endTime, totalTime);\n                handleCloseModal();\n              }}\n            >\n              Save Time\n            </button>\n            <button onClick={handleCloseModal}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}