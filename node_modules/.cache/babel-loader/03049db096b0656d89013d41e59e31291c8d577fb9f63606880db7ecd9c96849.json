{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n  const [currentWeekStartDate, setCurrentWeekStartDate] = useState(null);\n\n  // Helper function to get the start of the week (Monday)\n  const getStartOfWeek = date => {\n    const dayOfWeek = date.getDay();\n    const diff = date.getDate() - dayOfWeek + (dayOfWeek === 0 ? -6 : 1); // Get Monday\n    const startOfWeek = new Date(date.setDate(diff));\n    startOfWeek.setHours(0, 0, 0, 0);\n    return startOfWeek;\n  };\n\n  // Generate the week days based on the given start date\n  const generateWeekDays = startDate => {\n    const days = [];\n    const currentDate = new Date(startDate);\n    for (let i = 0; i < 7; i++) {\n      const day = new Date(currentDate);\n      day.setDate(currentDate.getDate() + i);\n      days.push(`${day.getMonth() + 1}-${day.getDate() < 10 ? '0' + day.getDate() : day.getDate()}`);\n    }\n    return days;\n  };\n  const currentDate = new Date();\n  const currentWeekStart = getStartOfWeek(currentDate);\n  const [weekDays, setWeekDays] = useState(generateWeekDays(currentWeekStart));\n\n  // Handle navigation to the previous week\n  const handlePreviousWeek = () => {\n    const previousWeekStart = new Date(currentWeekStart);\n    previousWeekStart.setDate(currentWeekStart.getDate() - 7);\n    setCurrentWeekStartDate(previousWeekStart);\n    setWeekDays(generateWeekDays(previousWeekStart));\n  };\n\n  // Handle navigation to the next week\n  const handleNextWeek = () => {\n    const nextWeekStart = new Date(currentWeekStart);\n    nextWeekStart.setDate(currentWeekStart.getDate() + 7);\n    setCurrentWeekStartDate(nextWeekStart);\n    setWeekDays(generateWeekDays(nextWeekStart));\n  };\n\n  // Fetch employee and timesheet data from Firestore\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), snapshot => {\n        const employeeData = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe;\n    };\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, snapshot => {\n        const updatedTimesheetData = {};\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe;\n    };\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n\n  // Handle the time settings for a specific employee and date\n  const handleSetTime = (employeeId, date) => {\n    var _timesheetData$employ, _timesheetData$employ2, _timesheetData$employ3, _timesheetData$employ4, _timesheetData$employ5, _timesheetData$employ6;\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setStartTime(((_timesheetData$employ = timesheetData[employeeId]) === null || _timesheetData$employ === void 0 ? void 0 : (_timesheetData$employ2 = _timesheetData$employ[date]) === null || _timesheetData$employ2 === void 0 ? void 0 : _timesheetData$employ2.startTime) || \"\");\n    setEndTime(((_timesheetData$employ3 = timesheetData[employeeId]) === null || _timesheetData$employ3 === void 0 ? void 0 : (_timesheetData$employ4 = _timesheetData$employ3[date]) === null || _timesheetData$employ4 === void 0 ? void 0 : _timesheetData$employ4.endTime) || \"\");\n    setIsHoliday(((_timesheetData$employ5 = timesheetData[employeeId]) === null || _timesheetData$employ5 === void 0 ? void 0 : (_timesheetData$employ6 = _timesheetData$employ5[date]) === null || _timesheetData$employ6 === void 0 ? void 0 : _timesheetData$employ6.isHoliday) || false);\n    setModalOpen(true);\n  };\n\n  // Calculate monthly totals for an employee\n  const calculateWeeklyTotal = employeeId => {\n    let weeklyTotal = {\n      normalTime: 0,\n      nightShift: 0,\n      holidayTime: 0,\n      totalTime: 0\n    };\n    weekDays.forEach(date => {\n      var _timesheetData$employ7;\n      const data = (_timesheetData$employ7 = timesheetData[employeeId]) === null || _timesheetData$employ7 === void 0 ? void 0 : _timesheetData$employ7[date];\n      if (data) {\n        weeklyTotal.normalTime += data.normalTime || 0;\n        weeklyTotal.nightShift += data.nightShift || 0;\n        weeklyTotal.holidayTime += data.holidayTime || 0;\n        weeklyTotal.totalTime += data.totalTime || 0;\n      }\n    });\n    return weeklyTotal;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePreviousWeek,\n      children: \"Previous Week\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextWeek,\n      children: \"Next Week\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Shift Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), weekDays.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Weekly Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => {\n          const weeklyTotal = calculateWeeklyTotal(employee.id);\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                rowSpan: 4,\n                children: employee.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Normal Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this), weekDays.map(date => {\n                var _timesheetData$employ8, _timesheetData$employ9, _timesheetData$employ10, _timesheetData$employ11;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ8 = timesheetData[employee.id]) === null || _timesheetData$employ8 === void 0 ? void 0 : (_timesheetData$employ9 = _timesheetData$employ8[date]) === null || _timesheetData$employ9 === void 0 ? void 0 : _timesheetData$employ9.normalTime) === 0 ? \"0 hrs\" : (_timesheetData$employ10 = timesheetData[employee.id]) !== null && _timesheetData$employ10 !== void 0 && (_timesheetData$employ11 = _timesheetData$employ10[date]) !== null && _timesheetData$employ11 !== void 0 && _timesheetData$employ11.normalTime ? `${timesheetData[employee.id][date].normalTime} hrs` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: weeklyTotal.normalTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Night Shift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), weekDays.map(date => {\n                var _timesheetData$employ12, _timesheetData$employ13, _timesheetData$employ14, _timesheetData$employ15;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ12 = timesheetData[employee.id]) === null || _timesheetData$employ12 === void 0 ? void 0 : (_timesheetData$employ13 = _timesheetData$employ12[date]) === null || _timesheetData$employ13 === void 0 ? void 0 : _timesheetData$employ13.nightShift) === 0 ? \"0 hrs\" : (_timesheetData$employ14 = timesheetData[employee.id]) !== null && _timesheetData$employ14 !== void 0 && (_timesheetData$employ15 = _timesheetData$employ14[date]) !== null && _timesheetData$employ15 !== void 0 && _timesheetData$employ15.nightShift ? `${timesheetData[employee.id][date].nightShift} hrs` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: weeklyTotal.nightShift\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Holiday Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this), weekDays.map(date => {\n                var _timesheetData$employ16, _timesheetData$employ17, _timesheetData$employ18, _timesheetData$employ19;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ16 = timesheetData[employee.id]) === null || _timesheetData$employ16 === void 0 ? void 0 : (_timesheetData$employ17 = _timesheetData$employ16[date]) === null || _timesheetData$employ17 === void 0 ? void 0 : _timesheetData$employ17.holidayTime) === 0 ? \"0 hrs\" : (_timesheetData$employ18 = timesheetData[employee.id]) !== null && _timesheetData$employ18 !== void 0 && (_timesheetData$employ19 = _timesheetData$employ18[date]) !== null && _timesheetData$employ19 !== void 0 && _timesheetData$employ19.holidayTime ? `${timesheetData[employee.id][date].holidayTime} hrs` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: weeklyTotal.holidayTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Total Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), weekDays.map(date => {\n                var _timesheetData$employ20, _timesheetData$employ21, _timesheetData$employ22, _timesheetData$employ23;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ20 = timesheetData[employee.id]) === null || _timesheetData$employ20 === void 0 ? void 0 : (_timesheetData$employ21 = _timesheetData$employ20[date]) === null || _timesheetData$employ21 === void 0 ? void 0 : _timesheetData$employ21.totalTime) === 0 ? \"0 hrs\" : (_timesheetData$employ22 = timesheetData[employee.id]) !== null && _timesheetData$employ22 !== void 0 && (_timesheetData$employ23 = _timesheetData$employ22[date]) !== null && _timesheetData$employ23 !== void 0 && _timesheetData$employ23.totalTime ? `${timesheetData[employee.id][date].totalTime} hrs` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: weeklyTotal.totalTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Set Time for \", selectedEmployee]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: startTime,\n        onChange: e => setStartTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: endTime,\n        onChange: e => setEndTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Next Day:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: nextDay,\n        onChange: () => setNextDay(!nextDay)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Holiday:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isHoliday,\n        onChange: () => setIsHoliday(!isHoliday)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveTimesheetDataToFirebase,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"ZdtAjR2U7dJk4cSRNqoTI30MVGs=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["React","useState","useEffect","collection","onSnapshot","doc","setDoc","getDoc","db","jsxDEV","_jsxDEV","TimesheetList","_s","employees","setEmployees","timesheetData","setTimesheetData","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","nextDay","setNextDay","isHoliday","setIsHoliday","totalTime","setTotalTime","nightShiftHours","setNightShiftHours","holidayTime","setHolidayTime","normalTime","setNormalTime","currentWeekStartDate","setCurrentWeekStartDate","getStartOfWeek","date","dayOfWeek","getDay","diff","getDate","startOfWeek","Date","setDate","setHours","generateWeekDays","startDate","days","currentDate","i","day","push","getMonth","currentWeekStart","weekDays","setWeekDays","handlePreviousWeek","previousWeekStart","handleNextWeek","nextWeekStart","fetchEmployees","unsubscribe","snapshot","employeeData","docs","map","id","data","fetchTimesheetData","timesheetDataRef","updatedTimesheetData","forEach","employeeId","hours","record","Object","entries","parseFloat","nightShift","Boolean","handleSetTime","_timesheetData$employ","_timesheetData$employ2","_timesheetData$employ3","_timesheetData$employ4","_timesheetData$employ5","_timesheetData$employ6","calculateWeeklyTotal","weeklyTotal","_timesheetData$employ7","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","border","employee","Fragment","rowSpan","name","_timesheetData$employ8","_timesheetData$employ9","_timesheetData$employ10","_timesheetData$employ11","_timesheetData$employ12","_timesheetData$employ13","_timesheetData$employ14","_timesheetData$employ15","_timesheetData$employ16","_timesheetData$employ17","_timesheetData$employ18","_timesheetData$employ19","_timesheetData$employ20","_timesheetData$employ21","_timesheetData$employ22","_timesheetData$employ23","type","value","onChange","e","target","checked","saveTimesheetDataToFirebase","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\n\nconst TimesheetList = () => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n  const [currentWeekStartDate, setCurrentWeekStartDate] = useState(null);\n\n  // Helper function to get the start of the week (Monday)\n  const getStartOfWeek = (date) => {\n    const dayOfWeek = date.getDay();\n    const diff = date.getDate() - dayOfWeek + (dayOfWeek === 0 ? -6 : 1); // Get Monday\n    const startOfWeek = new Date(date.setDate(diff));\n    startOfWeek.setHours(0, 0, 0, 0);\n    return startOfWeek;\n  };\n\n  // Generate the week days based on the given start date\n  const generateWeekDays = (startDate) => {\n    const days = [];\n    const currentDate = new Date(startDate);\n    for (let i = 0; i < 7; i++) {\n      const day = new Date(currentDate);\n      day.setDate(currentDate.getDate() + i);\n      days.push(`${day.getMonth() + 1}-${day.getDate() < 10 ? '0' + day.getDate() : day.getDate()}`);\n    }\n    return days;\n  };\n\n  const currentDate = new Date();\n  const currentWeekStart = getStartOfWeek(currentDate);\n  const [weekDays, setWeekDays] = useState(generateWeekDays(currentWeekStart));\n\n  // Handle navigation to the previous week\n  const handlePreviousWeek = () => {\n    const previousWeekStart = new Date(currentWeekStart);\n    previousWeekStart.setDate(currentWeekStart.getDate() - 7);\n    setCurrentWeekStartDate(previousWeekStart);\n    setWeekDays(generateWeekDays(previousWeekStart));\n  };\n\n  // Handle navigation to the next week\n  const handleNextWeek = () => {\n    const nextWeekStart = new Date(currentWeekStart);\n    nextWeekStart.setDate(currentWeekStart.getDate() + 7);\n    setCurrentWeekStartDate(nextWeekStart);\n    setWeekDays(generateWeekDays(nextWeekStart));\n  };\n\n  // Fetch employee and timesheet data from Firestore\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), (snapshot) => {\n        const employeeData = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe;\n    };\n\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, (snapshot) => {\n        const updatedTimesheetData = {};\n        snapshot.forEach((doc) => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0,\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe;\n    };\n\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n\n  // Handle the time settings for a specific employee and date\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setStartTime(timesheetData[employeeId]?.[date]?.startTime || \"\");\n    setEndTime(timesheetData[employeeId]?.[date]?.endTime || \"\");\n    setIsHoliday(timesheetData[employeeId]?.[date]?.isHoliday || false);\n    setModalOpen(true);\n  };\n\n  // Calculate monthly totals for an employee\n  const calculateWeeklyTotal = (employeeId) => {\n    let weeklyTotal = {\n      normalTime: 0,\n      nightShift: 0,\n      holidayTime: 0,\n      totalTime: 0,\n    };\n\n    weekDays.forEach((date) => {\n      const data = timesheetData[employeeId]?.[date];\n      if (data) {\n        weeklyTotal.normalTime += data.normalTime || 0;\n        weeklyTotal.nightShift += data.nightShift || 0;\n        weeklyTotal.holidayTime += data.holidayTime || 0;\n        weeklyTotal.totalTime += data.totalTime || 0;\n      }\n    });\n\n    return weeklyTotal;\n  };\n\n  return (\n    <div>\n      <button onClick={handlePreviousWeek}>Previous Week</button>\n      <button onClick={handleNextWeek}>Next Week</button>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Shift Type</th>\n            {weekDays.map((date) => (\n              <th key={date}>{date}</th>\n            ))}\n            <th>Weekly Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => {\n            const weeklyTotal = calculateWeeklyTotal(employee.id);\n            return (\n              <React.Fragment key={employee.id}>\n                <tr>\n                  <td rowSpan={4}>{employee.name}</td>\n                  <td>Normal Time</td>\n                  {weekDays.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.normalTime === 0\n                        ? \"0 hrs\"\n                        : timesheetData[employee.id]?.[date]?.normalTime\n                        ? `${timesheetData[employee.id][date].normalTime} hrs`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{weeklyTotal.normalTime}</td>\n                </tr>\n                <tr>\n                  <td>Night Shift</td>\n                  {weekDays.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.nightShift === 0\n                        ? \"0 hrs\"\n                        : timesheetData[employee.id]?.[date]?.nightShift\n                        ? `${timesheetData[employee.id][date].nightShift} hrs`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{weeklyTotal.nightShift}</td>\n                </tr>\n                <tr>\n                  <td>Holiday Time</td>\n                  {weekDays.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.holidayTime === 0\n                        ? \"0 hrs\"\n                        : timesheetData[employee.id]?.[date]?.holidayTime\n                        ? `${timesheetData[employee.id][date].holidayTime} hrs`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{weeklyTotal.holidayTime}</td>\n                </tr>\n                <tr>\n                  <td>Total Time</td>\n                  {weekDays.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.totalTime === 0\n                        ? \"0 hrs\"\n                        : timesheetData[employee.id]?.[date]?.totalTime\n                        ? `${timesheetData[employee.id][date].totalTime} hrs`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{weeklyTotal.totalTime}</td>\n                </tr>\n              </React.Fragment>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {modalOpen && (\n        <div>\n          <h2>Set Time for {selectedEmployee}</h2>\n          <label>Start Time:</label>\n          <input\n            type=\"time\"\n            value={startTime}\n            onChange={(e) => setStartTime(e.target.value)}\n          />\n          <br />\n          <label>End Time:</label>\n          <input\n            type=\"time\"\n            value={endTime}\n            onChange={(e) => setEndTime(e.target.value)}\n          />\n          <br />\n          <label>Next Day:</label>\n          <input\n            type=\"checkbox\"\n            checked={nextDay}\n            onChange={() => setNextDay(!nextDay)}\n          />\n          <br />\n          <label>Holiday:</label>\n          <input\n            type=\"checkbox\"\n            checked={isHoliday}\n            onChange={() => setIsHoliday(!isHoliday)}\n          />\n          <br />\n          <button onClick={saveTimesheetDataToFirebase}>Save</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}