{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { collection, getDocs, getDoc, doc, setDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = ({\n  weekDates\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [timeAdjustments, setTimeAdjustments] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const employeeSnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = employeeSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n    fetchEmployees();\n    fetchTimesheetData(); // Fetch timesheet data on component mount\n  }, []);\n  const fetchTimesheetData = async () => {\n    try {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const snapshot = await getDocs(timesheetDataRef);\n      const timesheetData = {};\n      snapshot.forEach(doc => {\n        const employeeData = doc.data().hours;\n        for (const [date, data] of Object.entries(employeeData)) {\n          if (!timesheetData[doc.id]) timesheetData[doc.id] = {};\n          timesheetData[doc.id][date] = data;\n        }\n      });\n      setTimesheetData(timesheetData);\n    } catch (error) {\n      console.error(\"Error fetching timesheet data:\", error);\n    }\n  };\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setModalOpen(true);\n  };\n  const handleStartTimeChange = event => {\n    setStartTime(event.target.value);\n    calculateTimes(event.target.value, endTime, nextDay);\n  };\n  const handleEndTimeChange = event => {\n    setEndTime(event.target.value);\n    calculateTimes(startTime, event.target.value, nextDay);\n  };\n  const handleNextDayToggle = () => {\n    setNextDay(prev => !prev);\n    calculateTimes(startTime, endTime, !nextDay);\n  };\n  const handleHolidayToggle = () => {\n    setIsHoliday(prev => !prev);\n    if (!isHoliday) {\n      setHolidayTime(totalTime);\n      setTotalTime(0);\n      setNightShiftHours(0);\n    } else {\n      setHolidayTime(0);\n      calculateTimes(startTime, endTime, nextDay);\n    }\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  };\n  const calculateTimes = (start, end, isNextDay) => {\n    if (!start || !end) return;\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0);\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1);\n    nightShiftEnd.setHours(6, 0, 0);\n    let nightShiftHours = 0;\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n  };\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId);\n      const timesheetData = await getDoc(timesheetDocRef);\n      let updatedData = {};\n      if (timesheetData.exists()) {\n        updatedData = timesheetData.data().hours;\n        updatedData[date] = {\n          startTime: start,\n          endTime: end,\n          totalTime,\n          nightShift,\n          holidayTime,\n          isHoliday\n        };\n      } else {\n        updatedData = {\n          [date]: {\n            startTime: start,\n            endTime: end,\n            totalTime,\n            nightShift,\n            holidayTime,\n            isHoliday\n          }\n        };\n      }\n      await setDoc(timesheetDocRef, {\n        hours: updatedData\n      });\n      fetchTimesheetData(); // Re-fetch the data after saving\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n  const handleInputChange = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    setTimesheetData(prevData => {\n      const newData = {\n        ...prevData\n      };\n      newData[employeeId][date] = {\n        startTime: start,\n        endTime: end,\n        totalTime,\n        nightShift,\n        holidayTime,\n        isHoliday\n      };\n      return newData;\n    });\n    await saveTimesheetDataToFirebase(employeeId, date, start, end, totalTime, nightShift, holidayTime);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), weekDates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), weekDates.map(date => {\n            var _timesheetData$employ, _timesheetData$employ2;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSetTime(employee.id, date),\n                children: \"Set Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), ((_timesheetData$employ = timesheetData[employee.id]) === null || _timesheetData$employ === void 0 ? void 0 : (_timesheetData$employ2 = _timesheetData$employ[date]) === null || _timesheetData$employ2 === void 0 ? void 0 : _timesheetData$employ2.totalTime) && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Total Time: \", timesheetData[employee.id][date].totalTime, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Night Shift: \", timesheetData[employee.id][date].nightShift, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Holiday Time: \", timesheetData[employee.id][date].holidayTime, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this);\n          })]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Set Time for \", selectedEmployee]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Start Time: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: handleStartTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"End Time: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: endTime,\n          onChange: handleEndTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: nextDay,\n            onChange: handleNextDayToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), \"Next Day\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isHoliday,\n            onChange: handleHolidayToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), \"Holiday\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleInputChange(selectedEmployee, selectedDate, startTime, endTime, totalTime, nightShiftHours, holidayTime),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCloseModal,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"oOVcZQm+Kd4VL7yBB/IYdRslkHE=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["useState","useEffect","collection","getDocs","getDoc","doc","setDoc","db","jsxDEV","_jsxDEV","TimesheetList","weekDates","_s","employees","setEmployees","timesheetData","setTimesheetData","timeAdjustments","setTimeAdjustments","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","nextDay","setNextDay","isHoliday","setIsHoliday","totalTime","setTotalTime","nightShiftHours","setNightShiftHours","holidayTime","setHolidayTime","fetchEmployees","employeeSnapshot","employeeData","docs","map","id","data","error","console","fetchTimesheetData","timesheetDataRef","snapshot","forEach","hours","date","Object","entries","handleSetTime","employeeId","handleStartTimeChange","event","target","value","calculateTimes","handleEndTimeChange","handleNextDayToggle","prev","handleHolidayToggle","handleCloseModal","start","end","isNextDay","startHours","startMinutes","split","Number","endHours","endMinutes","startDate","Date","setHours","endDate","setDate","getDate","totalTimeInHours","nightShiftStart","nightShiftEnd","nightShiftStartTime","nightShiftEndTime","toFixed","saveTimesheetDataToFirebase","nightShift","timesheetDocRef","updatedData","exists","handleInputChange","prevData","newData","children","border","fileName","_jsxFileName","lineNumber","columnNumber","employee","name","_timesheetData$employ","_timesheetData$employ2","onClick","className","type","onChange","checked","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { collection, getDocs, getDoc, doc, setDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\n\nconst TimesheetList = ({ weekDates }) => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [timeAdjustments, setTimeAdjustments] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const employeeSnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = employeeSnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n\n    fetchEmployees();\n    fetchTimesheetData(); // Fetch timesheet data on component mount\n  }, []);\n\n  const fetchTimesheetData = async () => {\n    try {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const snapshot = await getDocs(timesheetDataRef);\n\n      const timesheetData = {};\n\n      snapshot.forEach((doc) => {\n        const employeeData = doc.data().hours;\n        for (const [date, data] of Object.entries(employeeData)) {\n          if (!timesheetData[doc.id]) timesheetData[doc.id] = {};\n          timesheetData[doc.id][date] = data;\n        }\n      });\n\n      setTimesheetData(timesheetData);\n    } catch (error) {\n      console.error(\"Error fetching timesheet data:\", error);\n    }\n  };\n\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setModalOpen(true);\n  };\n\n  const handleStartTimeChange = (event) => {\n    setStartTime(event.target.value);\n    calculateTimes(event.target.value, endTime, nextDay);\n  };\n\n  const handleEndTimeChange = (event) => {\n    setEndTime(event.target.value);\n    calculateTimes(startTime, event.target.value, nextDay);\n  };\n\n  const handleNextDayToggle = () => {\n    setNextDay((prev) => !prev);\n    calculateTimes(startTime, endTime, !nextDay);\n  };\n\n  const handleHolidayToggle = () => {\n    setIsHoliday((prev) => !prev);\n    if (!isHoliday) {\n      setHolidayTime(totalTime);\n      setTotalTime(0);\n      setNightShiftHours(0);\n    } else {\n      setHolidayTime(0);\n      calculateTimes(startTime, endTime, nextDay);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  };\n\n  const calculateTimes = (start, end, isNextDay) => {\n    if (!start || !end) return;\n\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);\n\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0);\n\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1);\n    nightShiftEnd.setHours(6, 0, 0);\n\n    let nightShiftHours = 0;\n\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n  };\n\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId);\n      const timesheetData = await getDoc(timesheetDocRef);\n\n      let updatedData = {};\n\n      if (timesheetData.exists()) {\n        updatedData = timesheetData.data().hours;\n        updatedData[date] = { startTime: start, endTime: end, totalTime, nightShift, holidayTime, isHoliday };\n      } else {\n        updatedData = { [date]: { startTime: start, endTime: end, totalTime, nightShift, holidayTime, isHoliday } };\n      }\n\n      await setDoc(timesheetDocRef, { hours: updatedData });\n      fetchTimesheetData(); // Re-fetch the data after saving\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  const handleInputChange = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    setTimesheetData((prevData) => {\n      const newData = { ...prevData };\n      newData[employeeId][date] = { startTime: start, endTime: end, totalTime, nightShift, holidayTime, isHoliday };\n      return newData;\n    });\n\n    await saveTimesheetDataToFirebase(employeeId, date, start, end, totalTime, nightShift, holidayTime);\n  };\n\n  return (\n    <div>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Employee</th>\n            {weekDates.map((date) => (\n              <th key={date}>{date}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => (\n            <tr key={employee.id}>\n              <td>{employee.name}</td>\n              {weekDates.map((date) => (\n                <td key={date}>\n                  <button onClick={() => handleSetTime(employee.id, date)}>Set Time</button>\n                  {timesheetData[employee.id]?.[date]?.totalTime && (\n                    <div>\n                      <p>Total Time: {timesheetData[employee.id][date].totalTime} hours</p>\n                      <p>Night Shift: {timesheetData[employee.id][date].nightShift} hours</p>\n                      <p>Holiday Time: {timesheetData[employee.id][date].holidayTime} hours</p>\n                    </div>\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {modalOpen && (\n        <div className=\"modal\">\n          <h2>Set Time for {selectedEmployee}</h2>\n          <div>\n            <label>Start Time: </label>\n            <input type=\"time\" value={startTime} onChange={handleStartTimeChange} />\n          </div>\n          <div>\n            <label>End Time: </label>\n            <input type=\"time\" value={endTime} onChange={handleEndTimeChange} />\n          </div>\n          <div>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={nextDay}\n                onChange={handleNextDayToggle}\n              />\n              Next Day\n            </label>\n          </div>\n          <div>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={isHoliday}\n                onChange={handleHolidayToggle}\n              />\n              Holiday\n            </label>\n          </div>\n          <button onClick={() => handleInputChange(selectedEmployee, selectedDate, startTime, endTime, totalTime, nightShiftHours, holidayTime)}>\n            Save\n          </button>\n          <button onClick={handleCloseModal}>Close</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}