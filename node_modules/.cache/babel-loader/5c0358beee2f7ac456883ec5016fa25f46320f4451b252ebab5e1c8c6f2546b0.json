{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TimesheetList = ({\n  weekDates\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), snapshot => {\n        const employeeData = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe; // Cleanup on unmount\n    };\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, snapshot => {\n        const updatedTimesheetData = {};\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe; // Cleanup on unmount\n    };\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setModalOpen(true);\n  };\n  const handleStartTimeChange = event => {\n    setStartTime(event.target.value);\n    calculateTimes(event.target.value, endTime, nextDay, isHoliday);\n  };\n  const handleEndTimeChange = event => {\n    setEndTime(event.target.value);\n    calculateTimes(startTime, event.target.value, nextDay, isHoliday);\n  };\n  const handleNextDayToggle = () => {\n    setNextDay(prev => !prev);\n    calculateTimes(startTime, endTime, !nextDay, isHoliday);\n  };\n  const handleHolidayToggle = () => {\n    const newIsHoliday = !isHoliday;\n    setIsHoliday(newIsHoliday);\n    if (newIsHoliday) {\n      // When holiday is checked\n      setHolidayTime(totalTime);\n      setNormalTime(0); // Reset normal time for holiday\n      setNightShiftHours(0); // Reset night shift for holiday\n      setTotalTime(0); // Reset total time\n    } else {\n      // Recalculate time when holiday is unchecked\n      calculateTimes(startTime, endTime, nextDay, false); // Normal calculation\n    }\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  };\n  const calculateTimes = (start, end, isNextDay, isHoliday) => {\n    if (!start || !end) return;\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0);\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1);\n    nightShiftEnd.setHours(6, 0, 0);\n    let nightShiftHours = 0;\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n\n    // Calculate Normal Time: if it's a holiday, normal time is 0\n    const normalTime = isHoliday ? 0 : totalTimeInHours - nightShiftHours;\n    setNormalTime(normalTime.toFixed(2));\n\n    // If it's a holiday, set the holiday time to total time\n    const holidayTime = isHoliday ? totalTimeInHours : 0;\n    setHolidayTime(holidayTime.toFixed(2));\n  };\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    try {\n      var _await$getDoc$data;\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId);\n      const timesheetData = ((_await$getDoc$data = (await getDoc(timesheetDocRef)).data()) === null || _await$getDoc$data === void 0 ? void 0 : _await$getDoc$data.hours) || {};\n      timesheetData[date] = {\n        startTime: start,\n        endTime: end,\n        totalTime: parseFloat(totalTime),\n        nightShift: parseFloat(nightShift),\n        holidayTime: parseFloat(holidayTime),\n        normalTime: parseFloat(normalTime),\n        isHoliday\n      };\n      await setDoc(timesheetDocRef, {\n        hours: timesheetData\n      });\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n  const handleInputChange = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    setTimesheetData(prevData => {\n      const newData = {\n        ...prevData\n      };\n      newData[employeeId][date] = {\n        startTime: start,\n        endTime: end,\n        totalTime,\n        nightShift,\n        holidayTime,\n        isHoliday,\n        normalTime\n      };\n      return newData;\n    });\n    await saveTimesheetDataToFirebase(employeeId, date, start, end, totalTime, nightShift, holidayTime);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), weekDates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), weekDates.map(date => {\n              var _timesheetData$employ;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: \"Set Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this), (_timesheetData$employ = timesheetData[employee.id]) !== null && _timesheetData$employ !== void 0 && _timesheetData$employ[date] ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Total Time: \", timesheetData[employee.id][date].totalTime, \" hours\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Night Shift: \", timesheetData[employee.id][date].nightShift, \" hours\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Holiday Time: \", timesheetData[employee.id][date].holidayTime, \" hours\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Normal Time: \", timesheetData[employee.id][date].normalTime, \" hours\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"No data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 23\n                }, this)]\n              }, date, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this);\n            })]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Normal Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), weekDates.map(date => {\n              var _timesheetData$employ2, _timesheetData$employ3;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [((_timesheetData$employ2 = timesheetData[employee.id]) === null || _timesheetData$employ2 === void 0 ? void 0 : (_timesheetData$employ3 = _timesheetData$employ2[date]) === null || _timesheetData$employ3 === void 0 ? void 0 : _timesheetData$employ3.normalTime) || 0, \" hours\"]\n              }, date, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Night Shift\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), weekDates.map(date => {\n              var _timesheetData$employ4, _timesheetData$employ5;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [((_timesheetData$employ4 = timesheetData[employee.id]) === null || _timesheetData$employ4 === void 0 ? void 0 : (_timesheetData$employ5 = _timesheetData$employ4[date]) === null || _timesheetData$employ5 === void 0 ? void 0 : _timesheetData$employ5.nightShift) || 0, \" hours\"]\n              }, date, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Holiday Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), weekDates.map(date => {\n              var _timesheetData$employ6, _timesheetData$employ7;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [((_timesheetData$employ6 = timesheetData[employee.id]) === null || _timesheetData$employ6 === void 0 ? void 0 : (_timesheetData$employ7 = _timesheetData$employ6[date]) === null || _timesheetData$employ7 === void 0 ? void 0 : _timesheetData$employ7.holidayTime) || 0, \" hours\"]\n              }, date, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Set Time for \", selectedEmployee]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Start Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: startTime,\n            onChange: handleStartTimeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"End Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: endTime,\n            onChange: handleEndTimeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: nextDay,\n            onChange: handleNextDayToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), \" \", \"Next Day\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isHoliday,\n            onChange: handleHolidayToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), \" \", \"Holiday\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleInputChange(selectedEmployee, selectedDate, startTime, endTime, totalTime, nightShiftHours, holidayTime);\n            handleCloseModal();\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCloseModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"LuJF93aoCyJzjR3hVD8EVfLaOJo=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["useState","useEffect","collection","onSnapshot","doc","setDoc","getDoc","db","jsxDEV","_jsxDEV","Fragment","_Fragment","TimesheetList","weekDates","_s","employees","setEmployees","timesheetData","setTimesheetData","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","nextDay","setNextDay","isHoliday","setIsHoliday","totalTime","setTotalTime","nightShiftHours","setNightShiftHours","holidayTime","setHolidayTime","normalTime","setNormalTime","fetchEmployees","unsubscribe","snapshot","employeeData","docs","map","id","data","fetchTimesheetData","timesheetDataRef","updatedTimesheetData","forEach","employeeId","hours","date","record","Object","entries","parseFloat","nightShift","Boolean","handleSetTime","handleStartTimeChange","event","target","value","calculateTimes","handleEndTimeChange","handleNextDayToggle","prev","handleHolidayToggle","newIsHoliday","handleCloseModal","start","end","isNextDay","startHours","startMinutes","split","Number","endHours","endMinutes","startDate","Date","setHours","endDate","setDate","getDate","totalTimeInHours","nightShiftStart","nightShiftEnd","nightShiftStartTime","nightShiftEndTime","toFixed","saveTimesheetDataToFirebase","_await$getDoc$data","timesheetDocRef","error","console","handleInputChange","prevData","newData","children","border","fileName","_jsxFileName","lineNumber","columnNumber","employee","name","_timesheetData$employ","onClick","_timesheetData$employ2","_timesheetData$employ3","_timesheetData$employ4","_timesheetData$employ5","_timesheetData$employ6","_timesheetData$employ7","type","onChange","checked","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\n\nconst TimesheetList = ({ weekDates }) => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), (snapshot) => {\n        const employeeData = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n      });\n\n      return unsubscribe; // Cleanup on unmount\n    };\n\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n\n      const unsubscribe = onSnapshot(timesheetDataRef, (snapshot) => {\n        const updatedTimesheetData = {};\n\n        snapshot.forEach((doc) => {\n          const data = doc.data();\n          const employeeId = doc.id;\n\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0,\n              };\n            }\n          }\n        });\n\n        setTimesheetData(updatedTimesheetData);\n      });\n\n      return unsubscribe; // Cleanup on unmount\n    };\n\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setModalOpen(true);\n  };\n\n  const handleStartTimeChange = (event) => {\n    setStartTime(event.target.value);\n    calculateTimes(event.target.value, endTime, nextDay, isHoliday);\n  };\n\n  const handleEndTimeChange = (event) => {\n    setEndTime(event.target.value);\n    calculateTimes(startTime, event.target.value, nextDay, isHoliday);\n  };\n\n  const handleNextDayToggle = () => {\n    setNextDay((prev) => !prev);\n    calculateTimes(startTime, endTime, !nextDay, isHoliday);\n  };\n\n  const handleHolidayToggle = () => {\n    const newIsHoliday = !isHoliday;\n    setIsHoliday(newIsHoliday);\n\n    if (newIsHoliday) {\n      // When holiday is checked\n      setHolidayTime(totalTime);\n      setNormalTime(0); // Reset normal time for holiday\n      setNightShiftHours(0); // Reset night shift for holiday\n      setTotalTime(0); // Reset total time\n    } else {\n      // Recalculate time when holiday is unchecked\n      calculateTimes(startTime, endTime, nextDay, false); // Normal calculation\n    }\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  };\n\n  const calculateTimes = (start, end, isNextDay, isHoliday) => {\n    if (!start || !end) return;\n\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);\n\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0);\n\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1);\n    nightShiftEnd.setHours(6, 0, 0);\n\n    let nightShiftHours = 0;\n\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n\n    // Calculate Normal Time: if it's a holiday, normal time is 0\n    const normalTime = isHoliday ? 0 : totalTimeInHours - nightShiftHours;\n    setNormalTime(normalTime.toFixed(2));\n\n    // If it's a holiday, set the holiday time to total time\n    const holidayTime = isHoliday ? totalTimeInHours : 0;\n    setHolidayTime(holidayTime.toFixed(2));\n  };\n\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId);\n      const timesheetData = (await getDoc(timesheetDocRef)).data()?.hours || {};\n\n      timesheetData[date] = {\n        startTime: start,\n        endTime: end,\n        totalTime: parseFloat(totalTime),\n        nightShift: parseFloat(nightShift),\n        holidayTime: parseFloat(holidayTime),\n        normalTime: parseFloat(normalTime),\n        isHoliday,\n      };\n\n      await setDoc(timesheetDocRef, { hours: timesheetData });\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  const handleInputChange = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    setTimesheetData((prevData) => {\n      const newData = { ...prevData };\n      newData[employeeId][date] = { startTime: start, endTime: end, totalTime, nightShift, holidayTime, isHoliday, normalTime };\n      return newData;\n    });\n\n    await saveTimesheetDataToFirebase(employeeId, date, start, end, totalTime, nightShift, holidayTime);\n  };\n\n  return (\n    <div>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Employee</th>\n            {weekDates.map((date) => (\n              <th key={date}>{date}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => (\n            <>\n              <tr key={employee.id}>\n                <td>{employee.name}</td>\n                {weekDates.map((date) => (\n                  <td key={date}>\n                    <button onClick={() => handleSetTime(employee.id, date)}>Set Time</button>\n                    {timesheetData[employee.id]?.[date] ? (\n                      <div>\n                        <p>Total Time: {timesheetData[employee.id][date].totalTime} hours</p>\n                        <p>Night Shift: {timesheetData[employee.id][date].nightShift} hours</p>\n                        <p>Holiday Time: {timesheetData[employee.id][date].holidayTime} hours</p>\n                        <p>Normal Time: {timesheetData[employee.id][date].normalTime} hours</p>\n                      </div>\n                    ) : (\n                      <p>No data</p>\n                    )}\n                  </td>\n                ))}\n              </tr>\n              <tr>\n                <td>Normal Time</td>\n                {weekDates.map((date) => (\n                  <td key={date}>\n                    {timesheetData[employee.id]?.[date]?.normalTime || 0} hours\n                  </td>\n                ))}\n              </tr>\n              <tr>\n                <td>Night Shift</td>\n                {weekDates.map((date) => (\n                  <td key={date}>\n                    {timesheetData[employee.id]?.[date]?.nightShift || 0} hours\n                  </td>\n                ))}\n              </tr>\n              <tr>\n                <td>Holiday Time</td>\n                {weekDates.map((date) => (\n                  <td key={date}>\n                    {timesheetData[employee.id]?.[date]?.holidayTime || 0} hours\n                  </td>\n                ))}\n              </tr>\n            </>\n          ))}\n        </tbody>\n      </table>\n\n      {modalOpen && (\n        <div>\n          <div>\n            <h3>Set Time for {selectedEmployee}</h3>\n            <label>\n              Start Time:\n              <input type=\"time\" value={startTime} onChange={handleStartTimeChange} />\n            </label>\n            <label>\n              End Time:\n              <input type=\"time\" value={endTime} onChange={handleEndTimeChange} />\n            </label>\n            <div>\n              <input\n                type=\"checkbox\"\n                checked={nextDay}\n                onChange={handleNextDayToggle}\n              />{\" \"}\n              Next Day\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                checked={isHoliday}\n                onChange={handleHolidayToggle}\n              />{\" \"}\n              Holiday\n            </div>\n            <button\n              onClick={() => {\n                handleInputChange(\n                  selectedEmployee,\n                  selectedDate,\n                  startTime,\n                  endTime,\n                  totalTime,\n                  nightShiftHours,\n                  holidayTime\n                );\n                handleCloseModal();\n              }}\n            >\n              Save\n            </button>\n            <button onClick={handleCloseModal}>Cancel</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,UAAU,EAAEC,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;AAChF,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACqB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC+B,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiC,SAAS,EAAEC,YAAY,CAAC,GAAGlC,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACmC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpC,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACuC,UAAU,EAAEC,aAAa,CAAC,GAAGxC,QAAQ,CAAC,CAAC,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMwC,cAAc,GAAGA,CAAA,KAAM;MAC3B,MAAMC,WAAW,GAAGvC,UAAU,CAACD,UAAU,CAACK,EAAE,EAAE,WAAW,CAAC,EAAGoC,QAAQ,IAAK;QACxE,MAAMC,YAAY,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAE1C,GAAG,KAAM;UAC/C2C,EAAE,EAAE3C,GAAG,CAAC2C,EAAE;UACV,GAAG3C,GAAG,CAAC4C,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QACHhC,YAAY,CAAC4B,YAAY,CAAC;MAC5B,CAAC,CAAC;MAEF,OAAOF,WAAW,CAAC,CAAC;IACtB,CAAC;IAED,MAAMO,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,MAAMC,gBAAgB,GAAGhD,UAAU,CAACK,EAAE,EAAE,YAAY,CAAC;MAErD,MAAMmC,WAAW,GAAGvC,UAAU,CAAC+C,gBAAgB,EAAGP,QAAQ,IAAK;QAC7D,MAAMQ,oBAAoB,GAAG,CAAC,CAAC;QAE/BR,QAAQ,CAACS,OAAO,CAAEhD,GAAG,IAAK;UACxB,MAAM4C,IAAI,GAAG5C,GAAG,CAAC4C,IAAI,CAAC,CAAC;UACvB,MAAMK,UAAU,GAAGjD,GAAG,CAAC2C,EAAE;UAEzB,IAAIC,IAAI,CAACM,KAAK,EAAE;YACdH,oBAAoB,CAACE,UAAU,CAAC,GAAG,CAAC,CAAC;YACrC,KAAK,MAAM,CAACE,IAAI,EAAEC,MAAM,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACV,IAAI,CAACM,KAAK,CAAC,EAAE;cACvDH,oBAAoB,CAACE,UAAU,CAAC,CAACE,IAAI,CAAC,GAAG;gBACvC9B,SAAS,EAAE+B,MAAM,CAAC/B,SAAS;gBAC3BE,OAAO,EAAE6B,MAAM,CAAC7B,OAAO;gBACvBM,SAAS,EAAE0B,UAAU,CAACH,MAAM,CAACvB,SAAS,CAAC;gBACvC2B,UAAU,EAAED,UAAU,CAACH,MAAM,CAACI,UAAU,CAAC;gBACzCvB,WAAW,EAAEsB,UAAU,CAACH,MAAM,CAACnB,WAAW,CAAC;gBAC3CN,SAAS,EAAE8B,OAAO,CAACL,MAAM,CAACzB,SAAS,CAAC;gBACpCQ,UAAU,EAAEoB,UAAU,CAACH,MAAM,CAACjB,UAAU,CAAC,IAAI;cAC/C,CAAC;YACH;UACF;QACF,CAAC,CAAC;QAEFrB,gBAAgB,CAACiC,oBAAoB,CAAC;MACxC,CAAC,CAAC;MAEF,OAAOT,WAAW,CAAC,CAAC;IACtB,CAAC;IAEDD,cAAc,CAAC,CAAC;IAChBQ,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,aAAa,GAAGA,CAACT,UAAU,EAAEE,IAAI,KAAK;IAC1CjC,mBAAmB,CAAC+B,UAAU,CAAC;IAC/B7B,eAAe,CAAC+B,IAAI,CAAC;IACrBnC,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAM2C,qBAAqB,GAAIC,KAAK,IAAK;IACvCtC,YAAY,CAACsC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAChCC,cAAc,CAACH,KAAK,CAACC,MAAM,CAACC,KAAK,EAAEvC,OAAO,EAAEE,OAAO,EAAEE,SAAS,CAAC;EACjE,CAAC;EAED,MAAMqC,mBAAmB,GAAIJ,KAAK,IAAK;IACrCpC,UAAU,CAACoC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC9BC,cAAc,CAAC1C,SAAS,EAAEuC,KAAK,CAACC,MAAM,CAACC,KAAK,EAAErC,OAAO,EAAEE,SAAS,CAAC;EACnE,CAAC;EAED,MAAMsC,mBAAmB,GAAGA,CAAA,KAAM;IAChCvC,UAAU,CAAEwC,IAAI,IAAK,CAACA,IAAI,CAAC;IAC3BH,cAAc,CAAC1C,SAAS,EAAEE,OAAO,EAAE,CAACE,OAAO,EAAEE,SAAS,CAAC;EACzD,CAAC;EAED,MAAMwC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,YAAY,GAAG,CAACzC,SAAS;IAC/BC,YAAY,CAACwC,YAAY,CAAC;IAE1B,IAAIA,YAAY,EAAE;MAChB;MACAlC,cAAc,CAACL,SAAS,CAAC;MACzBO,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;MAClBJ,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;MACvBF,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,MAAM;MACL;MACAiC,cAAc,CAAC1C,SAAS,EAAEE,OAAO,EAAEE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;IACtD;EACF,CAAC;EAED,MAAM4C,gBAAgB,GAAGA,CAAA,KAAM;IAC7BrD,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAM+C,cAAc,GAAGA,CAACO,KAAK,EAAEC,GAAG,EAAEC,SAAS,EAAE7C,SAAS,KAAK;IAC3D,IAAI,CAAC2C,KAAK,IAAI,CAACC,GAAG,EAAE;IAEpB,MAAM,CAACE,UAAU,EAAEC,YAAY,CAAC,GAAGJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAACjC,GAAG,CAACkC,MAAM,CAAC;IAC/D,MAAM,CAACC,QAAQ,EAAEC,UAAU,CAAC,GAAGP,GAAG,CAACI,KAAK,CAAC,GAAG,CAAC,CAACjC,GAAG,CAACkC,MAAM,CAAC;IAEzD,MAAMG,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC5BD,SAAS,CAACE,QAAQ,CAACR,UAAU,EAAEC,YAAY,EAAE,CAAC,CAAC;IAE/C,MAAMQ,OAAO,GAAG,IAAIF,IAAI,CAAC,CAAC;IAC1BE,OAAO,CAACD,QAAQ,CAACJ,QAAQ,EAAEC,UAAU,EAAE,CAAC,CAAC;IAEzC,IAAIN,SAAS,EAAEU,OAAO,CAACC,OAAO,CAACD,OAAO,CAACE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAErD,MAAMC,gBAAgB,GAAG,CAACH,OAAO,GAAGH,SAAS,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;IAEjE,MAAMO,eAAe,GAAG,IAAIN,IAAI,CAACD,SAAS,CAAC;IAC3CO,eAAe,CAACL,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IAElC,MAAMM,aAAa,GAAG,IAAIP,IAAI,CAACD,SAAS,CAAC;IACzCQ,aAAa,CAACJ,OAAO,CAACI,aAAa,CAACH,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAClDG,aAAa,CAACN,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAE/B,IAAIlD,eAAe,GAAG,CAAC;IAEvB,IAAIgD,SAAS,GAAGQ,aAAa,IAAIL,OAAO,IAAII,eAAe,EAAE;MAC3D,MAAME,mBAAmB,GAAGT,SAAS,GAAGO,eAAe,GAAGA,eAAe,GAAGP,SAAS;MACrF,MAAMU,iBAAiB,GAAGP,OAAO,GAAGK,aAAa,GAAGA,aAAa,GAAGL,OAAO;MAC3EnD,eAAe,GAAG,CAAC0D,iBAAiB,GAAGD,mBAAmB,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;IAChF;IAEA1D,YAAY,CAACuD,gBAAgB,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC;IACzC1D,kBAAkB,CAACD,eAAe,CAAC2D,OAAO,CAAC,CAAC,CAAC,CAAC;;IAE9C;IACA,MAAMvD,UAAU,GAAGR,SAAS,GAAG,CAAC,GAAG0D,gBAAgB,GAAGtD,eAAe;IACrEK,aAAa,CAACD,UAAU,CAACuD,OAAO,CAAC,CAAC,CAAC,CAAC;;IAEpC;IACA,MAAMzD,WAAW,GAAGN,SAAS,GAAG0D,gBAAgB,GAAG,CAAC;IACpDnD,cAAc,CAACD,WAAW,CAACyD,OAAO,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,2BAA2B,GAAG,MAAAA,CAAO1C,UAAU,EAAEE,IAAI,EAAEmB,KAAK,EAAEC,GAAG,EAAE1C,SAAS,EAAE2B,UAAU,EAAEvB,WAAW,KAAK;IAC9G,IAAI;MAAA,IAAA2D,kBAAA;MACF,MAAMC,eAAe,GAAG7F,GAAG,CAACG,EAAE,EAAE,YAAY,EAAE8C,UAAU,CAAC;MACzD,MAAMpC,aAAa,GAAG,EAAA+E,kBAAA,IAAC,MAAM1F,MAAM,CAAC2F,eAAe,CAAC,EAAEjD,IAAI,CAAC,CAAC,cAAAgD,kBAAA,uBAAtCA,kBAAA,CAAwC1C,KAAK,KAAI,CAAC,CAAC;MAEzErC,aAAa,CAACsC,IAAI,CAAC,GAAG;QACpB9B,SAAS,EAAEiD,KAAK;QAChB/C,OAAO,EAAEgD,GAAG;QACZ1C,SAAS,EAAE0B,UAAU,CAAC1B,SAAS,CAAC;QAChC2B,UAAU,EAAED,UAAU,CAACC,UAAU,CAAC;QAClCvB,WAAW,EAAEsB,UAAU,CAACtB,WAAW,CAAC;QACpCE,UAAU,EAAEoB,UAAU,CAACpB,UAAU,CAAC;QAClCR;MACF,CAAC;MAED,MAAM1B,MAAM,CAAC4F,eAAe,EAAE;QAAE3C,KAAK,EAAErC;MAAc,CAAC,CAAC;IACzD,CAAC,CAAC,OAAOiF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAAA,CAAO/C,UAAU,EAAEE,IAAI,EAAEmB,KAAK,EAAEC,GAAG,EAAE1C,SAAS,EAAE2B,UAAU,EAAEvB,WAAW,KAAK;IACpGnB,gBAAgB,CAAEmF,QAAQ,IAAK;MAC7B,MAAMC,OAAO,GAAG;QAAE,GAAGD;MAAS,CAAC;MAC/BC,OAAO,CAACjD,UAAU,CAAC,CAACE,IAAI,CAAC,GAAG;QAAE9B,SAAS,EAAEiD,KAAK;QAAE/C,OAAO,EAAEgD,GAAG;QAAE1C,SAAS;QAAE2B,UAAU;QAAEvB,WAAW;QAAEN,SAAS;QAAEQ;MAAW,CAAC;MACzH,OAAO+D,OAAO;IAChB,CAAC,CAAC;IAEF,MAAMP,2BAA2B,CAAC1C,UAAU,EAAEE,IAAI,EAAEmB,KAAK,EAAEC,GAAG,EAAE1C,SAAS,EAAE2B,UAAU,EAAEvB,WAAW,CAAC;EACrG,CAAC;EAED,oBACE5B,OAAA;IAAA8F,QAAA,gBACE9F,OAAA;MAAO+F,MAAM,EAAC,GAAG;MAAAD,QAAA,gBACf9F,OAAA;QAAA8F,QAAA,eACE9F,OAAA;UAAA8F,QAAA,gBACE9F,OAAA;YAAA8F,QAAA,EAAI;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAChB/F,SAAS,CAACiC,GAAG,CAAES,IAAI,iBAClB9C,OAAA;YAAA8F,QAAA,EAAgBhD;UAAI,GAAXA,IAAI;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAC1B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRnG,OAAA;QAAA8F,QAAA,EACGxF,SAAS,CAAC+B,GAAG,CAAE+D,QAAQ,iBACtBpG,OAAA,CAAAE,SAAA;UAAA4F,QAAA,gBACE9F,OAAA;YAAA8F,QAAA,gBACE9F,OAAA;cAAA8F,QAAA,EAAKM,QAAQ,CAACC;YAAI;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EACvB/F,SAAS,CAACiC,GAAG,CAAES,IAAI;cAAA,IAAAwD,qBAAA;cAAA,oBAClBtG,OAAA;gBAAA8F,QAAA,gBACE9F,OAAA;kBAAQuG,OAAO,EAAEA,CAAA,KAAMlD,aAAa,CAAC+C,QAAQ,CAAC9D,EAAE,EAAEQ,IAAI,CAAE;kBAAAgD,QAAA,EAAC;gBAAQ;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACzE,CAAAG,qBAAA,GAAA9F,aAAa,CAAC4F,QAAQ,CAAC9D,EAAE,CAAC,cAAAgE,qBAAA,eAA1BA,qBAAA,CAA6BxD,IAAI,CAAC,gBACjC9C,OAAA;kBAAA8F,QAAA,gBACE9F,OAAA;oBAAA8F,QAAA,GAAG,cAAY,EAACtF,aAAa,CAAC4F,QAAQ,CAAC9D,EAAE,CAAC,CAACQ,IAAI,CAAC,CAACtB,SAAS,EAAC,QAAM;kBAAA;oBAAAwE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG,CAAC,eACrEnG,OAAA;oBAAA8F,QAAA,GAAG,eAAa,EAACtF,aAAa,CAAC4F,QAAQ,CAAC9D,EAAE,CAAC,CAACQ,IAAI,CAAC,CAACK,UAAU,EAAC,QAAM;kBAAA;oBAAA6C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG,CAAC,eACvEnG,OAAA;oBAAA8F,QAAA,GAAG,gBAAc,EAACtF,aAAa,CAAC4F,QAAQ,CAAC9D,EAAE,CAAC,CAACQ,IAAI,CAAC,CAAClB,WAAW,EAAC,QAAM;kBAAA;oBAAAoE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG,CAAC,eACzEnG,OAAA;oBAAA8F,QAAA,GAAG,eAAa,EAACtF,aAAa,CAAC4F,QAAQ,CAAC9D,EAAE,CAAC,CAACQ,IAAI,CAAC,CAAChB,UAAU,EAAC,QAAM;kBAAA;oBAAAkE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpE,CAAC,gBAENnG,OAAA;kBAAA8F,QAAA,EAAG;gBAAO;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CACd;cAAA,GAXMrD,IAAI;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAYT,CAAC;YAAA,CACN,CAAC;UAAA,GAhBKC,QAAQ,CAAC9D,EAAE;YAAA0D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAiBhB,CAAC,eACLnG,OAAA;YAAA8F,QAAA,gBACE9F,OAAA;cAAA8F,QAAA,EAAI;YAAW;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACnB/F,SAAS,CAACiC,GAAG,CAAES,IAAI;cAAA,IAAA0D,sBAAA,EAAAC,sBAAA;cAAA,oBAClBzG,OAAA;gBAAA8F,QAAA,GACG,EAAAU,sBAAA,GAAAhG,aAAa,CAAC4F,QAAQ,CAAC9D,EAAE,CAAC,cAAAkE,sBAAA,wBAAAC,sBAAA,GAA1BD,sBAAA,CAA6B1D,IAAI,CAAC,cAAA2D,sBAAA,uBAAlCA,sBAAA,CAAoC3E,UAAU,KAAI,CAAC,EAAC,QACvD;cAAA,GAFSgB,IAAI;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAET,CAAC;YAAA,CACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLnG,OAAA;YAAA8F,QAAA,gBACE9F,OAAA;cAAA8F,QAAA,EAAI;YAAW;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACnB/F,SAAS,CAACiC,GAAG,CAAES,IAAI;cAAA,IAAA4D,sBAAA,EAAAC,sBAAA;cAAA,oBAClB3G,OAAA;gBAAA8F,QAAA,GACG,EAAAY,sBAAA,GAAAlG,aAAa,CAAC4F,QAAQ,CAAC9D,EAAE,CAAC,cAAAoE,sBAAA,wBAAAC,sBAAA,GAA1BD,sBAAA,CAA6B5D,IAAI,CAAC,cAAA6D,sBAAA,uBAAlCA,sBAAA,CAAoCxD,UAAU,KAAI,CAAC,EAAC,QACvD;cAAA,GAFSL,IAAI;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAET,CAAC;YAAA,CACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLnG,OAAA;YAAA8F,QAAA,gBACE9F,OAAA;cAAA8F,QAAA,EAAI;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACpB/F,SAAS,CAACiC,GAAG,CAAES,IAAI;cAAA,IAAA8D,sBAAA,EAAAC,sBAAA;cAAA,oBAClB7G,OAAA;gBAAA8F,QAAA,GACG,EAAAc,sBAAA,GAAApG,aAAa,CAAC4F,QAAQ,CAAC9D,EAAE,CAAC,cAAAsE,sBAAA,wBAAAC,sBAAA,GAA1BD,sBAAA,CAA6B9D,IAAI,CAAC,cAAA+D,sBAAA,uBAAlCA,sBAAA,CAAoCjF,WAAW,KAAI,CAAC,EAAC,QACxD;cAAA,GAFSkB,IAAI;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAET,CAAC;YAAA,CACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,eACL,CACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEPzF,SAAS,iBACRV,OAAA;MAAA8F,QAAA,eACE9F,OAAA;QAAA8F,QAAA,gBACE9F,OAAA;UAAA8F,QAAA,GAAI,eAAa,EAAClF,gBAAgB;QAAA;UAAAoF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxCnG,OAAA;UAAA8F,QAAA,GAAO,aAEL,eAAA9F,OAAA;YAAO8G,IAAI,EAAC,MAAM;YAACrD,KAAK,EAAEzC,SAAU;YAAC+F,QAAQ,EAAEzD;UAAsB;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC,eACRnG,OAAA;UAAA8F,QAAA,GAAO,WAEL,eAAA9F,OAAA;YAAO8G,IAAI,EAAC,MAAM;YAACrD,KAAK,EAAEvC,OAAQ;YAAC6F,QAAQ,EAAEpD;UAAoB;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC,eACRnG,OAAA;UAAA8F,QAAA,gBACE9F,OAAA;YACE8G,IAAI,EAAC,UAAU;YACfE,OAAO,EAAE5F,OAAQ;YACjB2F,QAAQ,EAAEnD;UAAoB;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,EAAC,GAAG,EAAC,UAET;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNnG,OAAA;UAAA8F,QAAA,gBACE9F,OAAA;YACE8G,IAAI,EAAC,UAAU;YACfE,OAAO,EAAE1F,SAAU;YACnByF,QAAQ,EAAEjD;UAAoB;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,EAAC,GAAG,EAAC,SAET;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNnG,OAAA;UACEuG,OAAO,EAAEA,CAAA,KAAM;YACbZ,iBAAiB,CACf/E,gBAAgB,EAChBE,YAAY,EACZE,SAAS,EACTE,OAAO,EACPM,SAAS,EACTE,eAAe,EACfE,WACF,CAAC;YACDoC,gBAAgB,CAAC,CAAC;UACpB,CAAE;UAAA8B,QAAA,EACH;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTnG,OAAA;UAAQuG,OAAO,EAAEvC,gBAAiB;UAAA8B,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9F,EAAA,CAlSIF,aAAa;AAAA8G,EAAA,GAAb9G,aAAa;AAoSnB,eAAeA,aAAa;AAAC,IAAA8G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}