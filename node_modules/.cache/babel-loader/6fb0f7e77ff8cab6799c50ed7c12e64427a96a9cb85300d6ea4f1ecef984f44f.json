{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/EmployeeManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { collection, addDoc, getDocs, updateDoc, doc, deleteDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\"; // Import the Firestore db instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeManagement = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [newEmployee, setNewEmployee] = useState({\n    name: \"\",\n    phone: \"\"\n  });\n  const [editingEmployee, setEditingEmployee] = useState(null);\n\n  // Fetch employees data from Firebase\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        // Get employees collection from Firebase\n        const querySnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n    fetchEmployees();\n  }, []);\n\n  // Handle input change for new employee form\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewEmployee(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle adding a new employee to Firestore\n  const handleAddEmployee = async e => {\n    e.preventDefault();\n    try {\n      if (!newEmployee.name || !newEmployee.phone) {\n        alert(\"Please fill all fields!\");\n        return;\n      }\n      // Add new employee to Firebase\n      const docRef = await addDoc(collection(db, \"employees\"), newEmployee);\n      setEmployees(prev => [...prev, {\n        id: docRef.id,\n        ...newEmployee\n      }]);\n      setNewEmployee({\n        name: \"\",\n        phone: \"\"\n      }); // Reset form after submission\n    } catch (error) {\n      console.error(\"Error adding employee:\", error);\n    }\n  };\n\n  // Handle editing employee details\n  const handleEditEmployee = employee => {\n    setEditingEmployee(employee);\n  };\n  const handleUpdateEmployee = async () => {\n    try {\n      const employeeDoc = doc(db, \"employees\", editingEmployee.id);\n      await updateDoc(employeeDoc, {\n        name: editingEmployee.name,\n        phone: editingEmployee.phone\n      });\n      setEmployees(prev => prev.map(emp => emp.id === editingEmployee.id ? editingEmployee : emp));\n      setEditingEmployee(null); // Close edit mode after update\n    } catch (error) {\n      console.error(\"Error updating employee:\", error);\n    }\n  };\n\n  // Handle deleting an employee\n  const handleDeleteEmployee = async employeeId => {\n    try {\n      const employeeDoc = doc(db, \"employees\", employeeId);\n      await deleteDoc(employeeDoc);\n      setEmployees(prev => prev.filter(emp => emp.id !== employeeId));\n    } catch (error) {\n      console.error(\"Error deleting employee:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddEmployee,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: newEmployee.name,\n        onChange: handleInputChange,\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"phone\",\n        value: newEmployee.phone,\n        onChange: handleInputChange,\n        placeholder: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingEmployee && editingEmployee.id === employee.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editingEmployee.name,\n              onChange: e => setEditingEmployee({\n                ...editingEmployee,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this) : employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingEmployee && editingEmployee.id === employee.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editingEmployee.phone,\n              onChange: e => setEditingEmployee({\n                ...editingEmployee,\n                phone: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this) : employee.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [editingEmployee && editingEmployee.id === employee.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpdateEmployee,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditEmployee(employee),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteEmployee(employee.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeManagement, \"GzpUKVWpwfiuEiTctE8m2jmWPB0=\");\n_c = EmployeeManagement;\nexport default EmployeeManagement;\nvar _c;\n$RefreshReg$(_c, \"EmployeeManagement\");","map":{"version":3,"names":["React","useState","useEffect","collection","addDoc","getDocs","updateDoc","doc","deleteDoc","db","jsxDEV","_jsxDEV","EmployeeManagement","_s","employees","setEmployees","newEmployee","setNewEmployee","name","phone","editingEmployee","setEditingEmployee","fetchEmployees","querySnapshot","employeeData","docs","map","id","data","error","console","handleInputChange","e","value","target","prev","handleAddEmployee","preventDefault","alert","docRef","handleEditEmployee","employee","handleUpdateEmployee","employeeDoc","emp","handleDeleteEmployee","employeeId","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","border","onClick","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/EmployeeManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { collection, addDoc, getDocs, updateDoc, doc, deleteDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\"; // Import the Firestore db instance\n\nconst EmployeeManagement = () => {\n  const [employees, setEmployees] = useState([]);\n  const [newEmployee, setNewEmployee] = useState({\n    name: \"\",\n    phone: \"\",\n  });\n  const [editingEmployee, setEditingEmployee] = useState(null);\n\n  // Fetch employees data from Firebase\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        // Get employees collection from Firebase\n        const querySnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n\n    fetchEmployees();\n  }, []);\n\n  // Handle input change for new employee form\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewEmployee((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Handle adding a new employee to Firestore\n  const handleAddEmployee = async (e) => {\n    e.preventDefault();\n    try {\n      if (!newEmployee.name || !newEmployee.phone) {\n        alert(\"Please fill all fields!\");\n        return;\n      }\n      // Add new employee to Firebase\n      const docRef = await addDoc(collection(db, \"employees\"), newEmployee);\n      setEmployees((prev) => [\n        ...prev,\n        { id: docRef.id, ...newEmployee },\n      ]);\n      setNewEmployee({ name: \"\", phone: \"\" }); // Reset form after submission\n    } catch (error) {\n      console.error(\"Error adding employee:\", error);\n    }\n  };\n\n  // Handle editing employee details\n  const handleEditEmployee = (employee) => {\n    setEditingEmployee(employee);\n  };\n\n  const handleUpdateEmployee = async () => {\n    try {\n      const employeeDoc = doc(db, \"employees\", editingEmployee.id);\n      await updateDoc(employeeDoc, {\n        name: editingEmployee.name,\n        phone: editingEmployee.phone,\n      });\n\n      setEmployees((prev) =>\n        prev.map((emp) =>\n          emp.id === editingEmployee.id ? editingEmployee : emp\n        )\n      );\n      setEditingEmployee(null); // Close edit mode after update\n    } catch (error) {\n      console.error(\"Error updating employee:\", error);\n    }\n  };\n\n  // Handle deleting an employee\n  const handleDeleteEmployee = async (employeeId) => {\n    try {\n      const employeeDoc = doc(db, \"employees\", employeeId);\n      await deleteDoc(employeeDoc);\n      setEmployees((prev) => prev.filter((emp) => emp.id !== employeeId));\n    } catch (error) {\n      console.error(\"Error deleting employee:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Employee Management</h2>\n\n      {/* New Employee Form */}\n      <form onSubmit={handleAddEmployee}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={newEmployee.name}\n          onChange={handleInputChange}\n          placeholder=\"Name\"\n        />\n        <input\n          type=\"text\"\n          name=\"phone\"\n          value={newEmployee.phone}\n          onChange={handleInputChange}\n          placeholder=\"Phone\"\n        />\n        <button type=\"submit\">Add Employee</button>\n      </form>\n\n      {/* Display Employee List */}\n      <h3>Employee List</h3>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Phone</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => (\n            <tr key={employee.id}>\n              <td>\n                {editingEmployee && editingEmployee.id === employee.id ? (\n                  <input\n                    type=\"text\"\n                    value={editingEmployee.name}\n                    onChange={(e) =>\n                      setEditingEmployee({ ...editingEmployee, name: e.target.value })\n                    }\n                  />\n                ) : (\n                  employee.name\n                )}\n              </td>\n              <td>\n                {editingEmployee && editingEmployee.id === employee.id ? (\n                  <input\n                    type=\"text\"\n                    value={editingEmployee.phone}\n                    onChange={(e) =>\n                      setEditingEmployee({ ...editingEmployee, phone: e.target.value })\n                    }\n                  />\n                ) : (\n                  employee.phone\n                )}\n              </td>\n              <td>\n                {editingEmployee && editingEmployee.id === employee.id ? (\n                  <button onClick={handleUpdateEmployee}>Save</button>\n                ) : (\n                  <button onClick={() => handleEditEmployee(employee)}>Edit</button>\n                )}\n                <button onClick={() => handleDeleteEmployee(employee.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default EmployeeManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}