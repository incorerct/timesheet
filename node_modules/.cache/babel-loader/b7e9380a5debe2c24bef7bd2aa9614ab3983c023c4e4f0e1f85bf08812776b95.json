{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport './TimesheetStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth()); // Start with current month\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear()); // Start with current year\n  const [selectedRow, setSelectedRow] = useState(null); // Track selected row for highlighting\n\n  // Generate all days of the current month\n  const generateMonthDays = (year, month) => {\n    const daysInMonth = new Date(year, month + 1, 0).getDate(); // month is 0-indexed\n    const days = [];\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push(`${month + 1}-${day < 10 ? '0' + day : day}`);\n    }\n    return days;\n  };\n\n  // Fetch employee and timesheet data from Firestore\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), snapshot => {\n        const employeeData = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe;\n    };\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, snapshot => {\n        const updatedTimesheetData = {};\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe;\n    };\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n\n  // Handle the time settings for a specific employee and date\n  const handleSetTime = (employeeId, date) => {\n    var _timesheetData$employ, _timesheetData$employ2, _timesheetData$employ3, _timesheetData$employ4, _timesheetData$employ5, _timesheetData$employ6;\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setStartTime(((_timesheetData$employ = timesheetData[employeeId]) === null || _timesheetData$employ === void 0 ? void 0 : (_timesheetData$employ2 = _timesheetData$employ[date]) === null || _timesheetData$employ2 === void 0 ? void 0 : _timesheetData$employ2.startTime) || \"\");\n    setEndTime(((_timesheetData$employ3 = timesheetData[employeeId]) === null || _timesheetData$employ3 === void 0 ? void 0 : (_timesheetData$employ4 = _timesheetData$employ3[date]) === null || _timesheetData$employ4 === void 0 ? void 0 : _timesheetData$employ4.endTime) || \"\");\n    setIsHoliday(((_timesheetData$employ5 = timesheetData[employeeId]) === null || _timesheetData$employ5 === void 0 ? void 0 : (_timesheetData$employ6 = _timesheetData$employ5[date]) === null || _timesheetData$employ6 === void 0 ? void 0 : _timesheetData$employ6.isHoliday) || false);\n    setModalOpen(true);\n\n    // Set the clicked row as active\n    setSelectedRow(`${employeeId}-${date}`);\n  };\n\n  // Handle changes in start time\n  const handleStartTimeChange = event => {\n    const newStartTime = event.target.value;\n    setStartTime(newStartTime);\n    calculateTimes(newStartTime, endTime, nextDay, isHoliday);\n  };\n\n  // Handle changes in end time\n  const handleEndTimeChange = event => {\n    const newEndTime = event.target.value;\n    setEndTime(newEndTime);\n    calculateTimes(startTime, newEndTime, nextDay, isHoliday);\n  };\n\n  // Toggle next day status\n  const handleNextDayToggle = () => {\n    const newNextDay = !nextDay;\n    setNextDay(newNextDay);\n    calculateTimes(startTime, endTime, newNextDay, isHoliday);\n  };\n\n  // Toggle holiday status\n  const handleHolidayToggle = () => {\n    const newIsHoliday = !isHoliday;\n    setIsHoliday(newIsHoliday);\n    calculateTimes(startTime, endTime, nextDay, newIsHoliday);\n  };\n\n  // Calculate total time, night shift hours, and normal/holiday time\n  const calculateTimes = (start, end, isNextDay, isHoliday) => {\n    if (!start || !end) return;\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0);\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1);\n    nightShiftEnd.setHours(6, 0, 0);\n    let nightShiftHours = 0;\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n    const normalTime = isHoliday ? 0 : totalTimeInHours - nightShiftHours;\n    setNormalTime(normalTime.toFixed(2));\n    const holidayTime = isHoliday ? totalTimeInHours : 0;\n    setHolidayTime(holidayTime.toFixed(2));\n  };\n\n  // Save timesheet data to Firestore\n  const saveTimesheetDataToFirebase = async () => {\n    try {\n      var _await$getDoc$data;\n      const timesheetDocRef = doc(db, \"timesheets\", selectedEmployee);\n      const timesheetData = ((_await$getDoc$data = (await getDoc(timesheetDocRef)).data()) === null || _await$getDoc$data === void 0 ? void 0 : _await$getDoc$data.hours) || {};\n      timesheetData[selectedDate] = {\n        startTime,\n        endTime,\n        totalTime: parseFloat(totalTime),\n        nightShift: parseFloat(nightShiftHours),\n        holidayTime: parseFloat(holidayTime),\n        normalTime: parseFloat(normalTime),\n        isHoliday\n      };\n      await setDoc(timesheetDocRef, {\n        hours: timesheetData\n      });\n      setModalOpen(false);\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  // Calculate monthly totals for an employee\n  const calculateMonthlyTotal = employeeId => {\n    let monthlyTotal = {\n      normalTime: 0,\n      nightShift: 0,\n      holidayTime: 0,\n      totalTime: 0\n    };\n    const monthDays = generateMonthDays(currentYear, currentMonth);\n    monthDays.forEach(date => {\n      var _timesheetData$employ7;\n      const data = (_timesheetData$employ7 = timesheetData[employeeId]) === null || _timesheetData$employ7 === void 0 ? void 0 : _timesheetData$employ7[date];\n      if (data) {\n        monthlyTotal.normalTime += data.normalTime || 0;\n        monthlyTotal.nightShift += data.nightShift || 0;\n        monthlyTotal.holidayTime += data.holidayTime || 0;\n        monthlyTotal.totalTime += data.totalTime || 0;\n      }\n    });\n    return monthlyTotal;\n  };\n\n  // Change to previous month\n  const goToPreviousMonth = () => {\n    setCurrentMonth(prevMonth => prevMonth === 0 ? 11 : prevMonth - 1);\n    if (currentMonth === 0) setCurrentYear(currentYear - 1); // Handle year change\n  };\n\n  // Change to next month\n  const goToNextMonth = () => {\n    setCurrentMonth(prevMonth => prevMonth === 11 ? 0 : prevMonth + 1);\n    if (currentMonth === 11) setCurrentYear(currentYear + 1); // Handle year change\n  };\n\n  // Get the days for the selected month\n  const monthDays = generateMonthDays(currentYear, currentMonth);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToPreviousMonth,\n      children: \"Previous Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToNextMonth,\n      children: \"Next Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), monthDays.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map((employee, employeeIndex) => {\n          const monthlyTotal = calculateMonthlyTotal(employee.id);\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              className: `${employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"} ${selectedRow === `${employee.id}-regular` ? \"highlighted-row\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                rowSpan: 4,\n                children: employee.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"regular\",\n                onClick: () => handleSetTime(employee.id, 'regular'),\n                children: \"Regular\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this), monthDays.map(date => {\n                var _timesheetData$employ8, _timesheetData$employ9, _timesheetData$employ10, _timesheetData$employ11;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ8 = timesheetData[employee.id]) === null || _timesheetData$employ8 === void 0 ? void 0 : (_timesheetData$employ9 = _timesheetData$employ8[date]) === null || _timesheetData$employ9 === void 0 ? void 0 : _timesheetData$employ9.normalTime) === 0 ? \"0\" : (_timesheetData$employ10 = timesheetData[employee.id]) !== null && _timesheetData$employ10 !== void 0 && (_timesheetData$employ11 = _timesheetData$employ10[date]) !== null && _timesheetData$employ11 !== void 0 && _timesheetData$employ11.normalTime ? `${timesheetData[employee.id][date].normalTime}` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthlyTotal.normalTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: `${employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"} ${selectedRow === `${employee.id}-night` ? \"highlighted-row\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"night\",\n                onClick: () => handleSetTime(employee.id, 'night'),\n                children: \"Night\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this), monthDays.map(date => {\n                var _timesheetData$employ12, _timesheetData$employ13, _timesheetData$employ14, _timesheetData$employ15;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ12 = timesheetData[employee.id]) === null || _timesheetData$employ12 === void 0 ? void 0 : (_timesheetData$employ13 = _timesheetData$employ12[date]) === null || _timesheetData$employ13 === void 0 ? void 0 : _timesheetData$employ13.nightShift) === 0 ? \"0\" : (_timesheetData$employ14 = timesheetData[employee.id]) !== null && _timesheetData$employ14 !== void 0 && (_timesheetData$employ15 = _timesheetData$employ14[date]) !== null && _timesheetData$employ15 !== void 0 && _timesheetData$employ15.nightShift ? `${timesheetData[employee.id][date].nightShift}` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthlyTotal.nightShift\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: `${employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"} ${selectedRow === `${employee.id}-holiday` ? \"highlighted-row\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"holiday\",\n                onClick: () => handleSetTime(employee.id, 'holiday'),\n                children: \"Holiday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this), monthDays.map(date => {\n                var _timesheetData$employ16, _timesheetData$employ17, _timesheetData$employ18, _timesheetData$employ19;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ16 = timesheetData[employee.id]) === null || _timesheetData$employ16 === void 0 ? void 0 : (_timesheetData$employ17 = _timesheetData$employ16[date]) === null || _timesheetData$employ17 === void 0 ? void 0 : _timesheetData$employ17.holidayTime) === 0 ? \"0\" : (_timesheetData$employ18 = timesheetData[employee.id]) !== null && _timesheetData$employ18 !== void 0 && (_timesheetData$employ19 = _timesheetData$employ18[date]) !== null && _timesheetData$employ19 !== void 0 && _timesheetData$employ19.holidayTime ? `${timesheetData[employee.id][date].holidayTime}` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthlyTotal.holidayTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: `${employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"} ${selectedRow === `${employee.id}-total` ? \"highlighted-row\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"total\",\n                onClick: () => handleSetTime(employee.id, 'total'),\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this), monthDays.map(date => {\n                var _timesheetData$employ20, _timesheetData$employ21, _timesheetData$employ22, _timesheetData$employ23;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => handleSetTime(employee.id, date),\n                  children: ((_timesheetData$employ20 = timesheetData[employee.id]) === null || _timesheetData$employ20 === void 0 ? void 0 : (_timesheetData$employ21 = _timesheetData$employ20[date]) === null || _timesheetData$employ21 === void 0 ? void 0 : _timesheetData$employ21.totalTime) === 0 ? \"0\" : (_timesheetData$employ22 = timesheetData[employee.id]) !== null && _timesheetData$employ22 !== void 0 && (_timesheetData$employ23 = _timesheetData$employ22[date]) !== null && _timesheetData$employ23 !== void 0 && _timesheetData$employ23.totalTime ? `${timesheetData[employee.id][date].totalTime}` : \"\"\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: monthlyTotal.totalTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Start Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: handleStartTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"End Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: endTime,\n          onChange: handleEndTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: nextDay,\n            onChange: handleNextDayToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this), \"Next Day\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isHoliday,\n            onChange: handleHolidayToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this), \"Holiday\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveTimesheetDataToFirebase,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setModalOpen(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"g2kwKxj3lwHXjn6uAIdUHDmTEtM=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["React","useState","useEffect","collection","onSnapshot","doc","setDoc","getDoc","db","jsxDEV","_jsxDEV","TimesheetList","_s","employees","setEmployees","timesheetData","setTimesheetData","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","nextDay","setNextDay","isHoliday","setIsHoliday","totalTime","setTotalTime","nightShiftHours","setNightShiftHours","holidayTime","setHolidayTime","normalTime","setNormalTime","currentMonth","setCurrentMonth","Date","getMonth","currentYear","setCurrentYear","getFullYear","selectedRow","setSelectedRow","generateMonthDays","year","month","daysInMonth","getDate","days","day","push","fetchEmployees","unsubscribe","snapshot","employeeData","docs","map","id","data","fetchTimesheetData","timesheetDataRef","updatedTimesheetData","forEach","employeeId","hours","date","record","Object","entries","parseFloat","nightShift","Boolean","handleSetTime","_timesheetData$employ","_timesheetData$employ2","_timesheetData$employ3","_timesheetData$employ4","_timesheetData$employ5","_timesheetData$employ6","handleStartTimeChange","event","newStartTime","target","value","calculateTimes","handleEndTimeChange","newEndTime","handleNextDayToggle","newNextDay","handleHolidayToggle","newIsHoliday","start","end","isNextDay","startHours","startMinutes","split","Number","endHours","endMinutes","startDate","setHours","endDate","setDate","totalTimeInHours","nightShiftStart","nightShiftEnd","nightShiftStartTime","nightShiftEndTime","toFixed","saveTimesheetDataToFirebase","_await$getDoc$data","timesheetDocRef","error","console","calculateMonthlyTotal","monthlyTotal","monthDays","_timesheetData$employ7","goToPreviousMonth","prevMonth","goToNextMonth","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","employee","employeeIndex","Fragment","className","rowSpan","name","_timesheetData$employ8","_timesheetData$employ9","_timesheetData$employ10","_timesheetData$employ11","_timesheetData$employ12","_timesheetData$employ13","_timesheetData$employ14","_timesheetData$employ15","_timesheetData$employ16","_timesheetData$employ17","_timesheetData$employ18","_timesheetData$employ19","_timesheetData$employ20","_timesheetData$employ21","_timesheetData$employ22","_timesheetData$employ23","type","onChange","checked","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { collection, onSnapshot, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport './TimesheetStyles.css';\n\nconst TimesheetList = () => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  const [normalTime, setNormalTime] = useState(0);\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth()); // Start with current month\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear()); // Start with current year\n  const [selectedRow, setSelectedRow] = useState(null); // Track selected row for highlighting\n\n  // Generate all days of the current month\n  const generateMonthDays = (year, month) => {\n    const daysInMonth = new Date(year, month + 1, 0).getDate(); // month is 0-indexed\n    const days = [];\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push(`${month + 1}-${day < 10 ? '0' + day : day}`);\n    }\n    return days;\n  };\n\n  // Fetch employee and timesheet data from Firestore\n  useEffect(() => {\n    const fetchEmployees = () => {\n      const unsubscribe = onSnapshot(collection(db, \"employees\"), (snapshot) => {\n        const employeeData = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n      });\n      return unsubscribe;\n    };\n\n    const fetchTimesheetData = () => {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const unsubscribe = onSnapshot(timesheetDataRef, (snapshot) => {\n        const updatedTimesheetData = {};\n        snapshot.forEach((doc) => {\n          const data = doc.data();\n          const employeeId = doc.id;\n          if (data.hours) {\n            updatedTimesheetData[employeeId] = {};\n            for (const [date, record] of Object.entries(data.hours)) {\n              updatedTimesheetData[employeeId][date] = {\n                startTime: record.startTime,\n                endTime: record.endTime,\n                totalTime: parseFloat(record.totalTime),\n                nightShift: parseFloat(record.nightShift),\n                holidayTime: parseFloat(record.holidayTime),\n                isHoliday: Boolean(record.isHoliday),\n                normalTime: parseFloat(record.normalTime) || 0,\n              };\n            }\n          }\n        });\n        setTimesheetData(updatedTimesheetData);\n      });\n      return unsubscribe;\n    };\n\n    fetchEmployees();\n    fetchTimesheetData();\n  }, []);\n\n  // Handle the time settings for a specific employee and date\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setStartTime(timesheetData[employeeId]?.[date]?.startTime || \"\");\n    setEndTime(timesheetData[employeeId]?.[date]?.endTime || \"\");\n    setIsHoliday(timesheetData[employeeId]?.[date]?.isHoliday || false);\n    setModalOpen(true);\n\n    // Set the clicked row as active\n    setSelectedRow(`${employeeId}-${date}`);\n  };\n\n  // Handle changes in start time\n  const handleStartTimeChange = (event) => {\n    const newStartTime = event.target.value;\n    setStartTime(newStartTime);\n    calculateTimes(newStartTime, endTime, nextDay, isHoliday);\n  };\n\n  // Handle changes in end time\n  const handleEndTimeChange = (event) => {\n    const newEndTime = event.target.value;\n    setEndTime(newEndTime);\n    calculateTimes(startTime, newEndTime, nextDay, isHoliday);\n  };\n\n  // Toggle next day status\n  const handleNextDayToggle = () => {\n    const newNextDay = !nextDay;\n    setNextDay(newNextDay);\n    calculateTimes(startTime, endTime, newNextDay, isHoliday);\n  };\n\n  // Toggle holiday status\n  const handleHolidayToggle = () => {\n    const newIsHoliday = !isHoliday;\n    setIsHoliday(newIsHoliday);\n    calculateTimes(startTime, endTime, nextDay, newIsHoliday);\n  };\n\n  // Calculate total time, night shift hours, and normal/holiday time\n  const calculateTimes = (start, end, isNextDay, isHoliday) => {\n    if (!start || !end) return;\n\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);\n\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0);\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1);\n    nightShiftEnd.setHours(6, 0, 0);\n\n    let nightShiftHours = 0;\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n\n    const normalTime = isHoliday ? 0 : totalTimeInHours - nightShiftHours;\n    setNormalTime(normalTime.toFixed(2));\n\n    const holidayTime = isHoliday ? totalTimeInHours : 0;\n    setHolidayTime(holidayTime.toFixed(2));\n  };\n\n  // Save timesheet data to Firestore\n  const saveTimesheetDataToFirebase = async () => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", selectedEmployee);\n      const timesheetData = (await getDoc(timesheetDocRef)).data()?.hours || {};\n      timesheetData[selectedDate] = {\n        startTime,\n        endTime,\n        totalTime: parseFloat(totalTime),\n        nightShift: parseFloat(nightShiftHours),\n        holidayTime: parseFloat(holidayTime),\n        normalTime: parseFloat(normalTime),\n        isHoliday,\n      };\n      await setDoc(timesheetDocRef, { hours: timesheetData });\n      setModalOpen(false);\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  // Calculate monthly totals for an employee\n  const calculateMonthlyTotal = (employeeId) => {\n    let monthlyTotal = {\n      normalTime: 0,\n      nightShift: 0,\n      holidayTime: 0,\n      totalTime: 0,\n    };\n\n    const monthDays = generateMonthDays(currentYear, currentMonth);\n    monthDays.forEach((date) => {\n      const data = timesheetData[employeeId]?.[date];\n      if (data) {\n        monthlyTotal.normalTime += data.normalTime || 0;\n        monthlyTotal.nightShift += data.nightShift || 0;\n        monthlyTotal.holidayTime += data.holidayTime || 0;\n        monthlyTotal.totalTime += data.totalTime || 0;\n      }\n    });\n\n    return monthlyTotal;\n  };\n\n  // Change to previous month\n  const goToPreviousMonth = () => {\n    setCurrentMonth((prevMonth) => (prevMonth === 0 ? 11 : prevMonth - 1));\n    if (currentMonth === 0) setCurrentYear(currentYear - 1); // Handle year change\n  };\n\n  // Change to next month\n  const goToNextMonth = () => {\n    setCurrentMonth((prevMonth) => (prevMonth === 11 ? 0 : prevMonth + 1));\n    if (currentMonth === 11) setCurrentYear(currentYear + 1); // Handle year change\n  };\n\n  // Get the days for the selected month\n  const monthDays = generateMonthDays(currentYear, currentMonth);\n\n  return (\n    <div>\n      <button onClick={goToPreviousMonth}>Previous Month</button>\n      <button onClick={goToNextMonth}>Next Month</button>\n      <table>\n        <thead>\n          <tr>\n            <th>Employee</th>\n            <th>Type</th>\n            {monthDays.map((date) => (\n              <th key={date}>{date}</th>\n            ))}\n            <th>Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee, employeeIndex) => {\n            const monthlyTotal = calculateMonthlyTotal(employee.id);\n            return (\n              <React.Fragment key={employee.id}>\n                <tr\n                  className={`${\n                    employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"\n                  } ${selectedRow === `${employee.id}-regular` ? \"highlighted-row\" : \"\"}`}\n                >\n                  <td rowSpan={4}>{employee.name}</td>\n                  <td className=\"regular\" onClick={() => handleSetTime(employee.id, 'regular')}>Regular</td>\n                  {monthDays.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.normalTime === 0\n                        ? \"0\"\n                        : timesheetData[employee.id]?.[date]?.normalTime\n                        ? `${timesheetData[employee.id][date].normalTime}`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{monthlyTotal.normalTime}</td>\n                </tr>\n                <tr\n                  className={`${\n                    employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"\n                  } ${selectedRow === `${employee.id}-night` ? \"highlighted-row\" : \"\"}`}\n                >\n                  <td className=\"night\" onClick={() => handleSetTime(employee.id, 'night')}>Night</td>\n                  {monthDays.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.nightShift === 0\n                        ? \"0\"\n                        : timesheetData[employee.id]?.[date]?.nightShift\n                        ? `${timesheetData[employee.id][date].nightShift}`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{monthlyTotal.nightShift}</td>\n                </tr>\n                <tr\n                  className={`${\n                    employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"\n                  } ${selectedRow === `${employee.id}-holiday` ? \"highlighted-row\" : \"\"}`}\n                >\n                  <td className=\"holiday\" onClick={() => handleSetTime(employee.id, 'holiday')}>Holiday</td>\n                  {monthDays.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.holidayTime === 0\n                        ? \"0\"\n                        : timesheetData[employee.id]?.[date]?.holidayTime\n                        ? `${timesheetData[employee.id][date].holidayTime}`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{monthlyTotal.holidayTime}</td>\n                </tr>\n                <tr\n                  className={`${\n                    employeeIndex % 2 === 0 ? \"odd-row\" : \"even-row\"\n                  } ${selectedRow === `${employee.id}-total` ? \"highlighted-row\" : \"\"}`}\n                >\n                  <td className=\"total\" onClick={() => handleSetTime(employee.id, 'total')}>Total</td>\n                  {monthDays.map((date) => (\n                    <td key={date} onClick={() => handleSetTime(employee.id, date)}>\n                      {timesheetData[employee.id]?.[date]?.totalTime === 0\n                        ? \"0\"\n                        : timesheetData[employee.id]?.[date]?.totalTime\n                        ? `${timesheetData[employee.id][date].totalTime}`\n                        : \"\"}\n                    </td>\n                  ))}\n                  <td>{monthlyTotal.totalTime}</td>\n                </tr>\n              </React.Fragment>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {modalOpen && (\n        <div className=\"modal\">\n          {/* Modal content */}\n          <div className=\"modal-content\">\n            <label>Start Time</label>\n            <input\n              type=\"time\"\n              value={startTime}\n              onChange={handleStartTimeChange}\n            />\n            <label>End Time</label>\n            <input\n              type=\"time\"\n              value={endTime}\n              onChange={handleEndTimeChange}\n            />\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={nextDay}\n                onChange={handleNextDayToggle}\n              />\n              Next Day\n            </label>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={isHoliday}\n                onChange={handleHolidayToggle}\n              />\n              Holiday\n            </label>\n            <div>\n              <button onClick={saveTimesheetDataToFirebase}>Save</button>\n              <button onClick={() => setModalOpen(false)}>Close</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}