{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { collection, getDocs, getDoc, doc, setDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = ({\n  weekDates\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [timeAdjustments, setTimeAdjustments] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const employeeSnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = employeeSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n        const settingsDocRef = doc(db, \"timeAdjustments\", \"settings\");\n        const settingsDoc = await getDoc(settingsDocRef);\n        if (settingsDoc.exists()) {\n          setTimeAdjustments(settingsDoc.data());\n        } else {\n          console.log(\"No time adjustments found\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Fetch timesheet data when employees or weekDates change\n  const fetchTimesheetData = async () => {\n    if (employees.length > 0 && weekDates.length > 0) {\n      try {\n        const timesheetDataRef = collection(db, \"timesheets\");\n        const snapshot = await getDocs(timesheetDataRef);\n        const timesheetData = {};\n        snapshot.forEach(doc => {\n          const employeeData = doc.data().hours;\n          for (const [date, data] of Object.entries(employeeData)) {\n            if (!timesheetData[doc.id]) timesheetData[doc.id] = {};\n            timesheetData[doc.id][date] = data;\n          }\n        });\n        setTimesheetData(timesheetData); // Update timesheet data after fetching\n      } catch (error) {\n        console.error(\"Error fetching timesheet data:\", error);\n      }\n    }\n  };\n  useEffect(() => {\n    fetchTimesheetData(); // Call fetchTimesheetData after employees or weekDates are updated\n  }, [employees, weekDates]); // Re-run when employees or weekDates change\n\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setModalOpen(true);\n  };\n  const handleStartTimeChange = event => {\n    setStartTime(event.target.value);\n    calculateTimes(event.target.value, endTime, nextDay);\n  };\n  const handleEndTimeChange = event => {\n    setEndTime(event.target.value);\n    calculateTimes(startTime, event.target.value, nextDay);\n  };\n  const handleNextDayToggle = () => {\n    setNextDay(prev => !prev);\n    calculateTimes(startTime, endTime, !nextDay); // Ensure we recalculate when the \"nextDay\" state changes\n  };\n  const handleHolidayToggle = () => {\n    setIsHoliday(prev => !prev);\n    if (!isHoliday) {\n      setHolidayTime(totalTime); // Assign holiday time\n      setTotalTime(0);\n      setNightShiftHours(0);\n    } else {\n      setHolidayTime(0);\n      calculateTimes(startTime, endTime, nextDay); // Recalculate if unchecking\n    }\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  };\n  const calculateTimes = (start, end, isNextDay) => {\n    if (!start || !end) return;\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n\n    // Adjust end time for next day if needed\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1); // Move end date to the next day if \"Next Day\" is checked\n\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0); // 10:00 PM\n\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1); // Move to the next day\n    nightShiftEnd.setHours(6, 0, 0); // 6:00 AM\n\n    let nightShiftHours = 0;\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n  };\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId);\n      const timesheetData = await getDoc(timesheetDocRef);\n      let updatedData = {};\n      if (timesheetData.exists()) {\n        updatedData = timesheetData.data().hours;\n        updatedData[date] = {\n          startTime: start,\n          endTime: end,\n          totalTime,\n          nightShift,\n          holidayTime,\n          isHoliday\n        };\n      } else {\n        updatedData = {\n          [date]: {\n            startTime: start,\n            endTime: end,\n            totalTime,\n            nightShift,\n            holidayTime,\n            isHoliday\n          }\n        };\n      }\n      await setDoc(timesheetDocRef, {\n        hours: updatedData\n      });\n      fetchTimesheetData(); // Re-fetch the data after saving\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n  const handleInputChange = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    setTimesheetData(prevData => {\n      const newData = {\n        ...prevData\n      };\n      newData[employeeId][date] = {\n        startTime: start,\n        endTime: end,\n        totalTime,\n        nightShift,\n        holidayTime,\n        isHoliday\n      };\n      return newData;\n    });\n    await saveTimesheetDataToFirebase(employeeId, date, start, end, totalTime, nightShift, holidayTime);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), weekDates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), weekDates.map(date => {\n            var _timesheetData$employ, _timesheetData$employ2;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSetTime(employee.id, date),\n                children: \"Set Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), ((_timesheetData$employ = timesheetData[employee.id]) === null || _timesheetData$employ === void 0 ? void 0 : (_timesheetData$employ2 = _timesheetData$employ[date]) === null || _timesheetData$employ2 === void 0 ? void 0 : _timesheetData$employ2.totalTime) && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Total Time: \", timesheetData[employee.id][date].totalTime, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Night Shift: \", timesheetData[employee.id][date].nightShift, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Holiday Time: \", timesheetData[employee.id][date].holidayTime, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this)]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this);\n          })]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Set Time for \", selectedEmployee]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Start Time: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: handleStartTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"End Time: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: endTime,\n          onChange: handleEndTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Next Day: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: nextDay,\n          onChange: handleNextDayToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Holiday: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isHoliday,\n          onChange: handleHolidayToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Time: \", totalTime, \" hours\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Night Shift Hours: \", nightShiftHours, \" hours\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Holiday Time: \", holidayTime, \" hours\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleInputChange(selectedEmployee, selectedDate, startTime, endTime, totalTime, nightShiftHours, holidayTime);\n            handleCloseModal();\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCloseModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"8TTN5bya+QQmNB1t74jEmoHmrcY=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["useState","useEffect","collection","getDocs","getDoc","doc","setDoc","db","jsxDEV","_jsxDEV","TimesheetList","weekDates","_s","employees","setEmployees","timesheetData","setTimesheetData","timeAdjustments","setTimeAdjustments","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","nextDay","setNextDay","isHoliday","setIsHoliday","totalTime","setTotalTime","nightShiftHours","setNightShiftHours","holidayTime","setHolidayTime","fetchData","employeeSnapshot","employeeData","docs","map","id","data","settingsDocRef","settingsDoc","exists","console","log","error","fetchTimesheetData","length","timesheetDataRef","snapshot","forEach","hours","date","Object","entries","handleSetTime","employeeId","handleStartTimeChange","event","target","value","calculateTimes","handleEndTimeChange","handleNextDayToggle","prev","handleHolidayToggle","handleCloseModal","start","end","isNextDay","startHours","startMinutes","split","Number","endHours","endMinutes","startDate","Date","setHours","endDate","setDate","getDate","totalTimeInHours","nightShiftStart","nightShiftEnd","nightShiftStartTime","nightShiftEndTime","toFixed","saveTimesheetDataToFirebase","nightShift","timesheetDocRef","updatedData","handleInputChange","prevData","newData","children","border","fileName","_jsxFileName","lineNumber","columnNumber","employee","name","_timesheetData$employ","_timesheetData$employ2","onClick","className","type","onChange","checked","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { collection, getDocs, getDoc, doc, setDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\n\nconst TimesheetList = ({ weekDates }) => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [timeAdjustments, setTimeAdjustments] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const employeeSnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = employeeSnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n\n        const settingsDocRef = doc(db, \"timeAdjustments\", \"settings\");\n        const settingsDoc = await getDoc(settingsDocRef);\n        if (settingsDoc.exists()) {\n          setTimeAdjustments(settingsDoc.data());\n        } else {\n          console.log(\"No time adjustments found\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // Fetch timesheet data when employees or weekDates change\n  const fetchTimesheetData = async () => {\n    if (employees.length > 0 && weekDates.length > 0) {\n      try {\n        const timesheetDataRef = collection(db, \"timesheets\");\n        const snapshot = await getDocs(timesheetDataRef);\n\n        const timesheetData = {};\n\n        snapshot.forEach(doc => {\n          const employeeData = doc.data().hours;\n          for (const [date, data] of Object.entries(employeeData)) {\n            if (!timesheetData[doc.id]) timesheetData[doc.id] = {};\n            timesheetData[doc.id][date] = data;\n          }\n        });\n\n        setTimesheetData(timesheetData); // Update timesheet data after fetching\n      } catch (error) {\n        console.error(\"Error fetching timesheet data:\", error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchTimesheetData();  // Call fetchTimesheetData after employees or weekDates are updated\n  }, [employees, weekDates]);  // Re-run when employees or weekDates change\n\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setModalOpen(true);\n  };\n\n  const handleStartTimeChange = (event) => {\n    setStartTime(event.target.value);\n    calculateTimes(event.target.value, endTime, nextDay);\n  };\n\n  const handleEndTimeChange = (event) => {\n    setEndTime(event.target.value);\n    calculateTimes(startTime, event.target.value, nextDay);\n  };\n\n  const handleNextDayToggle = () => {\n    setNextDay((prev) => !prev);\n    calculateTimes(startTime, endTime, !nextDay); // Ensure we recalculate when the \"nextDay\" state changes\n  };\n\n  const handleHolidayToggle = () => {\n    setIsHoliday((prev) => !prev);\n    if (!isHoliday) {\n      setHolidayTime(totalTime);  // Assign holiday time\n      setTotalTime(0);\n      setNightShiftHours(0);\n    } else {\n      setHolidayTime(0);\n      calculateTimes(startTime, endTime, nextDay);  // Recalculate if unchecking\n    }\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  };\n\n  const calculateTimes = (start, end, isNextDay) => {\n    if (!start || !end) return;\n\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n\n    // Adjust end time for next day if needed\n    if (isNextDay) endDate.setDate(endDate.getDate() + 1);  // Move end date to the next day if \"Next Day\" is checked\n\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0); // 10:00 PM\n\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1); // Move to the next day\n    nightShiftEnd.setHours(6, 0, 0); // 6:00 AM\n\n    let nightShiftHours = 0;\n\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n  };\n\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId);\n      const timesheetData = await getDoc(timesheetDocRef);\n\n      let updatedData = {};\n\n      if (timesheetData.exists()) {\n        updatedData = timesheetData.data().hours;\n        updatedData[date] = { startTime: start, endTime: end, totalTime, nightShift, holidayTime, isHoliday };\n      } else {\n        updatedData = { [date]: { startTime: start, endTime: end, totalTime, nightShift, holidayTime, isHoliday } };\n      }\n\n      await setDoc(timesheetDocRef, { hours: updatedData });\n      fetchTimesheetData(); // Re-fetch the data after saving\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  const handleInputChange = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    setTimesheetData((prevData) => {\n      const newData = { ...prevData };\n      newData[employeeId][date] = { startTime: start, endTime: end, totalTime, nightShift, holidayTime, isHoliday };\n      return newData;\n    });\n\n    await saveTimesheetDataToFirebase(employeeId, date, start, end, totalTime, nightShift, holidayTime);\n  };\n\n  return (\n    <div>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Employee</th>\n            {weekDates.map((date) => (\n              <th key={date}>{date}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => (\n            <tr key={employee.id}>\n              <td>{employee.name}</td>\n              {weekDates.map((date) => (\n                <td key={date}>\n                  <button onClick={() => handleSetTime(employee.id, date)}>Set Time</button>\n                  {timesheetData[employee.id]?.[date]?.totalTime && (\n                    <div>\n                      <p>Total Time: {timesheetData[employee.id][date].totalTime} hours</p>\n                      <p>Night Shift: {timesheetData[employee.id][date].nightShift} hours</p>\n                      <p>Holiday Time: {timesheetData[employee.id][date].holidayTime} hours</p>\n                    </div>\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {modalOpen && (\n        <div className=\"modal\">\n          <h2>Set Time for {selectedEmployee}</h2>\n          <div>\n            <label>Start Time: </label>\n            <input type=\"time\" value={startTime} onChange={handleStartTimeChange} />\n          </div>\n          <div>\n            <label>End Time: </label>\n            <input type=\"time\" value={endTime} onChange={handleEndTimeChange} />\n          </div>\n          <div>\n            <label>Next Day: </label>\n            <input type=\"checkbox\" checked={nextDay} onChange={handleNextDayToggle} />\n          </div>\n          <div>\n            <label>Holiday: </label>\n            <input type=\"checkbox\" checked={isHoliday} onChange={handleHolidayToggle} />\n          </div>\n          <div>\n            <p>Total Time: {totalTime} hours</p>\n            <p>Night Shift Hours: {nightShiftHours} hours</p>\n            <p>Holiday Time: {holidayTime} hours</p>\n          </div>\n          <div>\n            <button\n              onClick={() => {\n                handleInputChange(selectedEmployee, selectedDate, startTime, endTime, totalTime, nightShiftHours, holidayTime);\n                handleCloseModal();\n              }}\n            >\n              Save\n            </button>\n            <button onClick={handleCloseModal}>Cancel</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,UAAU,EAAEC,OAAO,EAAEC,MAAM,EAAEC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAC7E,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACqB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC+B,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiC,SAAS,EAAEC,YAAY,CAAC,GAAGlC,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACmC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpC,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,CAAC,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,MAAMsC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,gBAAgB,GAAG,MAAMrC,OAAO,CAACD,UAAU,CAACK,EAAE,EAAE,WAAW,CAAC,CAAC;QACnE,MAAMkC,YAAY,GAAGD,gBAAgB,CAACE,IAAI,CAACC,GAAG,CAAEtC,GAAG,KAAM;UACvDuC,EAAE,EAAEvC,GAAG,CAACuC,EAAE;UACV,GAAGvC,GAAG,CAACwC,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QACH/B,YAAY,CAAC2B,YAAY,CAAC;QAE1B,MAAMK,cAAc,GAAGzC,GAAG,CAACE,EAAE,EAAE,iBAAiB,EAAE,UAAU,CAAC;QAC7D,MAAMwC,WAAW,GAAG,MAAM3C,MAAM,CAAC0C,cAAc,CAAC;QAChD,IAAIC,WAAW,CAACC,MAAM,CAAC,CAAC,EAAE;UACxB9B,kBAAkB,CAAC6B,WAAW,CAACF,IAAI,CAAC,CAAC,CAAC;QACxC,CAAC,MAAM;UACLI,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QAC1C;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDZ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMa,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAIvC,SAAS,CAACwC,MAAM,GAAG,CAAC,IAAI1C,SAAS,CAAC0C,MAAM,GAAG,CAAC,EAAE;MAChD,IAAI;QACF,MAAMC,gBAAgB,GAAGpD,UAAU,CAACK,EAAE,EAAE,YAAY,CAAC;QACrD,MAAMgD,QAAQ,GAAG,MAAMpD,OAAO,CAACmD,gBAAgB,CAAC;QAEhD,MAAMvC,aAAa,GAAG,CAAC,CAAC;QAExBwC,QAAQ,CAACC,OAAO,CAACnD,GAAG,IAAI;UACtB,MAAMoC,YAAY,GAAGpC,GAAG,CAACwC,IAAI,CAAC,CAAC,CAACY,KAAK;UACrC,KAAK,MAAM,CAACC,IAAI,EAAEb,IAAI,CAAC,IAAIc,MAAM,CAACC,OAAO,CAACnB,YAAY,CAAC,EAAE;YACvD,IAAI,CAAC1B,aAAa,CAACV,GAAG,CAACuC,EAAE,CAAC,EAAE7B,aAAa,CAACV,GAAG,CAACuC,EAAE,CAAC,GAAG,CAAC,CAAC;YACtD7B,aAAa,CAACV,GAAG,CAACuC,EAAE,CAAC,CAACc,IAAI,CAAC,GAAGb,IAAI;UACpC;QACF,CAAC,CAAC;QAEF7B,gBAAgB,CAACD,aAAa,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOoC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF;EACF,CAAC;EAEDlD,SAAS,CAAC,MAAM;IACdmD,kBAAkB,CAAC,CAAC,CAAC,CAAE;EACzB,CAAC,EAAE,CAACvC,SAAS,EAAEF,SAAS,CAAC,CAAC,CAAC,CAAE;;EAE7B,MAAMkD,aAAa,GAAGA,CAACC,UAAU,EAAEJ,IAAI,KAAK;IAC1CpC,mBAAmB,CAACwC,UAAU,CAAC;IAC/BtC,eAAe,CAACkC,IAAI,CAAC;IACrBtC,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAM2C,qBAAqB,GAAIC,KAAK,IAAK;IACvCtC,YAAY,CAACsC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAChCC,cAAc,CAACH,KAAK,CAACC,MAAM,CAACC,KAAK,EAAEvC,OAAO,EAAEE,OAAO,CAAC;EACtD,CAAC;EAED,MAAMuC,mBAAmB,GAAIJ,KAAK,IAAK;IACrCpC,UAAU,CAACoC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC9BC,cAAc,CAAC1C,SAAS,EAAEuC,KAAK,CAACC,MAAM,CAACC,KAAK,EAAErC,OAAO,CAAC;EACxD,CAAC;EAED,MAAMwC,mBAAmB,GAAGA,CAAA,KAAM;IAChCvC,UAAU,CAAEwC,IAAI,IAAK,CAACA,IAAI,CAAC;IAC3BH,cAAc,CAAC1C,SAAS,EAAEE,OAAO,EAAE,CAACE,OAAO,CAAC,CAAC,CAAC;EAChD,CAAC;EAED,MAAM0C,mBAAmB,GAAGA,CAAA,KAAM;IAChCvC,YAAY,CAAEsC,IAAI,IAAK,CAACA,IAAI,CAAC;IAC7B,IAAI,CAACvC,SAAS,EAAE;MACdO,cAAc,CAACL,SAAS,CAAC,CAAC,CAAE;MAC5BC,YAAY,CAAC,CAAC,CAAC;MACfE,kBAAkB,CAAC,CAAC,CAAC;IACvB,CAAC,MAAM;MACLE,cAAc,CAAC,CAAC,CAAC;MACjB6B,cAAc,CAAC1C,SAAS,EAAEE,OAAO,EAAEE,OAAO,CAAC,CAAC,CAAE;IAChD;EACF,CAAC;EAED,MAAM2C,gBAAgB,GAAGA,CAAA,KAAM;IAC7BpD,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAM+C,cAAc,GAAGA,CAACM,KAAK,EAAEC,GAAG,EAAEC,SAAS,KAAK;IAChD,IAAI,CAACF,KAAK,IAAI,CAACC,GAAG,EAAE;IAEpB,MAAM,CAACE,UAAU,EAAEC,YAAY,CAAC,GAAGJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAACnC,GAAG,CAACoC,MAAM,CAAC;IAC/D,MAAM,CAACC,QAAQ,EAAEC,UAAU,CAAC,GAAGP,GAAG,CAACI,KAAK,CAAC,GAAG,CAAC,CAACnC,GAAG,CAACoC,MAAM,CAAC;IAEzD,MAAMG,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC5BD,SAAS,CAACE,QAAQ,CAACR,UAAU,EAAEC,YAAY,EAAE,CAAC,CAAC;IAE/C,MAAMQ,OAAO,GAAG,IAAIF,IAAI,CAAC,CAAC;IAC1BE,OAAO,CAACD,QAAQ,CAACJ,QAAQ,EAAEC,UAAU,EAAE,CAAC,CAAC;;IAEzC;IACA,IAAIN,SAAS,EAAEU,OAAO,CAACC,OAAO,CAACD,OAAO,CAACE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAE;;IAExD,MAAMC,gBAAgB,GAAG,CAACH,OAAO,GAAGH,SAAS,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;IAEjE,MAAMO,eAAe,GAAG,IAAIN,IAAI,CAACD,SAAS,CAAC;IAC3CO,eAAe,CAACL,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;IAEpC,MAAMM,aAAa,GAAG,IAAIP,IAAI,CAACD,SAAS,CAAC;IACzCQ,aAAa,CAACJ,OAAO,CAACI,aAAa,CAACH,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpDG,aAAa,CAACN,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;IAEjC,IAAIjD,eAAe,GAAG,CAAC;IAEvB,IAAI+C,SAAS,GAAGQ,aAAa,IAAIL,OAAO,IAAII,eAAe,EAAE;MAC3D,MAAME,mBAAmB,GAAGT,SAAS,GAAGO,eAAe,GAAGA,eAAe,GAAGP,SAAS;MACrF,MAAMU,iBAAiB,GAAGP,OAAO,GAAGK,aAAa,GAAGA,aAAa,GAAGL,OAAO;MAC3ElD,eAAe,GAAG,CAACyD,iBAAiB,GAAGD,mBAAmB,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;IAChF;IAEAzD,YAAY,CAACsD,gBAAgB,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC;IACzCzD,kBAAkB,CAACD,eAAe,CAAC0D,OAAO,CAAC,CAAC,CAAC,CAAC;EAChD,CAAC;EAED,MAAMC,2BAA2B,GAAG,MAAAA,CAAOhC,UAAU,EAAEJ,IAAI,EAAEe,KAAK,EAAEC,GAAG,EAAEzC,SAAS,EAAE8D,UAAU,EAAE1D,WAAW,KAAK;IAC9G,IAAI;MACF,MAAM2D,eAAe,GAAG3F,GAAG,CAACE,EAAE,EAAE,YAAY,EAAEuD,UAAU,CAAC;MACzD,MAAM/C,aAAa,GAAG,MAAMX,MAAM,CAAC4F,eAAe,CAAC;MAEnD,IAAIC,WAAW,GAAG,CAAC,CAAC;MAEpB,IAAIlF,aAAa,CAACiC,MAAM,CAAC,CAAC,EAAE;QAC1BiD,WAAW,GAAGlF,aAAa,CAAC8B,IAAI,CAAC,CAAC,CAACY,KAAK;QACxCwC,WAAW,CAACvC,IAAI,CAAC,GAAG;UAAEjC,SAAS,EAAEgD,KAAK;UAAE9C,OAAO,EAAE+C,GAAG;UAAEzC,SAAS;UAAE8D,UAAU;UAAE1D,WAAW;UAAEN;QAAU,CAAC;MACvG,CAAC,MAAM;QACLkE,WAAW,GAAG;UAAE,CAACvC,IAAI,GAAG;YAAEjC,SAAS,EAAEgD,KAAK;YAAE9C,OAAO,EAAE+C,GAAG;YAAEzC,SAAS;YAAE8D,UAAU;YAAE1D,WAAW;YAAEN;UAAU;QAAE,CAAC;MAC7G;MAEA,MAAMzB,MAAM,CAAC0F,eAAe,EAAE;QAAEvC,KAAK,EAAEwC;MAAY,CAAC,CAAC;MACrD7C,kBAAkB,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAM+C,iBAAiB,GAAG,MAAAA,CAAOpC,UAAU,EAAEJ,IAAI,EAAEe,KAAK,EAAEC,GAAG,EAAEzC,SAAS,EAAE8D,UAAU,EAAE1D,WAAW,KAAK;IACpGrB,gBAAgB,CAAEmF,QAAQ,IAAK;MAC7B,MAAMC,OAAO,GAAG;QAAE,GAAGD;MAAS,CAAC;MAC/BC,OAAO,CAACtC,UAAU,CAAC,CAACJ,IAAI,CAAC,GAAG;QAAEjC,SAAS,EAAEgD,KAAK;QAAE9C,OAAO,EAAE+C,GAAG;QAAEzC,SAAS;QAAE8D,UAAU;QAAE1D,WAAW;QAAEN;MAAU,CAAC;MAC7G,OAAOqE,OAAO;IAChB,CAAC,CAAC;IAEF,MAAMN,2BAA2B,CAAChC,UAAU,EAAEJ,IAAI,EAAEe,KAAK,EAAEC,GAAG,EAAEzC,SAAS,EAAE8D,UAAU,EAAE1D,WAAW,CAAC;EACrG,CAAC;EAED,oBACE5B,OAAA;IAAA4F,QAAA,gBACE5F,OAAA;MAAO6F,MAAM,EAAC,GAAG;MAAAD,QAAA,gBACf5F,OAAA;QAAA4F,QAAA,eACE5F,OAAA;UAAA4F,QAAA,gBACE5F,OAAA;YAAA4F,QAAA,EAAI;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAChB/F,SAAS,CAACgC,GAAG,CAAEe,IAAI,iBAClBjD,OAAA;YAAA4F,QAAA,EAAgB3C;UAAI,GAAXA,IAAI;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAC1B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRjG,OAAA;QAAA4F,QAAA,EACGxF,SAAS,CAAC8B,GAAG,CAAEgE,QAAQ,iBACtBlG,OAAA;UAAA4F,QAAA,gBACE5F,OAAA;YAAA4F,QAAA,EAAKM,QAAQ,CAACC;UAAI;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACvB/F,SAAS,CAACgC,GAAG,CAAEe,IAAI;YAAA,IAAAmD,qBAAA,EAAAC,sBAAA;YAAA,oBAClBrG,OAAA;cAAA4F,QAAA,gBACE5F,OAAA;gBAAQsG,OAAO,EAAEA,CAAA,KAAMlD,aAAa,CAAC8C,QAAQ,CAAC/D,EAAE,EAAEc,IAAI,CAAE;gBAAA2C,QAAA,EAAC;cAAQ;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACzE,EAAAG,qBAAA,GAAA9F,aAAa,CAAC4F,QAAQ,CAAC/D,EAAE,CAAC,cAAAiE,qBAAA,wBAAAC,sBAAA,GAA1BD,qBAAA,CAA6BnD,IAAI,CAAC,cAAAoD,sBAAA,uBAAlCA,sBAAA,CAAoC7E,SAAS,kBAC5CxB,OAAA;gBAAA4F,QAAA,gBACE5F,OAAA;kBAAA4F,QAAA,GAAG,cAAY,EAACtF,aAAa,CAAC4F,QAAQ,CAAC/D,EAAE,CAAC,CAACc,IAAI,CAAC,CAACzB,SAAS,EAAC,QAAM;gBAAA;kBAAAsE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,eACrEjG,OAAA;kBAAA4F,QAAA,GAAG,eAAa,EAACtF,aAAa,CAAC4F,QAAQ,CAAC/D,EAAE,CAAC,CAACc,IAAI,CAAC,CAACqC,UAAU,EAAC,QAAM;gBAAA;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,eACvEjG,OAAA;kBAAA4F,QAAA,GAAG,gBAAc,EAACtF,aAAa,CAAC4F,QAAQ,CAAC/D,EAAE,CAAC,CAACc,IAAI,CAAC,CAACrB,WAAW,EAAC,QAAM;gBAAA;kBAAAkE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtE,CACN;YAAA,GARMhD,IAAI;cAAA6C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAST,CAAC;UAAA,CACN,CAAC;QAAA,GAbKC,QAAQ,CAAC/D,EAAE;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAchB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEPvF,SAAS,iBACRV,OAAA;MAAKuG,SAAS,EAAC,OAAO;MAAAX,QAAA,gBACpB5F,OAAA;QAAA4F,QAAA,GAAI,eAAa,EAAChF,gBAAgB;MAAA;QAAAkF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxCjG,OAAA;QAAA4F,QAAA,gBACE5F,OAAA;UAAA4F,QAAA,EAAO;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3BjG,OAAA;UAAOwG,IAAI,EAAC,MAAM;UAAC/C,KAAK,EAAEzC,SAAU;UAACyF,QAAQ,EAAEnD;QAAsB;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC,eACNjG,OAAA;QAAA4F,QAAA,gBACE5F,OAAA;UAAA4F,QAAA,EAAO;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzBjG,OAAA;UAAOwG,IAAI,EAAC,MAAM;UAAC/C,KAAK,EAAEvC,OAAQ;UAACuF,QAAQ,EAAE9C;QAAoB;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,eACNjG,OAAA;QAAA4F,QAAA,gBACE5F,OAAA;UAAA4F,QAAA,EAAO;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzBjG,OAAA;UAAOwG,IAAI,EAAC,UAAU;UAACE,OAAO,EAAEtF,OAAQ;UAACqF,QAAQ,EAAE7C;QAAoB;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC,eACNjG,OAAA;QAAA4F,QAAA,gBACE5F,OAAA;UAAA4F,QAAA,EAAO;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBjG,OAAA;UAAOwG,IAAI,EAAC,UAAU;UAACE,OAAO,EAAEpF,SAAU;UAACmF,QAAQ,EAAE3C;QAAoB;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC,eACNjG,OAAA;QAAA4F,QAAA,gBACE5F,OAAA;UAAA4F,QAAA,GAAG,cAAY,EAACpE,SAAS,EAAC,QAAM;QAAA;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACpCjG,OAAA;UAAA4F,QAAA,GAAG,qBAAmB,EAAClE,eAAe,EAAC,QAAM;QAAA;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjDjG,OAAA;UAAA4F,QAAA,GAAG,gBAAc,EAAChE,WAAW,EAAC,QAAM;QAAA;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACNjG,OAAA;QAAA4F,QAAA,gBACE5F,OAAA;UACEsG,OAAO,EAAEA,CAAA,KAAM;YACbb,iBAAiB,CAAC7E,gBAAgB,EAAEE,YAAY,EAAEE,SAAS,EAAEE,OAAO,EAAEM,SAAS,EAAEE,eAAe,EAAEE,WAAW,CAAC;YAC9GmC,gBAAgB,CAAC,CAAC;UACpB,CAAE;UAAA6B,QAAA,EACH;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjG,OAAA;UAAQsG,OAAO,EAAEvC,gBAAiB;UAAA6B,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9F,EAAA,CAnPIF,aAAa;AAAA0G,EAAA,GAAb1G,aAAa;AAqPnB,eAAeA,aAAa;AAAC,IAAA0G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}