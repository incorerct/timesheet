{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { db } from \"./firebaseConfig\"; // Ensure firebaseConfig.js contains the correct Firebase setup\nimport { collection, getDocs, doc, getDoc, setDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = ({\n  weekDates\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch employees data\n        const employeeSnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = employeeSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n\n        // Fetch initial timesheet data for employees\n        fetchTimesheetData();\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const fetchTimesheetData = async () => {\n    try {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const snapshot = await getDocs(timesheetDataRef);\n      const fetchedData = {};\n      snapshot.forEach(doc => {\n        fetchedData[doc.id] = doc.data().hours; // Assuming 'hours' field contains timesheet data\n      });\n      setTimesheetData(fetchedData);\n    } catch (error) {\n      console.error(\"Error fetching timesheet data:\", error);\n    }\n  };\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setModalOpen(true);\n  };\n  const handleSaveTime = async () => {\n    const start = new Date(startTime);\n    const end = new Date(endTime);\n    const diffInHours = (end - start) / (1000 * 60 * 60); // Calculate total time in hours\n    const nightShift = nextDay ? diffInHours / 2 : 0; // You can adjust the calculation based on your requirements\n    const holiday = isHoliday ? diffInHours * 0.5 : 0; // Example calculation for holiday time\n\n    setTotalTime(diffInHours);\n    setNightShiftHours(nightShift);\n    setHolidayTime(holiday);\n    await saveTimesheetDataToFirebase(selectedEmployee, selectedDate, startTime, endTime, diffInHours, nightShift, holiday);\n    setModalOpen(false);\n  };\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId); // Adjust the document path if necessary\n      const timesheetData = await getDoc(timesheetDocRef);\n      let updatedData = {};\n      if (timesheetData.exists()) {\n        updatedData = timesheetData.data().hours;\n        updatedData[date] = {\n          startTime: start,\n          endTime: end,\n          totalTime,\n          nightShift,\n          holidayTime,\n          isHoliday\n        };\n      } else {\n        updatedData = {\n          [date]: {\n            startTime: start,\n            endTime: end,\n            totalTime,\n            nightShift,\n            holidayTime,\n            isHoliday\n          }\n        };\n      }\n      await setDoc(timesheetDocRef, {\n        hours: updatedData\n      });\n      console.log(\"Data saved successfully!\");\n\n      // After saving, fetch the updated data\n      fetchTimesheetData();\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Timesheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), weekDates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), weekDates.map(date => {\n            var _timesheetData$employ;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSetTime(employee.id, date),\n                children: \"Set Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), ((_timesheetData$employ = timesheetData[employee.id]) === null || _timesheetData$employ === void 0 ? void 0 : _timesheetData$employ[date]) && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Total Time: \", timesheetData[employee.id][date].totalTime, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Night Shift: \", timesheetData[employee.id][date].nightShift, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Holiday Time: \", timesheetData[employee.id][date].holidayTime, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this)]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this);\n          })]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Set Time for \", selectedEmployee, \" on \", selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: e => setStartTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: endTime,\n          onChange: e => setEndTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Next Day:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: nextDay,\n          onChange: () => setNextDay(!nextDay)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Is Holiday:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isHoliday,\n          onChange: () => setIsHoliday(!isHoliday)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveTime,\n        children: \"Save Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalOpen(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"wNV2LoUbjaUXZHV3edriqlOvNLE=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["React","useState","useEffect","db","collection","getDocs","doc","getDoc","setDoc","jsxDEV","_jsxDEV","TimesheetList","weekDates","_s","employees","setEmployees","timesheetData","setTimesheetData","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","nextDay","setNextDay","isHoliday","setIsHoliday","totalTime","setTotalTime","nightShiftHours","setNightShiftHours","holidayTime","setHolidayTime","fetchData","employeeSnapshot","employeeData","docs","map","id","data","fetchTimesheetData","error","console","timesheetDataRef","snapshot","fetchedData","forEach","hours","handleSetTime","employeeId","date","handleSaveTime","start","Date","end","diffInHours","nightShift","holiday","saveTimesheetDataToFirebase","timesheetDocRef","updatedData","exists","log","children","fileName","_jsxFileName","lineNumber","columnNumber","border","employee","name","_timesheetData$employ","onClick","className","type","value","onChange","e","target","checked","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { db } from \"./firebaseConfig\"; // Ensure firebaseConfig.js contains the correct Firebase setup\nimport { collection, getDocs, doc, getDoc, setDoc } from \"firebase/firestore\";\n\nconst TimesheetList = ({ weekDates }) => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch employees data\n        const employeeSnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = employeeSnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n\n        // Fetch initial timesheet data for employees\n        fetchTimesheetData();\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const fetchTimesheetData = async () => {\n    try {\n      const timesheetDataRef = collection(db, \"timesheets\");\n      const snapshot = await getDocs(timesheetDataRef);\n\n      const fetchedData = {};\n      snapshot.forEach((doc) => {\n        fetchedData[doc.id] = doc.data().hours; // Assuming 'hours' field contains timesheet data\n      });\n\n      setTimesheetData(fetchedData);\n    } catch (error) {\n      console.error(\"Error fetching timesheet data:\", error);\n    }\n  };\n\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setModalOpen(true);\n  };\n\n  const handleSaveTime = async () => {\n    const start = new Date(startTime);\n    const end = new Date(endTime);\n\n    const diffInHours = (end - start) / (1000 * 60 * 60); // Calculate total time in hours\n    const nightShift = nextDay ? diffInHours / 2 : 0; // You can adjust the calculation based on your requirements\n    const holiday = isHoliday ? diffInHours * 0.5 : 0; // Example calculation for holiday time\n\n    setTotalTime(diffInHours);\n    setNightShiftHours(nightShift);\n    setHolidayTime(holiday);\n\n    await saveTimesheetDataToFirebase(selectedEmployee, selectedDate, startTime, endTime, diffInHours, nightShift, holiday);\n    setModalOpen(false);\n  };\n\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId); // Adjust the document path if necessary\n      const timesheetData = await getDoc(timesheetDocRef);\n\n      let updatedData = {};\n\n      if (timesheetData.exists()) {\n        updatedData = timesheetData.data().hours;\n        updatedData[date] = { startTime: start, endTime: end, totalTime, nightShift, holidayTime, isHoliday };\n      } else {\n        updatedData = { [date]: { startTime: start, endTime: end, totalTime, nightShift, holidayTime, isHoliday } };\n      }\n\n      await setDoc(timesheetDocRef, { hours: updatedData });\n      console.log(\"Data saved successfully!\");\n\n      // After saving, fetch the updated data\n      fetchTimesheetData();\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Timesheet</h2>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Employee</th>\n            {weekDates.map((date) => (\n              <th key={date}>{date}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => (\n            <tr key={employee.id}>\n              <td>{employee.name}</td>\n              {weekDates.map((date) => (\n                <td key={date}>\n                  <button onClick={() => handleSetTime(employee.id, date)}>Set Time</button>\n                  {timesheetData[employee.id]?.[date] && (\n                    <div>\n                      <p>Total Time: {timesheetData[employee.id][date].totalTime} hours</p>\n                      <p>Night Shift: {timesheetData[employee.id][date].nightShift} hours</p>\n                      <p>Holiday Time: {timesheetData[employee.id][date].holidayTime} hours</p>\n                    </div>\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {/* Modal for setting time */}\n      {modalOpen && (\n        <div className=\"modal\">\n          <h3>Set Time for {selectedEmployee} on {selectedDate}</h3>\n          <label>\n            Start Time:\n            <input\n              type=\"time\"\n              value={startTime}\n              onChange={(e) => setStartTime(e.target.value)}\n            />\n          </label>\n          <label>\n            End Time:\n            <input\n              type=\"time\"\n              value={endTime}\n              onChange={(e) => setEndTime(e.target.value)}\n            />\n          </label>\n          <label>\n            Next Day:\n            <input\n              type=\"checkbox\"\n              checked={nextDay}\n              onChange={() => setNextDay(!nextDay)}\n            />\n          </label>\n          <label>\n            Is Holiday:\n            <input\n              type=\"checkbox\"\n              checked={isHoliday}\n              onChange={() => setIsHoliday(!isHoliday)}\n            />\n          </label>\n          <button onClick={handleSaveTime}>Save Time</button>\n          <button onClick={() => setModalOpen(false)}>Close</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}