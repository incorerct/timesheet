{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimeAdjustments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { db } from \"./firebaseConfig\"; // Import db from firebaseConfig\nimport { collection, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimeAdjustments = () => {\n  _s();\n  const [normalStartTime, setNormalStartTime] = useState(\"08:00\");\n  const [normalEndTime, setNormalEndTime] = useState(\"18:00\");\n  const [overtimeStartTime, setOvertimeStartTime] = useState(\"18:00\");\n  const [overtimeEndTime, setOvertimeEndTime] = useState(\"08:00\");\n\n  // Function to fetch time adjustments from Firebase\n  const fetchTimeAdjustments = async () => {\n    try {\n      const docRef = doc(collection(db, \"timeAdjustments\"), \"settings\");\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        const data = docSnap.data();\n        setNormalStartTime(data.normalStartTime);\n        setNormalEndTime(data.normalEndTime);\n        setOvertimeStartTime(data.overtimeStartTime);\n        setOvertimeEndTime(data.overtimeEndTime);\n      } else {\n        console.log(\"No time adjustments found!\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching time adjustments: \", error);\n    }\n  };\n  useEffect(() => {\n    // Fetch time adjustments on initial render\n    fetchTimeAdjustments();\n\n    // Set up an interval to fetch time adjustments every 30 minutes\n    const intervalId = setInterval(fetchTimeAdjustments, 30 * 60 * 1000); // 30 minutes\n\n    // Clear the interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Create an object with the time adjustments\n    const timeAdjustments = {\n      normalStartTime,\n      normalEndTime,\n      overtimeStartTime,\n      overtimeEndTime\n    };\n    try {\n      console.log(\"Saving time adjustments:\", timeAdjustments); // Log the data to be saved\n\n      // Save the time adjustments to Firestore\n      const timeAdjustmentsRef = doc(collection(db, \"timeAdjustments\"), \"settings\");\n      await setDoc(timeAdjustmentsRef, timeAdjustments);\n      console.log(\"Time adjustments saved successfully!\");\n    } catch (error) {\n      console.error(\"Error saving time adjustments: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Time Adjustments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Normal Working Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Start Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: normalStartTime,\n            onChange: e => setNormalStartTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"End Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: normalEndTime,\n            onChange: e => setNormalEndTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Overtime Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Start Time (Overtime):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: overtimeStartTime,\n            onChange: e => setOvertimeStartTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"End Time (Overtime):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: overtimeEndTime,\n            onChange: e => setOvertimeEndTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Adjustments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(TimeAdjustments, \"M/9n0iJ0Q7xUc1+4fd1lXI0OauE=\");\n_c = TimeAdjustments;\nexport default TimeAdjustments;\nvar _c;\n$RefreshReg$(_c, \"TimeAdjustments\");","map":{"version":3,"names":["React","useState","useEffect","db","collection","doc","setDoc","getDoc","jsxDEV","_jsxDEV","TimeAdjustments","_s","normalStartTime","setNormalStartTime","normalEndTime","setNormalEndTime","overtimeStartTime","setOvertimeStartTime","overtimeEndTime","setOvertimeEndTime","fetchTimeAdjustments","docRef","docSnap","exists","data","console","log","error","intervalId","setInterval","clearInterval","handleSubmit","e","preventDefault","timeAdjustments","timeAdjustmentsRef","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimeAdjustments.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { db } from \"./firebaseConfig\"; // Import db from firebaseConfig\nimport { collection, doc, setDoc, getDoc } from \"firebase/firestore\";\n\nconst TimeAdjustments = () => {\n  const [normalStartTime, setNormalStartTime] = useState(\"08:00\");\n  const [normalEndTime, setNormalEndTime] = useState(\"18:00\");\n  const [overtimeStartTime, setOvertimeStartTime] = useState(\"18:00\");\n  const [overtimeEndTime, setOvertimeEndTime] = useState(\"08:00\");\n\n  // Function to fetch time adjustments from Firebase\n  const fetchTimeAdjustments = async () => {\n    try {\n      const docRef = doc(collection(db, \"timeAdjustments\"), \"settings\");\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        const data = docSnap.data();\n        setNormalStartTime(data.normalStartTime);\n        setNormalEndTime(data.normalEndTime);\n        setOvertimeStartTime(data.overtimeStartTime);\n        setOvertimeEndTime(data.overtimeEndTime);\n      } else {\n        console.log(\"No time adjustments found!\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching time adjustments: \", error);\n    }\n  };\n\n  useEffect(() => {\n    // Fetch time adjustments on initial render\n    fetchTimeAdjustments();\n\n    // Set up an interval to fetch time adjustments every 30 minutes\n    const intervalId = setInterval(fetchTimeAdjustments, 30 * 60 * 1000); // 30 minutes\n\n    // Clear the interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Create an object with the time adjustments\n    const timeAdjustments = {\n      normalStartTime,\n      normalEndTime,\n      overtimeStartTime,\n      overtimeEndTime,\n    };\n\n    try {\n      console.log(\"Saving time adjustments:\", timeAdjustments); // Log the data to be saved\n\n      // Save the time adjustments to Firestore\n      const timeAdjustmentsRef = doc(collection(db, \"timeAdjustments\"), \"settings\");\n      await setDoc(timeAdjustmentsRef, timeAdjustments);\n      console.log(\"Time adjustments saved successfully!\");\n    } catch (error) {\n      console.error(\"Error saving time adjustments: \", error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Time Adjustments</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <h3>Normal Working Hours</h3>\n          <label>\n            Start Time:\n            <input\n              type=\"time\"\n              value={normalStartTime}\n              onChange={(e) => setNormalStartTime(e.target.value)}\n            />\n          </label>\n          <label>\n            End Time:\n            <input\n              type=\"time\"\n              value={normalEndTime}\n              onChange={(e) => setNormalEndTime(e.target.value)}\n            />\n          </label>\n        </div>\n\n        <div>\n          <h3>Overtime Hours</h3>\n          <label>\n            Start Time (Overtime):\n            <input\n              type=\"time\"\n              value={overtimeStartTime}\n              onChange={(e) => setOvertimeStartTime(e.target.value)}\n            />\n          </label>\n          <label>\n            End Time (Overtime):\n            <input\n              type=\"time\"\n              value={overtimeEndTime}\n              onChange={(e) => setOvertimeEndTime(e.target.value)}\n            />\n          </label>\n        </div>\n\n        <button type=\"submit\">Save Adjustments</button>\n      </form>\n    </div>\n  );\n};\n\nexport default TimeAdjustments;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}