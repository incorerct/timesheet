{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { collection, getDocs, getDoc, doc, setDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = ({\n  weekDates\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [timeAdjustments, setTimeAdjustments] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const employeeSnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = employeeSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n        const settingsDocRef = doc(db, \"timeAdjustments\", \"settings\");\n        const settingsDoc = await getDoc(settingsDocRef);\n        if (settingsDoc.exists()) {\n          setTimeAdjustments(settingsDoc.data());\n        } else {\n          console.log(\"No time adjustments found\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (employees.length > 0 && weekDates.length > 0) {\n      const initialTimesheetData = employees.reduce((acc, employee) => {\n        acc[employee.id] = weekDates.reduce((weekAcc, date) => {\n          weekAcc[date] = {\n            startTime: \"\",\n            endTime: \"\",\n            totalTime: 0,\n            nightShift: 0,\n            holidayTime: 0\n          };\n          return weekAcc;\n        }, {});\n        return acc;\n      }, {});\n      setTimesheetData(initialTimesheetData);\n      fetchTimesheetData();\n    }\n  }, [employees, weekDates]);\n  const calculateTotalTimeAndNightShift = (start, end, nextDay) => {\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (nextDay) endDate.setDate(endDate.getDate() + 1);\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0); // 10:00 PM\n\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1); // Move to the next day\n    nightShiftEnd.setHours(6, 0, 0); // 6:00 AM\n\n    let nightShiftHours = 0;\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n    return {\n      totalTime: totalTimeInHours.toFixed(2),\n      nightShift: nightShiftHours.toFixed(2)\n    };\n  };\n  const handleHolidayToggle = () => {\n    setIsHoliday(prev => !prev);\n    if (!isHoliday && startTime && endTime) {\n      const {\n        totalTime\n      } = calculateTotalTimeAndNightShift(startTime, endTime, nextDay);\n      setHolidayTime(totalTime);\n      setTotalTime(0);\n      setNightShiftHours(0);\n    } else {\n      setHolidayTime(0);\n      if (startTime && endTime) {\n        const {\n          totalTime,\n          nightShift\n        } = calculateTotalTimeAndNightShift(startTime, endTime, nextDay);\n        setTotalTime(totalTime);\n        setNightShiftHours(nightShift);\n      }\n    }\n  };\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId);\n      const timesheetData = await getDoc(timesheetDocRef);\n      let updatedData = {};\n      if (timesheetData.exists()) {\n        updatedData = timesheetData.data().hours;\n        updatedData[date] = {\n          startTime: start,\n          endTime: end,\n          totalTime,\n          nightShift,\n          holidayTime,\n          isHoliday\n        };\n      } else {\n        updatedData = {\n          [date]: {\n            startTime: start,\n            endTime: end,\n            totalTime,\n            nightShift,\n            holidayTime,\n            isHoliday\n          }\n        };\n      }\n      await setDoc(timesheetDocRef, {\n        hours: updatedData\n      });\n      fetchTimesheetData();\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n  const handleInputChange = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    setTimesheetData(prevData => {\n      const newData = {\n        ...prevData\n      };\n      newData[employeeId][date] = {\n        startTime: start,\n        endTime: end,\n        totalTime,\n        nightShift,\n        holidayTime,\n        isHoliday\n      };\n      return newData;\n    });\n    await saveTimesheetDataToFirebase(employeeId, date, start, end, totalTime, nightShift, holidayTime);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), weekDates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), weekDates.map(date => {\n            var _timesheetData$employ, _timesheetData$employ2;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSetTime(employee.id, date),\n                children: \"Set Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this), ((_timesheetData$employ = timesheetData[employee.id]) === null || _timesheetData$employ === void 0 ? void 0 : (_timesheetData$employ2 = _timesheetData$employ[date]) === null || _timesheetData$employ2 === void 0 ? void 0 : _timesheetData$employ2.totalTime) && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Total Time: \", timesheetData[employee.id][date].totalTime, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Night Shift: \", timesheetData[employee.id][date].nightShift, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Holiday Time: \", timesheetData[employee.id][date].holidayTime, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this)]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this);\n          })]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: handleStartTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: endTime,\n          onChange: handleEndTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Next Day:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: nextDay,\n          onChange: handleNextDayToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Holiday:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isHoliday,\n          onChange: handleHolidayToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Time: \", totalTime, \" hours\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Night Shift Hours: \", nightShiftHours, \" hours\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Holiday Time: \", holidayTime, \" hours\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleInputChange(selectedEmployee, selectedDate, startTime, endTime, totalTime, nightShiftHours, holidayTime),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCloseModal,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"8TTN5bya+QQmNB1t74jEmoHmrcY=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["useState","useEffect","collection","getDocs","getDoc","doc","setDoc","db","jsxDEV","_jsxDEV","TimesheetList","weekDates","_s","employees","setEmployees","timesheetData","setTimesheetData","timeAdjustments","setTimeAdjustments","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","nextDay","setNextDay","isHoliday","setIsHoliday","totalTime","setTotalTime","nightShiftHours","setNightShiftHours","holidayTime","setHolidayTime","fetchData","employeeSnapshot","employeeData","docs","map","id","data","settingsDocRef","settingsDoc","exists","console","log","error","length","initialTimesheetData","reduce","acc","employee","weekAcc","date","nightShift","fetchTimesheetData","calculateTotalTimeAndNightShift","start","end","startHours","startMinutes","split","Number","endHours","endMinutes","startDate","Date","setHours","endDate","setDate","getDate","totalTimeInHours","nightShiftStart","nightShiftEnd","nightShiftStartTime","nightShiftEndTime","toFixed","handleHolidayToggle","prev","saveTimesheetDataToFirebase","employeeId","timesheetDocRef","updatedData","hours","handleInputChange","prevData","newData","children","border","fileName","_jsxFileName","lineNumber","columnNumber","name","_timesheetData$employ","_timesheetData$employ2","onClick","handleSetTime","type","value","onChange","handleStartTimeChange","handleEndTimeChange","checked","handleNextDayToggle","handleCloseModal","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { collection, getDocs, getDoc, doc, setDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\n\nconst TimesheetList = ({ weekDates }) => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [timeAdjustments, setTimeAdjustments] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [isHoliday, setIsHoliday] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  const [holidayTime, setHolidayTime] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const employeeSnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = employeeSnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n\n        const settingsDocRef = doc(db, \"timeAdjustments\", \"settings\");\n        const settingsDoc = await getDoc(settingsDocRef);\n        if (settingsDoc.exists()) {\n          setTimeAdjustments(settingsDoc.data());\n        } else {\n          console.log(\"No time adjustments found\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (employees.length > 0 && weekDates.length > 0) {\n      const initialTimesheetData = employees.reduce((acc, employee) => {\n        acc[employee.id] = weekDates.reduce((weekAcc, date) => {\n          weekAcc[date] = { startTime: \"\", endTime: \"\", totalTime: 0, nightShift: 0, holidayTime: 0 };\n          return weekAcc;\n        }, {});\n        return acc;\n      }, {});\n      setTimesheetData(initialTimesheetData);\n      fetchTimesheetData();\n    }\n  }, [employees, weekDates]);\n\n  const calculateTotalTimeAndNightShift = (start, end, nextDay) => {\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (nextDay) endDate.setDate(endDate.getDate() + 1);\n\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n\n    const nightShiftStart = new Date(startDate);\n    nightShiftStart.setHours(22, 0, 0); // 10:00 PM\n\n    const nightShiftEnd = new Date(startDate);\n    nightShiftEnd.setDate(nightShiftEnd.getDate() + 1); // Move to the next day\n    nightShiftEnd.setHours(6, 0, 0); // 6:00 AM\n\n    let nightShiftHours = 0;\n\n    if (startDate < nightShiftEnd && endDate >= nightShiftStart) {\n      const nightShiftStartTime = startDate < nightShiftStart ? nightShiftStart : startDate;\n      const nightShiftEndTime = endDate > nightShiftEnd ? nightShiftEnd : endDate;\n      nightShiftHours = (nightShiftEndTime - nightShiftStartTime) / (1000 * 60 * 60);\n    }\n\n    return { totalTime: totalTimeInHours.toFixed(2), nightShift: nightShiftHours.toFixed(2) };\n  };\n\n  const handleHolidayToggle = () => {\n    setIsHoliday((prev) => !prev);\n\n    if (!isHoliday && startTime && endTime) {\n      const { totalTime } = calculateTotalTimeAndNightShift(startTime, endTime, nextDay);\n      setHolidayTime(totalTime);\n      setTotalTime(0);\n      setNightShiftHours(0);\n    } else {\n      setHolidayTime(0);\n      if (startTime && endTime) {\n        const { totalTime, nightShift } = calculateTotalTimeAndNightShift(startTime, endTime, nextDay);\n        setTotalTime(totalTime);\n        setNightShiftHours(nightShift);\n      }\n    }\n  };\n\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId);\n      const timesheetData = await getDoc(timesheetDocRef);\n\n      let updatedData = {};\n\n      if (timesheetData.exists()) {\n        updatedData = timesheetData.data().hours;\n        updatedData[date] = { startTime: start, endTime: end, totalTime, nightShift, holidayTime, isHoliday };\n      } else {\n        updatedData = { [date]: { startTime: start, endTime: end, totalTime, nightShift, holidayTime, isHoliday } };\n      }\n\n      await setDoc(timesheetDocRef, { hours: updatedData });\n      fetchTimesheetData();\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  const handleInputChange = async (employeeId, date, start, end, totalTime, nightShift, holidayTime) => {\n    setTimesheetData((prevData) => {\n      const newData = { ...prevData };\n      newData[employeeId][date] = { startTime: start, endTime: end, totalTime, nightShift, holidayTime, isHoliday };\n      return newData;\n    });\n\n    await saveTimesheetDataToFirebase(employeeId, date, start, end, totalTime, nightShift, holidayTime);\n  };\n\n  return (\n    <div>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Employee</th>\n            {weekDates.map((date) => (\n              <th key={date}>{date}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => (\n            <tr key={employee.id}>\n              <td>{employee.name}</td>\n              {weekDates.map((date) => (\n                <td key={date}>\n                  <button onClick={() => handleSetTime(employee.id, date)}>Set Time</button>\n                  {timesheetData[employee.id]?.[date]?.totalTime && (\n                    <div>\n                      <p>Total Time: {timesheetData[employee.id][date].totalTime} hours</p>\n                      <p>Night Shift: {timesheetData[employee.id][date].nightShift} hours</p>\n                      <p>Holiday Time: {timesheetData[employee.id][date].holidayTime} hours</p>\n                    </div>\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {modalOpen && (\n        <div>\n          <label>\n            Start Time:\n            <input type=\"time\" value={startTime} onChange={handleStartTimeChange} />\n          </label>\n          <label>\n            End Time:\n            <input type=\"time\" value={endTime} onChange={handleEndTimeChange} />\n          </label>\n          <label>\n            Next Day:\n            <input type=\"checkbox\" checked={nextDay} onChange={handleNextDayToggle} />\n          </label>\n          <label>\n            Holiday:\n            <input type=\"checkbox\" checked={isHoliday} onChange={handleHolidayToggle} />\n          </label>\n          <p>Total Time: {totalTime} hours</p>\n          <p>Night Shift Hours: {nightShiftHours} hours</p>\n          <p>Holiday Time: {holidayTime} hours</p>\n          <button\n            onClick={() => handleInputChange(selectedEmployee, selectedDate, startTime, endTime, totalTime, nightShiftHours, holidayTime)}\n          >\n            Save\n          </button>\n          <button onClick={handleCloseModal}>Close</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}