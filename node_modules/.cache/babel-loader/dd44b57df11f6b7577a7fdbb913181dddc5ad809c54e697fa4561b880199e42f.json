{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { getStartOfWeek, getWeekDates } from \"./utils\";\nimport TimesheetList from \"./TimesheetList\";\nimport EmployeeManagement from \"./EmployeeManagement\"; // Import EmployeeManagement component\nimport \"./App.css\"; // Import custom CSS for styling (optional)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentWeek, setCurrentWeek] = useState(getStartOfWeek(new Date()));\n  const [weekDates, setWeekDates] = useState(getWeekDates(currentWeek));\n  const [view, setView] = useState(\"timesheet\"); // State to manage which view to show: \"timesheet\", or \"employeeManagement\"\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track if user is logged in\n  const [username, setUsername] = useState(\"\"); // Track username input\n  const [password, setPassword] = useState(\"\"); // Track password input\n\n  // Function to handle changing weeks\n  const changeWeek = useCallback(direction => {\n    const newWeek = new Date(currentWeek);\n    newWeek.setDate(currentWeek.getDate() + direction * 7);\n    setCurrentWeek(newWeek);\n    setWeekDates(getWeekDates(newWeek));\n  }, [currentWeek]);\n\n  // Function to switch between views\n  const handleViewChange = view => {\n    setView(view);\n  };\n\n  // Handle login submission\n  const handleLogin = () => {\n    // For simplicity, any non-empty username/password is considered valid.\n    if (username && password) {\n      setIsLoggedIn(true);\n    } else {\n      alert(\"Please enter both username and password\");\n    }\n  };\n\n  // Handle enter key press for login\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      handleLogin();\n    }\n  };\n\n  // Render login form if not logged in, otherwise render the app\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"login-input\",\n          onKeyDown: handleKeyPress // Handle Enter key press on username input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"ot123\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"login-input\",\n          onKeyDown: handleKeyPress // Handle Enter key press on password input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogin,\n          className: \"login-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `nav-item ${view === \"timesheet\" ? \"selected\" : \"\"}`,\n        onClick: () => handleViewChange(\"timesheet\"),\n        children: \"Timesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `nav-item ${view === \"employeeManagement\" ? \"selected\" : \"\"}`,\n        onClick: () => handleViewChange(\"employeeManagement\"),\n        children: \"Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [view === \"timesheet\" && /*#__PURE__*/_jsxDEV(TimesheetList, {\n        weekDates: weekDates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 34\n      }, this), view === \"employeeManagement\" && /*#__PURE__*/_jsxDEV(EmployeeManagement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"YdBIjtk6XNRxAXCXDs0f7x5M3pM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","getStartOfWeek","getWeekDates","TimesheetList","EmployeeManagement","jsxDEV","_jsxDEV","App","_s","currentWeek","setCurrentWeek","Date","weekDates","setWeekDates","view","setView","isLoggedIn","setIsLoggedIn","username","setUsername","password","setPassword","changeWeek","direction","newWeek","setDate","getDate","handleViewChange","handleLogin","alert","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { getStartOfWeek, getWeekDates } from \"./utils\";\nimport TimesheetList from \"./TimesheetList\";\nimport EmployeeManagement from \"./EmployeeManagement\"; // Import EmployeeManagement component\nimport \"./App.css\"; // Import custom CSS for styling (optional)\n\nconst App = () => {\n  const [currentWeek, setCurrentWeek] = useState(getStartOfWeek(new Date()));\n  const [weekDates, setWeekDates] = useState(getWeekDates(currentWeek));\n  const [view, setView] = useState(\"timesheet\"); // State to manage which view to show: \"timesheet\", or \"employeeManagement\"\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track if user is logged in\n  const [username, setUsername] = useState(\"\"); // Track username input\n  const [password, setPassword] = useState(\"\"); // Track password input\n\n  // Function to handle changing weeks\n  const changeWeek = useCallback((direction) => {\n    const newWeek = new Date(currentWeek);\n    newWeek.setDate(currentWeek.getDate() + direction * 7);\n    setCurrentWeek(newWeek);\n    setWeekDates(getWeekDates(newWeek));\n  }, [currentWeek]);\n\n  // Function to switch between views\n  const handleViewChange = (view) => {\n    setView(view);\n  };\n\n  // Handle login submission\n  const handleLogin = () => {\n    // For simplicity, any non-empty username/password is considered valid.\n    if (username && password) {\n      setIsLoggedIn(true);\n    } else {\n      alert(\"Please enter both username and password\");\n    }\n  };\n\n  // Handle enter key press for login\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      handleLogin();\n    }\n  };\n\n  // Render login form if not logged in, otherwise render the app\n  if (!isLoggedIn) {\n    return (\n      <div className=\"login-container\">\n        <div className=\"login-box\">\n          <h2>Login</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            className=\"login-input\"\n            onKeyDown={handleKeyPress} // Handle Enter key press on username input\n          />\n          <input\n            type=\"password\"\n            placeholder=\"ot123\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"login-input\"\n            onKeyDown={handleKeyPress} // Handle Enter key press on password input\n          />\n          <button onClick={handleLogin} className=\"login-button\">\n            Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"app-container\">\n      {/* Top Navigation Bar with Split Layout */}\n      <div className=\"navbar\">\n        <div \n          className={`nav-item ${view === \"timesheet\" ? \"selected\" : \"\"}`} \n          onClick={() => handleViewChange(\"timesheet\")}\n        >\n          Timesheet\n        </div>\n        <div \n          className={`nav-item ${view === \"employeeManagement\" ? \"selected\" : \"\"}`} \n          onClick={() => handleViewChange(\"employeeManagement\")}\n        >\n          Employees\n        </div>\n      </div>\n\n      {/* Main content area */}\n      <div className=\"main-content\">\n        {/* Conditional rendering based on the selected view */}\n        {view === \"timesheet\" && <TimesheetList weekDates={weekDates} />}\n        {view === \"employeeManagement\" && <EmployeeManagement />}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}