{"ast":null,"code":"var _jsxFileName = \"/Users/tuvshuu/timesheet/src/TimesheetList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { collection, getDocs, getDoc, doc, setDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimesheetList = ({\n  weekDates\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [timeAdjustments, setTimeAdjustments] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const employeeSnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = employeeSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeeData);\n        const settingsDocRef = doc(db, \"timeAdjustments\", \"settings\");\n        const settingsDoc = await getDoc(settingsDocRef);\n        if (settingsDoc.exists()) {\n          setTimeAdjustments(settingsDoc.data());\n        } else {\n          console.log(\"No time adjustments found\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (employees.length > 0 && weekDates.length > 0) {\n      const initialTimesheetData = employees.reduce((acc, employee) => {\n        acc[employee.id] = weekDates.reduce((weekAcc, date) => {\n          weekAcc[date] = {\n            startTime: \"\",\n            endTime: \"\",\n            totalTime: 0,\n            nightShift: 0\n          };\n          return weekAcc;\n        }, {});\n        return acc;\n      }, {});\n      setTimesheetData(initialTimesheetData);\n      fetchTimesheetData();\n    }\n  }, [employees, weekDates]);\n  const calculateTotalTimeAndNightShift = (start, end, nextDay) => {\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (nextDay) endDate.setDate(endDate.getDate() + 1);\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n    const nightShiftStart = 22;\n    const nightShiftEnd = 6;\n    let nightShiftHours = 0;\n    if (startDate.getHours() >= nightShiftStart || startDate.getHours() < nightShiftEnd || endDate.getHours() >= nightShiftStart || endDate.getHours() < nightShiftEnd) {\n      if (nextDay || endDate.getDate() !== startDate.getDate()) {\n        nightShiftHours += Math.min(24 - startHours, nightShiftEnd);\n        nightShiftHours += Math.max(endDate.getHours() - nightShiftEnd, 0);\n      }\n    }\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n    return {\n      totalTime: totalTimeInHours.toFixed(2),\n      nightShift: nightShiftHours.toFixed(2)\n    };\n  };\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime, nightShift) => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId);\n      const timesheetData = await getDoc(timesheetDocRef);\n      let updatedData = {};\n      if (timesheetData.exists()) {\n        updatedData = timesheetData.data().hours;\n        updatedData[date] = {\n          startTime: start,\n          endTime: end,\n          totalTime,\n          nightShift\n        };\n      } else {\n        updatedData = {\n          [date]: {\n            startTime: start,\n            endTime: end,\n            totalTime,\n            nightShift\n          }\n        };\n      }\n      await setDoc(timesheetDocRef, {\n        hours: updatedData\n      });\n      fetchTimesheetData();\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n  const handleInputChange = async (employeeId, date, start, end, totalTime, nightShift) => {\n    setTimesheetData(prevData => {\n      const newData = {\n        ...prevData\n      };\n      newData[employeeId][date] = {\n        startTime: start,\n        endTime: end,\n        totalTime,\n        nightShift\n      };\n      return newData;\n    });\n    await saveTimesheetDataToFirebase(employeeId, date, start, end, totalTime, nightShift);\n  };\n  const fetchTimesheetData = async () => {\n    try {\n      const querySnapshot = await getDocs(collection(db, \"timesheets\"));\n      const updatedTimesheetData = {};\n      querySnapshot.forEach(doc => {\n        const data = doc.data();\n        updatedTimesheetData[doc.id] = data.hours;\n      });\n      setTimesheetData(updatedTimesheetData);\n    } catch (error) {\n      console.error(\"Error fetching timesheet data:\", error);\n    }\n  };\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setStartTime(\"\");\n    setEndTime(\"\");\n    setTotalTime(0);\n    setNightShiftHours(0);\n    setNextDay(false);\n  };\n  const handleStartTimeChange = e => {\n    setStartTime(e.target.value);\n    if (endTime) {\n      const {\n        totalTime,\n        nightShift\n      } = calculateTotalTimeAndNightShift(e.target.value, endTime, nextDay);\n      setTotalTime(totalTime);\n      setNightShiftHours(nightShift);\n    }\n  };\n  const handleEndTimeChange = e => {\n    setEndTime(e.target.value);\n    if (startTime) {\n      const {\n        totalTime,\n        nightShift\n      } = calculateTotalTimeAndNightShift(startTime, e.target.value, nextDay);\n      setTotalTime(totalTime);\n      setNightShiftHours(nightShift);\n    }\n  };\n  const handleNextDayToggle = () => {\n    setNextDay(prev => !prev);\n    if (startTime && endTime) {\n      const {\n        totalTime,\n        nightShift\n      } = calculateTotalTimeAndNightShift(startTime, endTime, !nextDay);\n      setTotalTime(totalTime);\n      setNightShiftHours(nightShift);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), weekDates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), weekDates.map(date => {\n            var _timesheetData$employ, _timesheetData$employ2;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSetTime(employee.id, date),\n                children: \"Set Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), ((_timesheetData$employ = timesheetData[employee.id]) === null || _timesheetData$employ === void 0 ? void 0 : (_timesheetData$employ2 = _timesheetData$employ[date]) === null || _timesheetData$employ2 === void 0 ? void 0 : _timesheetData$employ2.totalTime) && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Total Time: \", timesheetData[employee.id][date].totalTime, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Night Shift: \", timesheetData[employee.id][date].nightShift, \" hours\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this)]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this);\n          })]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Set Times for \", selectedEmployee, \" on \", selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: startTime,\n        onChange: handleStartTimeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: endTime,\n        onChange: handleEndTimeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: nextDay,\n          onChange: handleNextDayToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), \"Next Day\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Time: \", totalTime, \" hours\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Night Shift: \", nightShiftHours, \" hours\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleInputChange(selectedEmployee, selectedDate, startTime, endTime, totalTime, nightShiftHours),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCloseModal,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(TimesheetList, \"SRemxNT0BLiQ3Vw1WKCaS94YL/g=\");\n_c = TimesheetList;\nexport default TimesheetList;\nvar _c;\n$RefreshReg$(_c, \"TimesheetList\");","map":{"version":3,"names":["useState","useEffect","collection","getDocs","getDoc","doc","setDoc","db","jsxDEV","_jsxDEV","TimesheetList","weekDates","_s","employees","setEmployees","timesheetData","setTimesheetData","timeAdjustments","setTimeAdjustments","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","nextDay","setNextDay","totalTime","setTotalTime","nightShiftHours","setNightShiftHours","fetchData","employeeSnapshot","employeeData","docs","map","id","data","settingsDocRef","settingsDoc","exists","console","log","error","length","initialTimesheetData","reduce","acc","employee","weekAcc","date","nightShift","fetchTimesheetData","calculateTotalTimeAndNightShift","start","end","startHours","startMinutes","split","Number","endHours","endMinutes","startDate","Date","setHours","endDate","setDate","getDate","totalTimeInHours","nightShiftStart","nightShiftEnd","getHours","Math","min","max","toFixed","saveTimesheetDataToFirebase","employeeId","timesheetDocRef","updatedData","hours","handleInputChange","prevData","newData","querySnapshot","updatedTimesheetData","forEach","handleSetTime","handleCloseModal","handleStartTimeChange","e","target","value","handleEndTimeChange","handleNextDayToggle","prev","children","border","fileName","_jsxFileName","lineNumber","columnNumber","name","_timesheetData$employ","_timesheetData$employ2","onClick","className","type","onChange","checked","_c","$RefreshReg$"],"sources":["/Users/tuvshuu/timesheet/src/TimesheetList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { collection, getDocs, getDoc, doc, setDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\n\nconst TimesheetList = ({ weekDates }) => {\n  const [employees, setEmployees] = useState([]);\n  const [timesheetData, setTimesheetData] = useState({});\n  const [timeAdjustments, setTimeAdjustments] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [nextDay, setNextDay] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [nightShiftHours, setNightShiftHours] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const employeeSnapshot = await getDocs(collection(db, \"employees\"));\n        const employeeData = employeeSnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setEmployees(employeeData);\n\n        const settingsDocRef = doc(db, \"timeAdjustments\", \"settings\");\n        const settingsDoc = await getDoc(settingsDocRef);\n        if (settingsDoc.exists()) {\n          setTimeAdjustments(settingsDoc.data());\n        } else {\n          console.log(\"No time adjustments found\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (employees.length > 0 && weekDates.length > 0) {\n      const initialTimesheetData = employees.reduce((acc, employee) => {\n        acc[employee.id] = weekDates.reduce((weekAcc, date) => {\n          weekAcc[date] = { startTime: \"\", endTime: \"\", totalTime: 0, nightShift: 0 };\n          return weekAcc;\n        }, {});\n        return acc;\n      }, {});\n      setTimesheetData(initialTimesheetData);\n      fetchTimesheetData();\n    }\n  }, [employees, weekDates]);\n\n  const calculateTotalTimeAndNightShift = (start, end, nextDay) => {\n    const [startHours, startMinutes] = start.split(\":\").map(Number);\n    const [endHours, endMinutes] = end.split(\":\").map(Number);\n\n    const startDate = new Date();\n    startDate.setHours(startHours, startMinutes, 0);\n\n    const endDate = new Date();\n    endDate.setHours(endHours, endMinutes, 0);\n    if (nextDay) endDate.setDate(endDate.getDate() + 1);\n\n    const totalTimeInHours = (endDate - startDate) / (1000 * 60 * 60);\n\n    const nightShiftStart = 22;\n    const nightShiftEnd = 6;\n\n    let nightShiftHours = 0;\n\n    if (\n      (startDate.getHours() >= nightShiftStart || startDate.getHours() < nightShiftEnd) ||\n      (endDate.getHours() >= nightShiftStart || endDate.getHours() < nightShiftEnd)\n    ) {\n      if (nextDay || endDate.getDate() !== startDate.getDate()) {\n        nightShiftHours += Math.min(24 - startHours, nightShiftEnd); \n        nightShiftHours += Math.max(endDate.getHours() - nightShiftEnd, 0);\n      }\n    }\n\n    setTotalTime(totalTimeInHours.toFixed(2));\n    setNightShiftHours(nightShiftHours.toFixed(2));\n\n    return { totalTime: totalTimeInHours.toFixed(2), nightShift: nightShiftHours.toFixed(2) };\n  };\n\n  const saveTimesheetDataToFirebase = async (employeeId, date, start, end, totalTime, nightShift) => {\n    try {\n      const timesheetDocRef = doc(db, \"timesheets\", employeeId);\n      const timesheetData = await getDoc(timesheetDocRef);\n\n      let updatedData = {};\n\n      if (timesheetData.exists()) {\n        updatedData = timesheetData.data().hours;\n        updatedData[date] = { startTime: start, endTime: end, totalTime, nightShift };\n      } else {\n        updatedData = { [date]: { startTime: start, endTime: end, totalTime, nightShift } };\n      }\n\n      await setDoc(timesheetDocRef, { hours: updatedData });\n      fetchTimesheetData();\n    } catch (error) {\n      console.error(\"Error saving timesheet data:\", error);\n    }\n  };\n\n  const handleInputChange = async (employeeId, date, start, end, totalTime, nightShift) => {\n    setTimesheetData((prevData) => {\n      const newData = { ...prevData };\n      newData[employeeId][date] = { startTime: start, endTime: end, totalTime, nightShift };\n      return newData;\n    });\n\n    await saveTimesheetDataToFirebase(employeeId, date, start, end, totalTime, nightShift);\n  };\n\n  const fetchTimesheetData = async () => {\n    try {\n      const querySnapshot = await getDocs(collection(db, \"timesheets\"));\n      const updatedTimesheetData = {};\n\n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        updatedTimesheetData[doc.id] = data.hours;\n      });\n\n      setTimesheetData(updatedTimesheetData);\n    } catch (error) {\n      console.error(\"Error fetching timesheet data:\", error);\n    }\n  };\n\n  const handleSetTime = (employeeId, date) => {\n    setSelectedEmployee(employeeId);\n    setSelectedDate(date);\n    setModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setStartTime(\"\");\n    setEndTime(\"\");\n    setTotalTime(0);\n    setNightShiftHours(0);\n    setNextDay(false);\n  };\n\n  const handleStartTimeChange = (e) => {\n    setStartTime(e.target.value);\n    if (endTime) {\n      const { totalTime, nightShift } = calculateTotalTimeAndNightShift(e.target.value, endTime, nextDay);\n      setTotalTime(totalTime);\n      setNightShiftHours(nightShift);\n    }\n  };\n\n  const handleEndTimeChange = (e) => {\n    setEndTime(e.target.value);\n    if (startTime) {\n      const { totalTime, nightShift } = calculateTotalTimeAndNightShift(startTime, e.target.value, nextDay);\n      setTotalTime(totalTime);\n      setNightShiftHours(nightShift);\n    }\n  };\n\n  const handleNextDayToggle = () => {\n    setNextDay((prev) => !prev);\n    if (startTime && endTime) {\n      const { totalTime, nightShift } = calculateTotalTimeAndNightShift(startTime, endTime, !nextDay);\n      setTotalTime(totalTime);\n      setNightShiftHours(nightShift);\n    }\n  };\n\n  return (\n    <div>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Employee</th>\n            {weekDates.map((date) => (\n              <th key={date}>{date}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => (\n            <tr key={employee.id}>\n              <td>{employee.name}</td>\n              {weekDates.map((date) => (\n                <td key={date}>\n                  <button onClick={() => handleSetTime(employee.id, date)}>Set Time</button>\n                  {timesheetData[employee.id]?.[date]?.totalTime && (\n                    <div>\n                      <p>Total Time: {timesheetData[employee.id][date].totalTime} hours</p>\n                      <p>Night Shift: {timesheetData[employee.id][date].nightShift} hours</p>\n                    </div>\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {modalOpen && (\n        <div className=\"modal\">\n          <h2>Set Times for {selectedEmployee} on {selectedDate}</h2>\n          <label>Start Time:</label>\n          <input type=\"time\" value={startTime} onChange={handleStartTimeChange} />\n          <label>End Time:</label>\n          <input type=\"time\" value={endTime} onChange={handleEndTimeChange} />\n          <label>\n            <input type=\"checkbox\" checked={nextDay} onChange={handleNextDayToggle} />\n            Next Day\n          </label>\n          <p>Total Time: {totalTime} hours</p>\n          <p>Night Shift: {nightShiftHours} hours</p>\n          <button onClick={() => handleInputChange(selectedEmployee, selectedDate, startTime, endTime, totalTime, nightShiftHours)}>Save</button>\n          <button onClick={handleCloseModal}>Close</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimesheetList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}